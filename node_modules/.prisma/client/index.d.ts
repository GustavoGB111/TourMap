
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User_Admin
 * 
 */
export type User_Admin = $Result.DefaultSelection<Prisma.$User_AdminPayload>
/**
 * Model User_Client
 * 
 */
export type User_Client = $Result.DefaultSelection<Prisma.$User_ClientPayload>
/**
 * Model User_Business
 * 
 */
export type User_Business = $Result.DefaultSelection<Prisma.$User_BusinessPayload>
/**
 * Model Ponto_Comercial
 * 
 */
export type Ponto_Comercial = $Result.DefaultSelection<Prisma.$Ponto_ComercialPayload>
/**
 * Model Ponto_Turistico
 * 
 */
export type Ponto_Turistico = $Result.DefaultSelection<Prisma.$Ponto_TuristicoPayload>
/**
 * Model Travel_Road_Map
 * 
 */
export type Travel_Road_Map = $Result.DefaultSelection<Prisma.$Travel_Road_MapPayload>
/**
 * Model Country
 * 
 */
export type Country = $Result.DefaultSelection<Prisma.$CountryPayload>
/**
 * Model State
 * 
 */
export type State = $Result.DefaultSelection<Prisma.$StatePayload>
/**
 * Model City
 * 
 */
export type City = $Result.DefaultSelection<Prisma.$CityPayload>
/**
 * Model ImageTouristPoint
 * 
 */
export type ImageTouristPoint = $Result.DefaultSelection<Prisma.$ImageTouristPointPayload>
/**
 * Model ImageCommercialPoint
 * 
 */
export type ImageCommercialPoint = $Result.DefaultSelection<Prisma.$ImageCommercialPointPayload>
/**
 * Model ImageRoadMap
 * 
 */
export type ImageRoadMap = $Result.DefaultSelection<Prisma.$ImageRoadMapPayload>
/**
 * Model CommentRoadMap
 * 
 */
export type CommentRoadMap = $Result.DefaultSelection<Prisma.$CommentRoadMapPayload>
/**
 * Model CommentTouristPoint
 * 
 */
export type CommentTouristPoint = $Result.DefaultSelection<Prisma.$CommentTouristPointPayload>
/**
 * Model CommentCommercialPoint
 * 
 */
export type CommentCommercialPoint = $Result.DefaultSelection<Prisma.$CommentCommercialPointPayload>
/**
 * Model AvaliationRoadMap
 * 
 */
export type AvaliationRoadMap = $Result.DefaultSelection<Prisma.$AvaliationRoadMapPayload>
/**
 * Model AvaliationTouristPoint
 * 
 */
export type AvaliationTouristPoint = $Result.DefaultSelection<Prisma.$AvaliationTouristPointPayload>
/**
 * Model AvaliationCommercialPoint
 * 
 */
export type AvaliationCommercialPoint = $Result.DefaultSelection<Prisma.$AvaliationCommercialPointPayload>
/**
 * Model FavoriteCommercialPoint
 * 
 */
export type FavoriteCommercialPoint = $Result.DefaultSelection<Prisma.$FavoriteCommercialPointPayload>
/**
 * Model FavoriteTouristPoint
 * 
 */
export type FavoriteTouristPoint = $Result.DefaultSelection<Prisma.$FavoriteTouristPointPayload>
/**
 * Model FavoriteRoadMap
 * 
 */
export type FavoriteRoadMap = $Result.DefaultSelection<Prisma.$FavoriteRoadMapPayload>
/**
 * Model reportTouristPoint
 * 
 */
export type reportTouristPoint = $Result.DefaultSelection<Prisma.$reportTouristPointPayload>
/**
 * Model reportCommercialPoint
 * 
 */
export type reportCommercialPoint = $Result.DefaultSelection<Prisma.$reportCommercialPointPayload>
/**
 * Model reportRoadMap
 * 
 */
export type reportRoadMap = $Result.DefaultSelection<Prisma.$reportRoadMapPayload>
/**
 * Model notificationRoadMap
 * 
 */
export type notificationRoadMap = $Result.DefaultSelection<Prisma.$notificationRoadMapPayload>
/**
 * Model notificationTouristPoint
 * 
 */
export type notificationTouristPoint = $Result.DefaultSelection<Prisma.$notificationTouristPointPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more User_Admins
 * const user_Admins = await prisma.user_Admin.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more User_Admins
   * const user_Admins = await prisma.user_Admin.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user_Admin`: Exposes CRUD operations for the **User_Admin** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_Admins
    * const user_Admins = await prisma.user_Admin.findMany()
    * ```
    */
  get user_Admin(): Prisma.User_AdminDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_Client`: Exposes CRUD operations for the **User_Client** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_Clients
    * const user_Clients = await prisma.user_Client.findMany()
    * ```
    */
  get user_Client(): Prisma.User_ClientDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_Business`: Exposes CRUD operations for the **User_Business** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_Businesses
    * const user_Businesses = await prisma.user_Business.findMany()
    * ```
    */
  get user_Business(): Prisma.User_BusinessDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ponto_Comercial`: Exposes CRUD operations for the **Ponto_Comercial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ponto_Comercials
    * const ponto_Comercials = await prisma.ponto_Comercial.findMany()
    * ```
    */
  get ponto_Comercial(): Prisma.Ponto_ComercialDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ponto_Turistico`: Exposes CRUD operations for the **Ponto_Turistico** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ponto_Turisticos
    * const ponto_Turisticos = await prisma.ponto_Turistico.findMany()
    * ```
    */
  get ponto_Turistico(): Prisma.Ponto_TuristicoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.travel_Road_Map`: Exposes CRUD operations for the **Travel_Road_Map** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Travel_Road_Maps
    * const travel_Road_Maps = await prisma.travel_Road_Map.findMany()
    * ```
    */
  get travel_Road_Map(): Prisma.Travel_Road_MapDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.country`: Exposes CRUD operations for the **Country** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Countries
    * const countries = await prisma.country.findMany()
    * ```
    */
  get country(): Prisma.CountryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.state`: Exposes CRUD operations for the **State** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more States
    * const states = await prisma.state.findMany()
    * ```
    */
  get state(): Prisma.StateDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.city`: Exposes CRUD operations for the **City** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cities
    * const cities = await prisma.city.findMany()
    * ```
    */
  get city(): Prisma.CityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.imageTouristPoint`: Exposes CRUD operations for the **ImageTouristPoint** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ImageTouristPoints
    * const imageTouristPoints = await prisma.imageTouristPoint.findMany()
    * ```
    */
  get imageTouristPoint(): Prisma.ImageTouristPointDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.imageCommercialPoint`: Exposes CRUD operations for the **ImageCommercialPoint** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ImageCommercialPoints
    * const imageCommercialPoints = await prisma.imageCommercialPoint.findMany()
    * ```
    */
  get imageCommercialPoint(): Prisma.ImageCommercialPointDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.imageRoadMap`: Exposes CRUD operations for the **ImageRoadMap** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ImageRoadMaps
    * const imageRoadMaps = await prisma.imageRoadMap.findMany()
    * ```
    */
  get imageRoadMap(): Prisma.ImageRoadMapDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.commentRoadMap`: Exposes CRUD operations for the **CommentRoadMap** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CommentRoadMaps
    * const commentRoadMaps = await prisma.commentRoadMap.findMany()
    * ```
    */
  get commentRoadMap(): Prisma.CommentRoadMapDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.commentTouristPoint`: Exposes CRUD operations for the **CommentTouristPoint** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CommentTouristPoints
    * const commentTouristPoints = await prisma.commentTouristPoint.findMany()
    * ```
    */
  get commentTouristPoint(): Prisma.CommentTouristPointDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.commentCommercialPoint`: Exposes CRUD operations for the **CommentCommercialPoint** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CommentCommercialPoints
    * const commentCommercialPoints = await prisma.commentCommercialPoint.findMany()
    * ```
    */
  get commentCommercialPoint(): Prisma.CommentCommercialPointDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.avaliationRoadMap`: Exposes CRUD operations for the **AvaliationRoadMap** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AvaliationRoadMaps
    * const avaliationRoadMaps = await prisma.avaliationRoadMap.findMany()
    * ```
    */
  get avaliationRoadMap(): Prisma.AvaliationRoadMapDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.avaliationTouristPoint`: Exposes CRUD operations for the **AvaliationTouristPoint** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AvaliationTouristPoints
    * const avaliationTouristPoints = await prisma.avaliationTouristPoint.findMany()
    * ```
    */
  get avaliationTouristPoint(): Prisma.AvaliationTouristPointDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.avaliationCommercialPoint`: Exposes CRUD operations for the **AvaliationCommercialPoint** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AvaliationCommercialPoints
    * const avaliationCommercialPoints = await prisma.avaliationCommercialPoint.findMany()
    * ```
    */
  get avaliationCommercialPoint(): Prisma.AvaliationCommercialPointDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.favoriteCommercialPoint`: Exposes CRUD operations for the **FavoriteCommercialPoint** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FavoriteCommercialPoints
    * const favoriteCommercialPoints = await prisma.favoriteCommercialPoint.findMany()
    * ```
    */
  get favoriteCommercialPoint(): Prisma.FavoriteCommercialPointDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.favoriteTouristPoint`: Exposes CRUD operations for the **FavoriteTouristPoint** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FavoriteTouristPoints
    * const favoriteTouristPoints = await prisma.favoriteTouristPoint.findMany()
    * ```
    */
  get favoriteTouristPoint(): Prisma.FavoriteTouristPointDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.favoriteRoadMap`: Exposes CRUD operations for the **FavoriteRoadMap** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FavoriteRoadMaps
    * const favoriteRoadMaps = await prisma.favoriteRoadMap.findMany()
    * ```
    */
  get favoriteRoadMap(): Prisma.FavoriteRoadMapDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reportTouristPoint`: Exposes CRUD operations for the **reportTouristPoint** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReportTouristPoints
    * const reportTouristPoints = await prisma.reportTouristPoint.findMany()
    * ```
    */
  get reportTouristPoint(): Prisma.reportTouristPointDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reportCommercialPoint`: Exposes CRUD operations for the **reportCommercialPoint** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReportCommercialPoints
    * const reportCommercialPoints = await prisma.reportCommercialPoint.findMany()
    * ```
    */
  get reportCommercialPoint(): Prisma.reportCommercialPointDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reportRoadMap`: Exposes CRUD operations for the **reportRoadMap** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReportRoadMaps
    * const reportRoadMaps = await prisma.reportRoadMap.findMany()
    * ```
    */
  get reportRoadMap(): Prisma.reportRoadMapDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notificationRoadMap`: Exposes CRUD operations for the **notificationRoadMap** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more NotificationRoadMaps
    * const notificationRoadMaps = await prisma.notificationRoadMap.findMany()
    * ```
    */
  get notificationRoadMap(): Prisma.notificationRoadMapDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notificationTouristPoint`: Exposes CRUD operations for the **notificationTouristPoint** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more NotificationTouristPoints
    * const notificationTouristPoints = await prisma.notificationTouristPoint.findMany()
    * ```
    */
  get notificationTouristPoint(): Prisma.notificationTouristPointDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User_Admin: 'User_Admin',
    User_Client: 'User_Client',
    User_Business: 'User_Business',
    Ponto_Comercial: 'Ponto_Comercial',
    Ponto_Turistico: 'Ponto_Turistico',
    Travel_Road_Map: 'Travel_Road_Map',
    Country: 'Country',
    State: 'State',
    City: 'City',
    ImageTouristPoint: 'ImageTouristPoint',
    ImageCommercialPoint: 'ImageCommercialPoint',
    ImageRoadMap: 'ImageRoadMap',
    CommentRoadMap: 'CommentRoadMap',
    CommentTouristPoint: 'CommentTouristPoint',
    CommentCommercialPoint: 'CommentCommercialPoint',
    AvaliationRoadMap: 'AvaliationRoadMap',
    AvaliationTouristPoint: 'AvaliationTouristPoint',
    AvaliationCommercialPoint: 'AvaliationCommercialPoint',
    FavoriteCommercialPoint: 'FavoriteCommercialPoint',
    FavoriteTouristPoint: 'FavoriteTouristPoint',
    FavoriteRoadMap: 'FavoriteRoadMap',
    reportTouristPoint: 'reportTouristPoint',
    reportCommercialPoint: 'reportCommercialPoint',
    reportRoadMap: 'reportRoadMap',
    notificationRoadMap: 'notificationRoadMap',
    notificationTouristPoint: 'notificationTouristPoint'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user_Admin" | "user_Client" | "user_Business" | "ponto_Comercial" | "ponto_Turistico" | "travel_Road_Map" | "country" | "state" | "city" | "imageTouristPoint" | "imageCommercialPoint" | "imageRoadMap" | "commentRoadMap" | "commentTouristPoint" | "commentCommercialPoint" | "avaliationRoadMap" | "avaliationTouristPoint" | "avaliationCommercialPoint" | "favoriteCommercialPoint" | "favoriteTouristPoint" | "favoriteRoadMap" | "reportTouristPoint" | "reportCommercialPoint" | "reportRoadMap" | "notificationRoadMap" | "notificationTouristPoint"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User_Admin: {
        payload: Prisma.$User_AdminPayload<ExtArgs>
        fields: Prisma.User_AdminFieldRefs
        operations: {
          findUnique: {
            args: Prisma.User_AdminFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_AdminPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.User_AdminFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_AdminPayload>
          }
          findFirst: {
            args: Prisma.User_AdminFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_AdminPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.User_AdminFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_AdminPayload>
          }
          findMany: {
            args: Prisma.User_AdminFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_AdminPayload>[]
          }
          create: {
            args: Prisma.User_AdminCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_AdminPayload>
          }
          createMany: {
            args: Prisma.User_AdminCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.User_AdminDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_AdminPayload>
          }
          update: {
            args: Prisma.User_AdminUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_AdminPayload>
          }
          deleteMany: {
            args: Prisma.User_AdminDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.User_AdminUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.User_AdminUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_AdminPayload>
          }
          aggregate: {
            args: Prisma.User_AdminAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_Admin>
          }
          groupBy: {
            args: Prisma.User_AdminGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_AdminGroupByOutputType>[]
          }
          count: {
            args: Prisma.User_AdminCountArgs<ExtArgs>
            result: $Utils.Optional<User_AdminCountAggregateOutputType> | number
          }
        }
      }
      User_Client: {
        payload: Prisma.$User_ClientPayload<ExtArgs>
        fields: Prisma.User_ClientFieldRefs
        operations: {
          findUnique: {
            args: Prisma.User_ClientFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_ClientPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.User_ClientFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_ClientPayload>
          }
          findFirst: {
            args: Prisma.User_ClientFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_ClientPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.User_ClientFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_ClientPayload>
          }
          findMany: {
            args: Prisma.User_ClientFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_ClientPayload>[]
          }
          create: {
            args: Prisma.User_ClientCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_ClientPayload>
          }
          createMany: {
            args: Prisma.User_ClientCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.User_ClientDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_ClientPayload>
          }
          update: {
            args: Prisma.User_ClientUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_ClientPayload>
          }
          deleteMany: {
            args: Prisma.User_ClientDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.User_ClientUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.User_ClientUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_ClientPayload>
          }
          aggregate: {
            args: Prisma.User_ClientAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_Client>
          }
          groupBy: {
            args: Prisma.User_ClientGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_ClientGroupByOutputType>[]
          }
          count: {
            args: Prisma.User_ClientCountArgs<ExtArgs>
            result: $Utils.Optional<User_ClientCountAggregateOutputType> | number
          }
        }
      }
      User_Business: {
        payload: Prisma.$User_BusinessPayload<ExtArgs>
        fields: Prisma.User_BusinessFieldRefs
        operations: {
          findUnique: {
            args: Prisma.User_BusinessFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_BusinessPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.User_BusinessFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_BusinessPayload>
          }
          findFirst: {
            args: Prisma.User_BusinessFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_BusinessPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.User_BusinessFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_BusinessPayload>
          }
          findMany: {
            args: Prisma.User_BusinessFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_BusinessPayload>[]
          }
          create: {
            args: Prisma.User_BusinessCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_BusinessPayload>
          }
          createMany: {
            args: Prisma.User_BusinessCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.User_BusinessDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_BusinessPayload>
          }
          update: {
            args: Prisma.User_BusinessUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_BusinessPayload>
          }
          deleteMany: {
            args: Prisma.User_BusinessDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.User_BusinessUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.User_BusinessUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$User_BusinessPayload>
          }
          aggregate: {
            args: Prisma.User_BusinessAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_Business>
          }
          groupBy: {
            args: Prisma.User_BusinessGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_BusinessGroupByOutputType>[]
          }
          count: {
            args: Prisma.User_BusinessCountArgs<ExtArgs>
            result: $Utils.Optional<User_BusinessCountAggregateOutputType> | number
          }
        }
      }
      Ponto_Comercial: {
        payload: Prisma.$Ponto_ComercialPayload<ExtArgs>
        fields: Prisma.Ponto_ComercialFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Ponto_ComercialFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ponto_ComercialPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Ponto_ComercialFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ponto_ComercialPayload>
          }
          findFirst: {
            args: Prisma.Ponto_ComercialFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ponto_ComercialPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Ponto_ComercialFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ponto_ComercialPayload>
          }
          findMany: {
            args: Prisma.Ponto_ComercialFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ponto_ComercialPayload>[]
          }
          create: {
            args: Prisma.Ponto_ComercialCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ponto_ComercialPayload>
          }
          createMany: {
            args: Prisma.Ponto_ComercialCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Ponto_ComercialDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ponto_ComercialPayload>
          }
          update: {
            args: Prisma.Ponto_ComercialUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ponto_ComercialPayload>
          }
          deleteMany: {
            args: Prisma.Ponto_ComercialDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Ponto_ComercialUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Ponto_ComercialUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ponto_ComercialPayload>
          }
          aggregate: {
            args: Prisma.Ponto_ComercialAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePonto_Comercial>
          }
          groupBy: {
            args: Prisma.Ponto_ComercialGroupByArgs<ExtArgs>
            result: $Utils.Optional<Ponto_ComercialGroupByOutputType>[]
          }
          count: {
            args: Prisma.Ponto_ComercialCountArgs<ExtArgs>
            result: $Utils.Optional<Ponto_ComercialCountAggregateOutputType> | number
          }
        }
      }
      Ponto_Turistico: {
        payload: Prisma.$Ponto_TuristicoPayload<ExtArgs>
        fields: Prisma.Ponto_TuristicoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Ponto_TuristicoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ponto_TuristicoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Ponto_TuristicoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ponto_TuristicoPayload>
          }
          findFirst: {
            args: Prisma.Ponto_TuristicoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ponto_TuristicoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Ponto_TuristicoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ponto_TuristicoPayload>
          }
          findMany: {
            args: Prisma.Ponto_TuristicoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ponto_TuristicoPayload>[]
          }
          create: {
            args: Prisma.Ponto_TuristicoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ponto_TuristicoPayload>
          }
          createMany: {
            args: Prisma.Ponto_TuristicoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Ponto_TuristicoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ponto_TuristicoPayload>
          }
          update: {
            args: Prisma.Ponto_TuristicoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ponto_TuristicoPayload>
          }
          deleteMany: {
            args: Prisma.Ponto_TuristicoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Ponto_TuristicoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Ponto_TuristicoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Ponto_TuristicoPayload>
          }
          aggregate: {
            args: Prisma.Ponto_TuristicoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePonto_Turistico>
          }
          groupBy: {
            args: Prisma.Ponto_TuristicoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Ponto_TuristicoGroupByOutputType>[]
          }
          count: {
            args: Prisma.Ponto_TuristicoCountArgs<ExtArgs>
            result: $Utils.Optional<Ponto_TuristicoCountAggregateOutputType> | number
          }
        }
      }
      Travel_Road_Map: {
        payload: Prisma.$Travel_Road_MapPayload<ExtArgs>
        fields: Prisma.Travel_Road_MapFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Travel_Road_MapFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Travel_Road_MapPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Travel_Road_MapFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Travel_Road_MapPayload>
          }
          findFirst: {
            args: Prisma.Travel_Road_MapFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Travel_Road_MapPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Travel_Road_MapFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Travel_Road_MapPayload>
          }
          findMany: {
            args: Prisma.Travel_Road_MapFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Travel_Road_MapPayload>[]
          }
          create: {
            args: Prisma.Travel_Road_MapCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Travel_Road_MapPayload>
          }
          createMany: {
            args: Prisma.Travel_Road_MapCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Travel_Road_MapDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Travel_Road_MapPayload>
          }
          update: {
            args: Prisma.Travel_Road_MapUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Travel_Road_MapPayload>
          }
          deleteMany: {
            args: Prisma.Travel_Road_MapDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Travel_Road_MapUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Travel_Road_MapUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Travel_Road_MapPayload>
          }
          aggregate: {
            args: Prisma.Travel_Road_MapAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTravel_Road_Map>
          }
          groupBy: {
            args: Prisma.Travel_Road_MapGroupByArgs<ExtArgs>
            result: $Utils.Optional<Travel_Road_MapGroupByOutputType>[]
          }
          count: {
            args: Prisma.Travel_Road_MapCountArgs<ExtArgs>
            result: $Utils.Optional<Travel_Road_MapCountAggregateOutputType> | number
          }
        }
      }
      Country: {
        payload: Prisma.$CountryPayload<ExtArgs>
        fields: Prisma.CountryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CountryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CountryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>
          }
          findFirst: {
            args: Prisma.CountryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CountryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>
          }
          findMany: {
            args: Prisma.CountryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>[]
          }
          create: {
            args: Prisma.CountryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>
          }
          createMany: {
            args: Prisma.CountryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CountryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>
          }
          update: {
            args: Prisma.CountryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>
          }
          deleteMany: {
            args: Prisma.CountryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CountryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CountryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>
          }
          aggregate: {
            args: Prisma.CountryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCountry>
          }
          groupBy: {
            args: Prisma.CountryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CountryGroupByOutputType>[]
          }
          count: {
            args: Prisma.CountryCountArgs<ExtArgs>
            result: $Utils.Optional<CountryCountAggregateOutputType> | number
          }
        }
      }
      State: {
        payload: Prisma.$StatePayload<ExtArgs>
        fields: Prisma.StateFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StateFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StateFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatePayload>
          }
          findFirst: {
            args: Prisma.StateFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StateFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatePayload>
          }
          findMany: {
            args: Prisma.StateFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatePayload>[]
          }
          create: {
            args: Prisma.StateCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatePayload>
          }
          createMany: {
            args: Prisma.StateCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.StateDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatePayload>
          }
          update: {
            args: Prisma.StateUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatePayload>
          }
          deleteMany: {
            args: Prisma.StateDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StateUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.StateUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatePayload>
          }
          aggregate: {
            args: Prisma.StateAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateState>
          }
          groupBy: {
            args: Prisma.StateGroupByArgs<ExtArgs>
            result: $Utils.Optional<StateGroupByOutputType>[]
          }
          count: {
            args: Prisma.StateCountArgs<ExtArgs>
            result: $Utils.Optional<StateCountAggregateOutputType> | number
          }
        }
      }
      City: {
        payload: Prisma.$CityPayload<ExtArgs>
        fields: Prisma.CityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload>
          }
          findFirst: {
            args: Prisma.CityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload>
          }
          findMany: {
            args: Prisma.CityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload>[]
          }
          create: {
            args: Prisma.CityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload>
          }
          createMany: {
            args: Prisma.CityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload>
          }
          update: {
            args: Prisma.CityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload>
          }
          deleteMany: {
            args: Prisma.CityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CityPayload>
          }
          aggregate: {
            args: Prisma.CityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCity>
          }
          groupBy: {
            args: Prisma.CityGroupByArgs<ExtArgs>
            result: $Utils.Optional<CityGroupByOutputType>[]
          }
          count: {
            args: Prisma.CityCountArgs<ExtArgs>
            result: $Utils.Optional<CityCountAggregateOutputType> | number
          }
        }
      }
      ImageTouristPoint: {
        payload: Prisma.$ImageTouristPointPayload<ExtArgs>
        fields: Prisma.ImageTouristPointFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ImageTouristPointFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageTouristPointPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ImageTouristPointFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageTouristPointPayload>
          }
          findFirst: {
            args: Prisma.ImageTouristPointFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageTouristPointPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ImageTouristPointFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageTouristPointPayload>
          }
          findMany: {
            args: Prisma.ImageTouristPointFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageTouristPointPayload>[]
          }
          create: {
            args: Prisma.ImageTouristPointCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageTouristPointPayload>
          }
          createMany: {
            args: Prisma.ImageTouristPointCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ImageTouristPointDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageTouristPointPayload>
          }
          update: {
            args: Prisma.ImageTouristPointUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageTouristPointPayload>
          }
          deleteMany: {
            args: Prisma.ImageTouristPointDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ImageTouristPointUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ImageTouristPointUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageTouristPointPayload>
          }
          aggregate: {
            args: Prisma.ImageTouristPointAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateImageTouristPoint>
          }
          groupBy: {
            args: Prisma.ImageTouristPointGroupByArgs<ExtArgs>
            result: $Utils.Optional<ImageTouristPointGroupByOutputType>[]
          }
          count: {
            args: Prisma.ImageTouristPointCountArgs<ExtArgs>
            result: $Utils.Optional<ImageTouristPointCountAggregateOutputType> | number
          }
        }
      }
      ImageCommercialPoint: {
        payload: Prisma.$ImageCommercialPointPayload<ExtArgs>
        fields: Prisma.ImageCommercialPointFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ImageCommercialPointFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageCommercialPointPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ImageCommercialPointFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageCommercialPointPayload>
          }
          findFirst: {
            args: Prisma.ImageCommercialPointFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageCommercialPointPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ImageCommercialPointFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageCommercialPointPayload>
          }
          findMany: {
            args: Prisma.ImageCommercialPointFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageCommercialPointPayload>[]
          }
          create: {
            args: Prisma.ImageCommercialPointCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageCommercialPointPayload>
          }
          createMany: {
            args: Prisma.ImageCommercialPointCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ImageCommercialPointDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageCommercialPointPayload>
          }
          update: {
            args: Prisma.ImageCommercialPointUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageCommercialPointPayload>
          }
          deleteMany: {
            args: Prisma.ImageCommercialPointDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ImageCommercialPointUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ImageCommercialPointUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageCommercialPointPayload>
          }
          aggregate: {
            args: Prisma.ImageCommercialPointAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateImageCommercialPoint>
          }
          groupBy: {
            args: Prisma.ImageCommercialPointGroupByArgs<ExtArgs>
            result: $Utils.Optional<ImageCommercialPointGroupByOutputType>[]
          }
          count: {
            args: Prisma.ImageCommercialPointCountArgs<ExtArgs>
            result: $Utils.Optional<ImageCommercialPointCountAggregateOutputType> | number
          }
        }
      }
      ImageRoadMap: {
        payload: Prisma.$ImageRoadMapPayload<ExtArgs>
        fields: Prisma.ImageRoadMapFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ImageRoadMapFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageRoadMapPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ImageRoadMapFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageRoadMapPayload>
          }
          findFirst: {
            args: Prisma.ImageRoadMapFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageRoadMapPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ImageRoadMapFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageRoadMapPayload>
          }
          findMany: {
            args: Prisma.ImageRoadMapFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageRoadMapPayload>[]
          }
          create: {
            args: Prisma.ImageRoadMapCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageRoadMapPayload>
          }
          createMany: {
            args: Prisma.ImageRoadMapCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ImageRoadMapDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageRoadMapPayload>
          }
          update: {
            args: Prisma.ImageRoadMapUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageRoadMapPayload>
          }
          deleteMany: {
            args: Prisma.ImageRoadMapDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ImageRoadMapUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ImageRoadMapUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImageRoadMapPayload>
          }
          aggregate: {
            args: Prisma.ImageRoadMapAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateImageRoadMap>
          }
          groupBy: {
            args: Prisma.ImageRoadMapGroupByArgs<ExtArgs>
            result: $Utils.Optional<ImageRoadMapGroupByOutputType>[]
          }
          count: {
            args: Prisma.ImageRoadMapCountArgs<ExtArgs>
            result: $Utils.Optional<ImageRoadMapCountAggregateOutputType> | number
          }
        }
      }
      CommentRoadMap: {
        payload: Prisma.$CommentRoadMapPayload<ExtArgs>
        fields: Prisma.CommentRoadMapFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CommentRoadMapFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentRoadMapPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CommentRoadMapFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentRoadMapPayload>
          }
          findFirst: {
            args: Prisma.CommentRoadMapFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentRoadMapPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CommentRoadMapFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentRoadMapPayload>
          }
          findMany: {
            args: Prisma.CommentRoadMapFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentRoadMapPayload>[]
          }
          create: {
            args: Prisma.CommentRoadMapCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentRoadMapPayload>
          }
          createMany: {
            args: Prisma.CommentRoadMapCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CommentRoadMapDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentRoadMapPayload>
          }
          update: {
            args: Prisma.CommentRoadMapUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentRoadMapPayload>
          }
          deleteMany: {
            args: Prisma.CommentRoadMapDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CommentRoadMapUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CommentRoadMapUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentRoadMapPayload>
          }
          aggregate: {
            args: Prisma.CommentRoadMapAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommentRoadMap>
          }
          groupBy: {
            args: Prisma.CommentRoadMapGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommentRoadMapGroupByOutputType>[]
          }
          count: {
            args: Prisma.CommentRoadMapCountArgs<ExtArgs>
            result: $Utils.Optional<CommentRoadMapCountAggregateOutputType> | number
          }
        }
      }
      CommentTouristPoint: {
        payload: Prisma.$CommentTouristPointPayload<ExtArgs>
        fields: Prisma.CommentTouristPointFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CommentTouristPointFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentTouristPointPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CommentTouristPointFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentTouristPointPayload>
          }
          findFirst: {
            args: Prisma.CommentTouristPointFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentTouristPointPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CommentTouristPointFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentTouristPointPayload>
          }
          findMany: {
            args: Prisma.CommentTouristPointFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentTouristPointPayload>[]
          }
          create: {
            args: Prisma.CommentTouristPointCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentTouristPointPayload>
          }
          createMany: {
            args: Prisma.CommentTouristPointCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CommentTouristPointDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentTouristPointPayload>
          }
          update: {
            args: Prisma.CommentTouristPointUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentTouristPointPayload>
          }
          deleteMany: {
            args: Prisma.CommentTouristPointDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CommentTouristPointUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CommentTouristPointUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentTouristPointPayload>
          }
          aggregate: {
            args: Prisma.CommentTouristPointAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommentTouristPoint>
          }
          groupBy: {
            args: Prisma.CommentTouristPointGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommentTouristPointGroupByOutputType>[]
          }
          count: {
            args: Prisma.CommentTouristPointCountArgs<ExtArgs>
            result: $Utils.Optional<CommentTouristPointCountAggregateOutputType> | number
          }
        }
      }
      CommentCommercialPoint: {
        payload: Prisma.$CommentCommercialPointPayload<ExtArgs>
        fields: Prisma.CommentCommercialPointFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CommentCommercialPointFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentCommercialPointPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CommentCommercialPointFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentCommercialPointPayload>
          }
          findFirst: {
            args: Prisma.CommentCommercialPointFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentCommercialPointPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CommentCommercialPointFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentCommercialPointPayload>
          }
          findMany: {
            args: Prisma.CommentCommercialPointFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentCommercialPointPayload>[]
          }
          create: {
            args: Prisma.CommentCommercialPointCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentCommercialPointPayload>
          }
          createMany: {
            args: Prisma.CommentCommercialPointCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CommentCommercialPointDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentCommercialPointPayload>
          }
          update: {
            args: Prisma.CommentCommercialPointUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentCommercialPointPayload>
          }
          deleteMany: {
            args: Prisma.CommentCommercialPointDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CommentCommercialPointUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CommentCommercialPointUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentCommercialPointPayload>
          }
          aggregate: {
            args: Prisma.CommentCommercialPointAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommentCommercialPoint>
          }
          groupBy: {
            args: Prisma.CommentCommercialPointGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommentCommercialPointGroupByOutputType>[]
          }
          count: {
            args: Prisma.CommentCommercialPointCountArgs<ExtArgs>
            result: $Utils.Optional<CommentCommercialPointCountAggregateOutputType> | number
          }
        }
      }
      AvaliationRoadMap: {
        payload: Prisma.$AvaliationRoadMapPayload<ExtArgs>
        fields: Prisma.AvaliationRoadMapFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AvaliationRoadMapFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationRoadMapPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AvaliationRoadMapFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationRoadMapPayload>
          }
          findFirst: {
            args: Prisma.AvaliationRoadMapFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationRoadMapPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AvaliationRoadMapFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationRoadMapPayload>
          }
          findMany: {
            args: Prisma.AvaliationRoadMapFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationRoadMapPayload>[]
          }
          create: {
            args: Prisma.AvaliationRoadMapCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationRoadMapPayload>
          }
          createMany: {
            args: Prisma.AvaliationRoadMapCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.AvaliationRoadMapDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationRoadMapPayload>
          }
          update: {
            args: Prisma.AvaliationRoadMapUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationRoadMapPayload>
          }
          deleteMany: {
            args: Prisma.AvaliationRoadMapDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AvaliationRoadMapUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AvaliationRoadMapUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationRoadMapPayload>
          }
          aggregate: {
            args: Prisma.AvaliationRoadMapAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAvaliationRoadMap>
          }
          groupBy: {
            args: Prisma.AvaliationRoadMapGroupByArgs<ExtArgs>
            result: $Utils.Optional<AvaliationRoadMapGroupByOutputType>[]
          }
          count: {
            args: Prisma.AvaliationRoadMapCountArgs<ExtArgs>
            result: $Utils.Optional<AvaliationRoadMapCountAggregateOutputType> | number
          }
        }
      }
      AvaliationTouristPoint: {
        payload: Prisma.$AvaliationTouristPointPayload<ExtArgs>
        fields: Prisma.AvaliationTouristPointFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AvaliationTouristPointFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationTouristPointPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AvaliationTouristPointFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationTouristPointPayload>
          }
          findFirst: {
            args: Prisma.AvaliationTouristPointFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationTouristPointPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AvaliationTouristPointFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationTouristPointPayload>
          }
          findMany: {
            args: Prisma.AvaliationTouristPointFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationTouristPointPayload>[]
          }
          create: {
            args: Prisma.AvaliationTouristPointCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationTouristPointPayload>
          }
          createMany: {
            args: Prisma.AvaliationTouristPointCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.AvaliationTouristPointDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationTouristPointPayload>
          }
          update: {
            args: Prisma.AvaliationTouristPointUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationTouristPointPayload>
          }
          deleteMany: {
            args: Prisma.AvaliationTouristPointDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AvaliationTouristPointUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AvaliationTouristPointUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationTouristPointPayload>
          }
          aggregate: {
            args: Prisma.AvaliationTouristPointAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAvaliationTouristPoint>
          }
          groupBy: {
            args: Prisma.AvaliationTouristPointGroupByArgs<ExtArgs>
            result: $Utils.Optional<AvaliationTouristPointGroupByOutputType>[]
          }
          count: {
            args: Prisma.AvaliationTouristPointCountArgs<ExtArgs>
            result: $Utils.Optional<AvaliationTouristPointCountAggregateOutputType> | number
          }
        }
      }
      AvaliationCommercialPoint: {
        payload: Prisma.$AvaliationCommercialPointPayload<ExtArgs>
        fields: Prisma.AvaliationCommercialPointFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AvaliationCommercialPointFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationCommercialPointPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AvaliationCommercialPointFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationCommercialPointPayload>
          }
          findFirst: {
            args: Prisma.AvaliationCommercialPointFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationCommercialPointPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AvaliationCommercialPointFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationCommercialPointPayload>
          }
          findMany: {
            args: Prisma.AvaliationCommercialPointFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationCommercialPointPayload>[]
          }
          create: {
            args: Prisma.AvaliationCommercialPointCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationCommercialPointPayload>
          }
          createMany: {
            args: Prisma.AvaliationCommercialPointCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.AvaliationCommercialPointDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationCommercialPointPayload>
          }
          update: {
            args: Prisma.AvaliationCommercialPointUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationCommercialPointPayload>
          }
          deleteMany: {
            args: Prisma.AvaliationCommercialPointDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AvaliationCommercialPointUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AvaliationCommercialPointUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliationCommercialPointPayload>
          }
          aggregate: {
            args: Prisma.AvaliationCommercialPointAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAvaliationCommercialPoint>
          }
          groupBy: {
            args: Prisma.AvaliationCommercialPointGroupByArgs<ExtArgs>
            result: $Utils.Optional<AvaliationCommercialPointGroupByOutputType>[]
          }
          count: {
            args: Prisma.AvaliationCommercialPointCountArgs<ExtArgs>
            result: $Utils.Optional<AvaliationCommercialPointCountAggregateOutputType> | number
          }
        }
      }
      FavoriteCommercialPoint: {
        payload: Prisma.$FavoriteCommercialPointPayload<ExtArgs>
        fields: Prisma.FavoriteCommercialPointFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FavoriteCommercialPointFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteCommercialPointPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FavoriteCommercialPointFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteCommercialPointPayload>
          }
          findFirst: {
            args: Prisma.FavoriteCommercialPointFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteCommercialPointPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FavoriteCommercialPointFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteCommercialPointPayload>
          }
          findMany: {
            args: Prisma.FavoriteCommercialPointFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteCommercialPointPayload>[]
          }
          create: {
            args: Prisma.FavoriteCommercialPointCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteCommercialPointPayload>
          }
          createMany: {
            args: Prisma.FavoriteCommercialPointCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.FavoriteCommercialPointDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteCommercialPointPayload>
          }
          update: {
            args: Prisma.FavoriteCommercialPointUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteCommercialPointPayload>
          }
          deleteMany: {
            args: Prisma.FavoriteCommercialPointDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FavoriteCommercialPointUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FavoriteCommercialPointUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteCommercialPointPayload>
          }
          aggregate: {
            args: Prisma.FavoriteCommercialPointAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFavoriteCommercialPoint>
          }
          groupBy: {
            args: Prisma.FavoriteCommercialPointGroupByArgs<ExtArgs>
            result: $Utils.Optional<FavoriteCommercialPointGroupByOutputType>[]
          }
          count: {
            args: Prisma.FavoriteCommercialPointCountArgs<ExtArgs>
            result: $Utils.Optional<FavoriteCommercialPointCountAggregateOutputType> | number
          }
        }
      }
      FavoriteTouristPoint: {
        payload: Prisma.$FavoriteTouristPointPayload<ExtArgs>
        fields: Prisma.FavoriteTouristPointFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FavoriteTouristPointFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteTouristPointPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FavoriteTouristPointFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteTouristPointPayload>
          }
          findFirst: {
            args: Prisma.FavoriteTouristPointFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteTouristPointPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FavoriteTouristPointFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteTouristPointPayload>
          }
          findMany: {
            args: Prisma.FavoriteTouristPointFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteTouristPointPayload>[]
          }
          create: {
            args: Prisma.FavoriteTouristPointCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteTouristPointPayload>
          }
          createMany: {
            args: Prisma.FavoriteTouristPointCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.FavoriteTouristPointDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteTouristPointPayload>
          }
          update: {
            args: Prisma.FavoriteTouristPointUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteTouristPointPayload>
          }
          deleteMany: {
            args: Prisma.FavoriteTouristPointDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FavoriteTouristPointUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FavoriteTouristPointUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteTouristPointPayload>
          }
          aggregate: {
            args: Prisma.FavoriteTouristPointAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFavoriteTouristPoint>
          }
          groupBy: {
            args: Prisma.FavoriteTouristPointGroupByArgs<ExtArgs>
            result: $Utils.Optional<FavoriteTouristPointGroupByOutputType>[]
          }
          count: {
            args: Prisma.FavoriteTouristPointCountArgs<ExtArgs>
            result: $Utils.Optional<FavoriteTouristPointCountAggregateOutputType> | number
          }
        }
      }
      FavoriteRoadMap: {
        payload: Prisma.$FavoriteRoadMapPayload<ExtArgs>
        fields: Prisma.FavoriteRoadMapFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FavoriteRoadMapFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteRoadMapPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FavoriteRoadMapFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteRoadMapPayload>
          }
          findFirst: {
            args: Prisma.FavoriteRoadMapFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteRoadMapPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FavoriteRoadMapFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteRoadMapPayload>
          }
          findMany: {
            args: Prisma.FavoriteRoadMapFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteRoadMapPayload>[]
          }
          create: {
            args: Prisma.FavoriteRoadMapCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteRoadMapPayload>
          }
          createMany: {
            args: Prisma.FavoriteRoadMapCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.FavoriteRoadMapDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteRoadMapPayload>
          }
          update: {
            args: Prisma.FavoriteRoadMapUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteRoadMapPayload>
          }
          deleteMany: {
            args: Prisma.FavoriteRoadMapDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FavoriteRoadMapUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FavoriteRoadMapUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteRoadMapPayload>
          }
          aggregate: {
            args: Prisma.FavoriteRoadMapAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFavoriteRoadMap>
          }
          groupBy: {
            args: Prisma.FavoriteRoadMapGroupByArgs<ExtArgs>
            result: $Utils.Optional<FavoriteRoadMapGroupByOutputType>[]
          }
          count: {
            args: Prisma.FavoriteRoadMapCountArgs<ExtArgs>
            result: $Utils.Optional<FavoriteRoadMapCountAggregateOutputType> | number
          }
        }
      }
      reportTouristPoint: {
        payload: Prisma.$reportTouristPointPayload<ExtArgs>
        fields: Prisma.reportTouristPointFieldRefs
        operations: {
          findUnique: {
            args: Prisma.reportTouristPointFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportTouristPointPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.reportTouristPointFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportTouristPointPayload>
          }
          findFirst: {
            args: Prisma.reportTouristPointFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportTouristPointPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.reportTouristPointFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportTouristPointPayload>
          }
          findMany: {
            args: Prisma.reportTouristPointFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportTouristPointPayload>[]
          }
          create: {
            args: Prisma.reportTouristPointCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportTouristPointPayload>
          }
          createMany: {
            args: Prisma.reportTouristPointCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.reportTouristPointDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportTouristPointPayload>
          }
          update: {
            args: Prisma.reportTouristPointUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportTouristPointPayload>
          }
          deleteMany: {
            args: Prisma.reportTouristPointDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.reportTouristPointUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.reportTouristPointUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportTouristPointPayload>
          }
          aggregate: {
            args: Prisma.ReportTouristPointAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReportTouristPoint>
          }
          groupBy: {
            args: Prisma.reportTouristPointGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReportTouristPointGroupByOutputType>[]
          }
          count: {
            args: Prisma.reportTouristPointCountArgs<ExtArgs>
            result: $Utils.Optional<ReportTouristPointCountAggregateOutputType> | number
          }
        }
      }
      reportCommercialPoint: {
        payload: Prisma.$reportCommercialPointPayload<ExtArgs>
        fields: Prisma.reportCommercialPointFieldRefs
        operations: {
          findUnique: {
            args: Prisma.reportCommercialPointFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportCommercialPointPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.reportCommercialPointFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportCommercialPointPayload>
          }
          findFirst: {
            args: Prisma.reportCommercialPointFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportCommercialPointPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.reportCommercialPointFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportCommercialPointPayload>
          }
          findMany: {
            args: Prisma.reportCommercialPointFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportCommercialPointPayload>[]
          }
          create: {
            args: Prisma.reportCommercialPointCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportCommercialPointPayload>
          }
          createMany: {
            args: Prisma.reportCommercialPointCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.reportCommercialPointDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportCommercialPointPayload>
          }
          update: {
            args: Prisma.reportCommercialPointUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportCommercialPointPayload>
          }
          deleteMany: {
            args: Prisma.reportCommercialPointDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.reportCommercialPointUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.reportCommercialPointUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportCommercialPointPayload>
          }
          aggregate: {
            args: Prisma.ReportCommercialPointAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReportCommercialPoint>
          }
          groupBy: {
            args: Prisma.reportCommercialPointGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReportCommercialPointGroupByOutputType>[]
          }
          count: {
            args: Prisma.reportCommercialPointCountArgs<ExtArgs>
            result: $Utils.Optional<ReportCommercialPointCountAggregateOutputType> | number
          }
        }
      }
      reportRoadMap: {
        payload: Prisma.$reportRoadMapPayload<ExtArgs>
        fields: Prisma.reportRoadMapFieldRefs
        operations: {
          findUnique: {
            args: Prisma.reportRoadMapFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportRoadMapPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.reportRoadMapFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportRoadMapPayload>
          }
          findFirst: {
            args: Prisma.reportRoadMapFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportRoadMapPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.reportRoadMapFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportRoadMapPayload>
          }
          findMany: {
            args: Prisma.reportRoadMapFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportRoadMapPayload>[]
          }
          create: {
            args: Prisma.reportRoadMapCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportRoadMapPayload>
          }
          createMany: {
            args: Prisma.reportRoadMapCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.reportRoadMapDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportRoadMapPayload>
          }
          update: {
            args: Prisma.reportRoadMapUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportRoadMapPayload>
          }
          deleteMany: {
            args: Prisma.reportRoadMapDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.reportRoadMapUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.reportRoadMapUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportRoadMapPayload>
          }
          aggregate: {
            args: Prisma.ReportRoadMapAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReportRoadMap>
          }
          groupBy: {
            args: Prisma.reportRoadMapGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReportRoadMapGroupByOutputType>[]
          }
          count: {
            args: Prisma.reportRoadMapCountArgs<ExtArgs>
            result: $Utils.Optional<ReportRoadMapCountAggregateOutputType> | number
          }
        }
      }
      notificationRoadMap: {
        payload: Prisma.$notificationRoadMapPayload<ExtArgs>
        fields: Prisma.notificationRoadMapFieldRefs
        operations: {
          findUnique: {
            args: Prisma.notificationRoadMapFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationRoadMapPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.notificationRoadMapFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationRoadMapPayload>
          }
          findFirst: {
            args: Prisma.notificationRoadMapFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationRoadMapPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.notificationRoadMapFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationRoadMapPayload>
          }
          findMany: {
            args: Prisma.notificationRoadMapFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationRoadMapPayload>[]
          }
          create: {
            args: Prisma.notificationRoadMapCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationRoadMapPayload>
          }
          createMany: {
            args: Prisma.notificationRoadMapCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.notificationRoadMapDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationRoadMapPayload>
          }
          update: {
            args: Prisma.notificationRoadMapUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationRoadMapPayload>
          }
          deleteMany: {
            args: Prisma.notificationRoadMapDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.notificationRoadMapUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.notificationRoadMapUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationRoadMapPayload>
          }
          aggregate: {
            args: Prisma.NotificationRoadMapAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotificationRoadMap>
          }
          groupBy: {
            args: Prisma.notificationRoadMapGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationRoadMapGroupByOutputType>[]
          }
          count: {
            args: Prisma.notificationRoadMapCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationRoadMapCountAggregateOutputType> | number
          }
        }
      }
      notificationTouristPoint: {
        payload: Prisma.$notificationTouristPointPayload<ExtArgs>
        fields: Prisma.notificationTouristPointFieldRefs
        operations: {
          findUnique: {
            args: Prisma.notificationTouristPointFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationTouristPointPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.notificationTouristPointFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationTouristPointPayload>
          }
          findFirst: {
            args: Prisma.notificationTouristPointFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationTouristPointPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.notificationTouristPointFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationTouristPointPayload>
          }
          findMany: {
            args: Prisma.notificationTouristPointFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationTouristPointPayload>[]
          }
          create: {
            args: Prisma.notificationTouristPointCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationTouristPointPayload>
          }
          createMany: {
            args: Prisma.notificationTouristPointCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.notificationTouristPointDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationTouristPointPayload>
          }
          update: {
            args: Prisma.notificationTouristPointUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationTouristPointPayload>
          }
          deleteMany: {
            args: Prisma.notificationTouristPointDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.notificationTouristPointUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.notificationTouristPointUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationTouristPointPayload>
          }
          aggregate: {
            args: Prisma.NotificationTouristPointAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotificationTouristPoint>
          }
          groupBy: {
            args: Prisma.notificationTouristPointGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationTouristPointGroupByOutputType>[]
          }
          count: {
            args: Prisma.notificationTouristPointCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationTouristPointCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user_Admin?: User_AdminOmit
    user_Client?: User_ClientOmit
    user_Business?: User_BusinessOmit
    ponto_Comercial?: Ponto_ComercialOmit
    ponto_Turistico?: Ponto_TuristicoOmit
    travel_Road_Map?: Travel_Road_MapOmit
    country?: CountryOmit
    state?: StateOmit
    city?: CityOmit
    imageTouristPoint?: ImageTouristPointOmit
    imageCommercialPoint?: ImageCommercialPointOmit
    imageRoadMap?: ImageRoadMapOmit
    commentRoadMap?: CommentRoadMapOmit
    commentTouristPoint?: CommentTouristPointOmit
    commentCommercialPoint?: CommentCommercialPointOmit
    avaliationRoadMap?: AvaliationRoadMapOmit
    avaliationTouristPoint?: AvaliationTouristPointOmit
    avaliationCommercialPoint?: AvaliationCommercialPointOmit
    favoriteCommercialPoint?: FavoriteCommercialPointOmit
    favoriteTouristPoint?: FavoriteTouristPointOmit
    favoriteRoadMap?: FavoriteRoadMapOmit
    reportTouristPoint?: reportTouristPointOmit
    reportCommercialPoint?: reportCommercialPointOmit
    reportRoadMap?: reportRoadMapOmit
    notificationRoadMap?: notificationRoadMapOmit
    notificationTouristPoint?: notificationTouristPointOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type User_ClientCountOutputType
   */

  export type User_ClientCountOutputType = {
    avaliationsByEmailClient: number
    avaliationsRoadMapByIdClient: number
    travelRoadMaps: number
    avaliationTouristPointByUserClientEmail: number
    avaliationTouristPointByIdCreator: number
    avaliationCommercialPointByUserClientEmail: number
    avaliationCommercialPointByIdCreator: number
    commentRoadMapByClientEmail: number
    commentRoadMapByClientId: number
    commentTouristPointByClientEmail: number
    commentTouristPointByClientId: number
    commentCommercialPointByClientEmail: number
    commentCommercialPointByClientId: number
    FavoriteCommercialPointByClientId: number
    FavoriteTouristPointPointByClientId: number
    FavoriteRoadMapPointByClientId: number
    userNotificationTouristPointByIdClient: number
    userNotificationRoadMapByIdClient: number
    userReportRoadMapByIdUserReport: number
    userReportCommercialPointByIdUserReport: number
    userReportTouristPointByIdUserReport: number
  }

  export type User_ClientCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    avaliationsByEmailClient?: boolean | User_ClientCountOutputTypeCountAvaliationsByEmailClientArgs
    avaliationsRoadMapByIdClient?: boolean | User_ClientCountOutputTypeCountAvaliationsRoadMapByIdClientArgs
    travelRoadMaps?: boolean | User_ClientCountOutputTypeCountTravelRoadMapsArgs
    avaliationTouristPointByUserClientEmail?: boolean | User_ClientCountOutputTypeCountAvaliationTouristPointByUserClientEmailArgs
    avaliationTouristPointByIdCreator?: boolean | User_ClientCountOutputTypeCountAvaliationTouristPointByIdCreatorArgs
    avaliationCommercialPointByUserClientEmail?: boolean | User_ClientCountOutputTypeCountAvaliationCommercialPointByUserClientEmailArgs
    avaliationCommercialPointByIdCreator?: boolean | User_ClientCountOutputTypeCountAvaliationCommercialPointByIdCreatorArgs
    commentRoadMapByClientEmail?: boolean | User_ClientCountOutputTypeCountCommentRoadMapByClientEmailArgs
    commentRoadMapByClientId?: boolean | User_ClientCountOutputTypeCountCommentRoadMapByClientIdArgs
    commentTouristPointByClientEmail?: boolean | User_ClientCountOutputTypeCountCommentTouristPointByClientEmailArgs
    commentTouristPointByClientId?: boolean | User_ClientCountOutputTypeCountCommentTouristPointByClientIdArgs
    commentCommercialPointByClientEmail?: boolean | User_ClientCountOutputTypeCountCommentCommercialPointByClientEmailArgs
    commentCommercialPointByClientId?: boolean | User_ClientCountOutputTypeCountCommentCommercialPointByClientIdArgs
    FavoriteCommercialPointByClientId?: boolean | User_ClientCountOutputTypeCountFavoriteCommercialPointByClientIdArgs
    FavoriteTouristPointPointByClientId?: boolean | User_ClientCountOutputTypeCountFavoriteTouristPointPointByClientIdArgs
    FavoriteRoadMapPointByClientId?: boolean | User_ClientCountOutputTypeCountFavoriteRoadMapPointByClientIdArgs
    userNotificationTouristPointByIdClient?: boolean | User_ClientCountOutputTypeCountUserNotificationTouristPointByIdClientArgs
    userNotificationRoadMapByIdClient?: boolean | User_ClientCountOutputTypeCountUserNotificationRoadMapByIdClientArgs
    userReportRoadMapByIdUserReport?: boolean | User_ClientCountOutputTypeCountUserReportRoadMapByIdUserReportArgs
    userReportCommercialPointByIdUserReport?: boolean | User_ClientCountOutputTypeCountUserReportCommercialPointByIdUserReportArgs
    userReportTouristPointByIdUserReport?: boolean | User_ClientCountOutputTypeCountUserReportTouristPointByIdUserReportArgs
  }

  // Custom InputTypes
  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_ClientCountOutputType
     */
    select?: User_ClientCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountAvaliationsByEmailClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliationRoadMapWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountAvaliationsRoadMapByIdClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliationRoadMapWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountTravelRoadMapsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Travel_Road_MapWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountAvaliationTouristPointByUserClientEmailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliationTouristPointWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountAvaliationTouristPointByIdCreatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliationTouristPointWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountAvaliationCommercialPointByUserClientEmailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliationCommercialPointWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountAvaliationCommercialPointByIdCreatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliationCommercialPointWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountCommentRoadMapByClientEmailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentRoadMapWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountCommentRoadMapByClientIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentRoadMapWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountCommentTouristPointByClientEmailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentTouristPointWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountCommentTouristPointByClientIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentTouristPointWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountCommentCommercialPointByClientEmailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentCommercialPointWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountCommentCommercialPointByClientIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentCommercialPointWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountFavoriteCommercialPointByClientIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteCommercialPointWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountFavoriteTouristPointPointByClientIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteTouristPointWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountFavoriteRoadMapPointByClientIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteRoadMapWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountUserNotificationTouristPointByIdClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationTouristPointWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountUserNotificationRoadMapByIdClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationRoadMapWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountUserReportRoadMapByIdUserReportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportRoadMapWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountUserReportCommercialPointByIdUserReportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportCommercialPointWhereInput
  }

  /**
   * User_ClientCountOutputType without action
   */
  export type User_ClientCountOutputTypeCountUserReportTouristPointByIdUserReportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportTouristPointWhereInput
  }


  /**
   * Count Type User_BusinessCountOutputType
   */

  export type User_BusinessCountOutputType = {
    pontosComerciais: number
  }

  export type User_BusinessCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pontosComerciais?: boolean | User_BusinessCountOutputTypeCountPontosComerciaisArgs
  }

  // Custom InputTypes
  /**
   * User_BusinessCountOutputType without action
   */
  export type User_BusinessCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_BusinessCountOutputType
     */
    select?: User_BusinessCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * User_BusinessCountOutputType without action
   */
  export type User_BusinessCountOutputTypeCountPontosComerciaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Ponto_ComercialWhereInput
  }


  /**
   * Count Type Ponto_ComercialCountOutputType
   */

  export type Ponto_ComercialCountOutputType = {
    avaliationCommercialPoint: number
    commentCommercialPointByCommercialPointId: number
    FavoriteCommercialPointByCommercialPointId: number
    ImageCommercialPointByCommercialPointId: number
    RoadMapRelation: number
    reportCommercialPointByIdCommercialPoint: number
  }

  export type Ponto_ComercialCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    avaliationCommercialPoint?: boolean | Ponto_ComercialCountOutputTypeCountAvaliationCommercialPointArgs
    commentCommercialPointByCommercialPointId?: boolean | Ponto_ComercialCountOutputTypeCountCommentCommercialPointByCommercialPointIdArgs
    FavoriteCommercialPointByCommercialPointId?: boolean | Ponto_ComercialCountOutputTypeCountFavoriteCommercialPointByCommercialPointIdArgs
    ImageCommercialPointByCommercialPointId?: boolean | Ponto_ComercialCountOutputTypeCountImageCommercialPointByCommercialPointIdArgs
    RoadMapRelation?: boolean | Ponto_ComercialCountOutputTypeCountRoadMapRelationArgs
    reportCommercialPointByIdCommercialPoint?: boolean | Ponto_ComercialCountOutputTypeCountReportCommercialPointByIdCommercialPointArgs
  }

  // Custom InputTypes
  /**
   * Ponto_ComercialCountOutputType without action
   */
  export type Ponto_ComercialCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_ComercialCountOutputType
     */
    select?: Ponto_ComercialCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Ponto_ComercialCountOutputType without action
   */
  export type Ponto_ComercialCountOutputTypeCountAvaliationCommercialPointArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliationCommercialPointWhereInput
  }

  /**
   * Ponto_ComercialCountOutputType without action
   */
  export type Ponto_ComercialCountOutputTypeCountCommentCommercialPointByCommercialPointIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentCommercialPointWhereInput
  }

  /**
   * Ponto_ComercialCountOutputType without action
   */
  export type Ponto_ComercialCountOutputTypeCountFavoriteCommercialPointByCommercialPointIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteCommercialPointWhereInput
  }

  /**
   * Ponto_ComercialCountOutputType without action
   */
  export type Ponto_ComercialCountOutputTypeCountImageCommercialPointByCommercialPointIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ImageCommercialPointWhereInput
  }

  /**
   * Ponto_ComercialCountOutputType without action
   */
  export type Ponto_ComercialCountOutputTypeCountRoadMapRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Travel_Road_MapWhereInput
  }

  /**
   * Ponto_ComercialCountOutputType without action
   */
  export type Ponto_ComercialCountOutputTypeCountReportCommercialPointByIdCommercialPointArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportCommercialPointWhereInput
  }


  /**
   * Count Type Ponto_TuristicoCountOutputType
   */

  export type Ponto_TuristicoCountOutputType = {
    avaliationTouristPoint: number
    commentTouristPointByTouristPointId: number
    FavoriteTouristPointByTouristPointId: number
    ImageTouristPointByTouristPointId: number
    RoadMapRelation: number
    userReportTouristPointByIdTouristPoint: number
    userNotificationTouristPointByIdTouristPoint: number
  }

  export type Ponto_TuristicoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    avaliationTouristPoint?: boolean | Ponto_TuristicoCountOutputTypeCountAvaliationTouristPointArgs
    commentTouristPointByTouristPointId?: boolean | Ponto_TuristicoCountOutputTypeCountCommentTouristPointByTouristPointIdArgs
    FavoriteTouristPointByTouristPointId?: boolean | Ponto_TuristicoCountOutputTypeCountFavoriteTouristPointByTouristPointIdArgs
    ImageTouristPointByTouristPointId?: boolean | Ponto_TuristicoCountOutputTypeCountImageTouristPointByTouristPointIdArgs
    RoadMapRelation?: boolean | Ponto_TuristicoCountOutputTypeCountRoadMapRelationArgs
    userReportTouristPointByIdTouristPoint?: boolean | Ponto_TuristicoCountOutputTypeCountUserReportTouristPointByIdTouristPointArgs
    userNotificationTouristPointByIdTouristPoint?: boolean | Ponto_TuristicoCountOutputTypeCountUserNotificationTouristPointByIdTouristPointArgs
  }

  // Custom InputTypes
  /**
   * Ponto_TuristicoCountOutputType without action
   */
  export type Ponto_TuristicoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_TuristicoCountOutputType
     */
    select?: Ponto_TuristicoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Ponto_TuristicoCountOutputType without action
   */
  export type Ponto_TuristicoCountOutputTypeCountAvaliationTouristPointArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliationTouristPointWhereInput
  }

  /**
   * Ponto_TuristicoCountOutputType without action
   */
  export type Ponto_TuristicoCountOutputTypeCountCommentTouristPointByTouristPointIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentTouristPointWhereInput
  }

  /**
   * Ponto_TuristicoCountOutputType without action
   */
  export type Ponto_TuristicoCountOutputTypeCountFavoriteTouristPointByTouristPointIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteTouristPointWhereInput
  }

  /**
   * Ponto_TuristicoCountOutputType without action
   */
  export type Ponto_TuristicoCountOutputTypeCountImageTouristPointByTouristPointIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ImageTouristPointWhereInput
  }

  /**
   * Ponto_TuristicoCountOutputType without action
   */
  export type Ponto_TuristicoCountOutputTypeCountRoadMapRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Travel_Road_MapWhereInput
  }

  /**
   * Ponto_TuristicoCountOutputType without action
   */
  export type Ponto_TuristicoCountOutputTypeCountUserReportTouristPointByIdTouristPointArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportTouristPointWhereInput
  }

  /**
   * Ponto_TuristicoCountOutputType without action
   */
  export type Ponto_TuristicoCountOutputTypeCountUserNotificationTouristPointByIdTouristPointArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationTouristPointWhereInput
  }


  /**
   * Count Type Travel_Road_MapCountOutputType
   */

  export type Travel_Road_MapCountOutputType = {
    AvaliationRoadMap: number
    commentRoadMapByRoadMapId: number
    FavoriteRoadMapByRoadMapId: number
    ImageRoadMapByRoadMapId: number
    PontosTuristicosRelation: number
    PontosComerciaisRelation: number
    CountryRelation: number
    StateRelation: number
    CityRelation: number
    userReportRoadMapByIdRoadMap: number
    userNotificationRoadMapByIdRoadMap: number
  }

  export type Travel_Road_MapCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AvaliationRoadMap?: boolean | Travel_Road_MapCountOutputTypeCountAvaliationRoadMapArgs
    commentRoadMapByRoadMapId?: boolean | Travel_Road_MapCountOutputTypeCountCommentRoadMapByRoadMapIdArgs
    FavoriteRoadMapByRoadMapId?: boolean | Travel_Road_MapCountOutputTypeCountFavoriteRoadMapByRoadMapIdArgs
    ImageRoadMapByRoadMapId?: boolean | Travel_Road_MapCountOutputTypeCountImageRoadMapByRoadMapIdArgs
    PontosTuristicosRelation?: boolean | Travel_Road_MapCountOutputTypeCountPontosTuristicosRelationArgs
    PontosComerciaisRelation?: boolean | Travel_Road_MapCountOutputTypeCountPontosComerciaisRelationArgs
    CountryRelation?: boolean | Travel_Road_MapCountOutputTypeCountCountryRelationArgs
    StateRelation?: boolean | Travel_Road_MapCountOutputTypeCountStateRelationArgs
    CityRelation?: boolean | Travel_Road_MapCountOutputTypeCountCityRelationArgs
    userReportRoadMapByIdRoadMap?: boolean | Travel_Road_MapCountOutputTypeCountUserReportRoadMapByIdRoadMapArgs
    userNotificationRoadMapByIdRoadMap?: boolean | Travel_Road_MapCountOutputTypeCountUserNotificationRoadMapByIdRoadMapArgs
  }

  // Custom InputTypes
  /**
   * Travel_Road_MapCountOutputType without action
   */
  export type Travel_Road_MapCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Travel_Road_MapCountOutputType
     */
    select?: Travel_Road_MapCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Travel_Road_MapCountOutputType without action
   */
  export type Travel_Road_MapCountOutputTypeCountAvaliationRoadMapArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliationRoadMapWhereInput
  }

  /**
   * Travel_Road_MapCountOutputType without action
   */
  export type Travel_Road_MapCountOutputTypeCountCommentRoadMapByRoadMapIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentRoadMapWhereInput
  }

  /**
   * Travel_Road_MapCountOutputType without action
   */
  export type Travel_Road_MapCountOutputTypeCountFavoriteRoadMapByRoadMapIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteRoadMapWhereInput
  }

  /**
   * Travel_Road_MapCountOutputType without action
   */
  export type Travel_Road_MapCountOutputTypeCountImageRoadMapByRoadMapIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ImageRoadMapWhereInput
  }

  /**
   * Travel_Road_MapCountOutputType without action
   */
  export type Travel_Road_MapCountOutputTypeCountPontosTuristicosRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Ponto_TuristicoWhereInput
  }

  /**
   * Travel_Road_MapCountOutputType without action
   */
  export type Travel_Road_MapCountOutputTypeCountPontosComerciaisRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Ponto_ComercialWhereInput
  }

  /**
   * Travel_Road_MapCountOutputType without action
   */
  export type Travel_Road_MapCountOutputTypeCountCountryRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CountryWhereInput
  }

  /**
   * Travel_Road_MapCountOutputType without action
   */
  export type Travel_Road_MapCountOutputTypeCountStateRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StateWhereInput
  }

  /**
   * Travel_Road_MapCountOutputType without action
   */
  export type Travel_Road_MapCountOutputTypeCountCityRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CityWhereInput
  }

  /**
   * Travel_Road_MapCountOutputType without action
   */
  export type Travel_Road_MapCountOutputTypeCountUserReportRoadMapByIdRoadMapArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportRoadMapWhereInput
  }

  /**
   * Travel_Road_MapCountOutputType without action
   */
  export type Travel_Road_MapCountOutputTypeCountUserNotificationRoadMapByIdRoadMapArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationRoadMapWhereInput
  }


  /**
   * Count Type CountryCountOutputType
   */

  export type CountryCountOutputType = {
    StateByCountryName: number
    CityByCountryName: number
    RoadMapRelation: number
  }

  export type CountryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    StateByCountryName?: boolean | CountryCountOutputTypeCountStateByCountryNameArgs
    CityByCountryName?: boolean | CountryCountOutputTypeCountCityByCountryNameArgs
    RoadMapRelation?: boolean | CountryCountOutputTypeCountRoadMapRelationArgs
  }

  // Custom InputTypes
  /**
   * CountryCountOutputType without action
   */
  export type CountryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CountryCountOutputType
     */
    select?: CountryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CountryCountOutputType without action
   */
  export type CountryCountOutputTypeCountStateByCountryNameArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StateWhereInput
  }

  /**
   * CountryCountOutputType without action
   */
  export type CountryCountOutputTypeCountCityByCountryNameArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CityWhereInput
  }

  /**
   * CountryCountOutputType without action
   */
  export type CountryCountOutputTypeCountRoadMapRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Travel_Road_MapWhereInput
  }


  /**
   * Count Type StateCountOutputType
   */

  export type StateCountOutputType = {
    StateByStateName: number
    RoadMapRelation: number
  }

  export type StateCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    StateByStateName?: boolean | StateCountOutputTypeCountStateByStateNameArgs
    RoadMapRelation?: boolean | StateCountOutputTypeCountRoadMapRelationArgs
  }

  // Custom InputTypes
  /**
   * StateCountOutputType without action
   */
  export type StateCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StateCountOutputType
     */
    select?: StateCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * StateCountOutputType without action
   */
  export type StateCountOutputTypeCountStateByStateNameArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CityWhereInput
  }

  /**
   * StateCountOutputType without action
   */
  export type StateCountOutputTypeCountRoadMapRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Travel_Road_MapWhereInput
  }


  /**
   * Count Type CityCountOutputType
   */

  export type CityCountOutputType = {
    RoadMapRelation: number
  }

  export type CityCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    RoadMapRelation?: boolean | CityCountOutputTypeCountRoadMapRelationArgs
  }

  // Custom InputTypes
  /**
   * CityCountOutputType without action
   */
  export type CityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CityCountOutputType
     */
    select?: CityCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CityCountOutputType without action
   */
  export type CityCountOutputTypeCountRoadMapRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Travel_Road_MapWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User_Admin
   */

  export type AggregateUser_Admin = {
    _count: User_AdminCountAggregateOutputType | null
    _min: User_AdminMinAggregateOutputType | null
    _max: User_AdminMaxAggregateOutputType | null
  }

  export type User_AdminMinAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    password: string | null
  }

  export type User_AdminMaxAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    password: string | null
  }

  export type User_AdminCountAggregateOutputType = {
    id: number
    name: number
    email: number
    password: number
    _all: number
  }


  export type User_AdminMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
  }

  export type User_AdminMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
  }

  export type User_AdminCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    _all?: true
  }

  export type User_AdminAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User_Admin to aggregate.
     */
    where?: User_AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_Admins to fetch.
     */
    orderBy?: User_AdminOrderByWithRelationInput | User_AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: User_AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned User_Admins
    **/
    _count?: true | User_AdminCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_AdminMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_AdminMaxAggregateInputType
  }

  export type GetUser_AdminAggregateType<T extends User_AdminAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_Admin]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_Admin[P]>
      : GetScalarType<T[P], AggregateUser_Admin[P]>
  }




  export type User_AdminGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: User_AdminWhereInput
    orderBy?: User_AdminOrderByWithAggregationInput | User_AdminOrderByWithAggregationInput[]
    by: User_AdminScalarFieldEnum[] | User_AdminScalarFieldEnum
    having?: User_AdminScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_AdminCountAggregateInputType | true
    _min?: User_AdminMinAggregateInputType
    _max?: User_AdminMaxAggregateInputType
  }

  export type User_AdminGroupByOutputType = {
    id: string
    name: string
    email: string
    password: string
    _count: User_AdminCountAggregateOutputType | null
    _min: User_AdminMinAggregateOutputType | null
    _max: User_AdminMaxAggregateOutputType | null
  }

  type GetUser_AdminGroupByPayload<T extends User_AdminGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_AdminGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_AdminGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_AdminGroupByOutputType[P]>
            : GetScalarType<T[P], User_AdminGroupByOutputType[P]>
        }
      >
    >


  export type User_AdminSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
  }, ExtArgs["result"]["user_Admin"]>



  export type User_AdminSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
  }

  export type User_AdminOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "email" | "password", ExtArgs["result"]["user_Admin"]>

  export type $User_AdminPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User_Admin"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      email: string
      password: string
    }, ExtArgs["result"]["user_Admin"]>
    composites: {}
  }

  type User_AdminGetPayload<S extends boolean | null | undefined | User_AdminDefaultArgs> = $Result.GetResult<Prisma.$User_AdminPayload, S>

  type User_AdminCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<User_AdminFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_AdminCountAggregateInputType | true
    }

  export interface User_AdminDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User_Admin'], meta: { name: 'User_Admin' } }
    /**
     * Find zero or one User_Admin that matches the filter.
     * @param {User_AdminFindUniqueArgs} args - Arguments to find a User_Admin
     * @example
     * // Get one User_Admin
     * const user_Admin = await prisma.user_Admin.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends User_AdminFindUniqueArgs>(args: SelectSubset<T, User_AdminFindUniqueArgs<ExtArgs>>): Prisma__User_AdminClient<$Result.GetResult<Prisma.$User_AdminPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_Admin that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {User_AdminFindUniqueOrThrowArgs} args - Arguments to find a User_Admin
     * @example
     * // Get one User_Admin
     * const user_Admin = await prisma.user_Admin.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends User_AdminFindUniqueOrThrowArgs>(args: SelectSubset<T, User_AdminFindUniqueOrThrowArgs<ExtArgs>>): Prisma__User_AdminClient<$Result.GetResult<Prisma.$User_AdminPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_Admin that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_AdminFindFirstArgs} args - Arguments to find a User_Admin
     * @example
     * // Get one User_Admin
     * const user_Admin = await prisma.user_Admin.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends User_AdminFindFirstArgs>(args?: SelectSubset<T, User_AdminFindFirstArgs<ExtArgs>>): Prisma__User_AdminClient<$Result.GetResult<Prisma.$User_AdminPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_Admin that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_AdminFindFirstOrThrowArgs} args - Arguments to find a User_Admin
     * @example
     * // Get one User_Admin
     * const user_Admin = await prisma.user_Admin.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends User_AdminFindFirstOrThrowArgs>(args?: SelectSubset<T, User_AdminFindFirstOrThrowArgs<ExtArgs>>): Prisma__User_AdminClient<$Result.GetResult<Prisma.$User_AdminPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_Admins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_AdminFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_Admins
     * const user_Admins = await prisma.user_Admin.findMany()
     * 
     * // Get first 10 User_Admins
     * const user_Admins = await prisma.user_Admin.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_AdminWithIdOnly = await prisma.user_Admin.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends User_AdminFindManyArgs>(args?: SelectSubset<T, User_AdminFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$User_AdminPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_Admin.
     * @param {User_AdminCreateArgs} args - Arguments to create a User_Admin.
     * @example
     * // Create one User_Admin
     * const User_Admin = await prisma.user_Admin.create({
     *   data: {
     *     // ... data to create a User_Admin
     *   }
     * })
     * 
     */
    create<T extends User_AdminCreateArgs>(args: SelectSubset<T, User_AdminCreateArgs<ExtArgs>>): Prisma__User_AdminClient<$Result.GetResult<Prisma.$User_AdminPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_Admins.
     * @param {User_AdminCreateManyArgs} args - Arguments to create many User_Admins.
     * @example
     * // Create many User_Admins
     * const user_Admin = await prisma.user_Admin.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends User_AdminCreateManyArgs>(args?: SelectSubset<T, User_AdminCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User_Admin.
     * @param {User_AdminDeleteArgs} args - Arguments to delete one User_Admin.
     * @example
     * // Delete one User_Admin
     * const User_Admin = await prisma.user_Admin.delete({
     *   where: {
     *     // ... filter to delete one User_Admin
     *   }
     * })
     * 
     */
    delete<T extends User_AdminDeleteArgs>(args: SelectSubset<T, User_AdminDeleteArgs<ExtArgs>>): Prisma__User_AdminClient<$Result.GetResult<Prisma.$User_AdminPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_Admin.
     * @param {User_AdminUpdateArgs} args - Arguments to update one User_Admin.
     * @example
     * // Update one User_Admin
     * const user_Admin = await prisma.user_Admin.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends User_AdminUpdateArgs>(args: SelectSubset<T, User_AdminUpdateArgs<ExtArgs>>): Prisma__User_AdminClient<$Result.GetResult<Prisma.$User_AdminPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_Admins.
     * @param {User_AdminDeleteManyArgs} args - Arguments to filter User_Admins to delete.
     * @example
     * // Delete a few User_Admins
     * const { count } = await prisma.user_Admin.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends User_AdminDeleteManyArgs>(args?: SelectSubset<T, User_AdminDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_AdminUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_Admins
     * const user_Admin = await prisma.user_Admin.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends User_AdminUpdateManyArgs>(args: SelectSubset<T, User_AdminUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User_Admin.
     * @param {User_AdminUpsertArgs} args - Arguments to update or create a User_Admin.
     * @example
     * // Update or create a User_Admin
     * const user_Admin = await prisma.user_Admin.upsert({
     *   create: {
     *     // ... data to create a User_Admin
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_Admin we want to update
     *   }
     * })
     */
    upsert<T extends User_AdminUpsertArgs>(args: SelectSubset<T, User_AdminUpsertArgs<ExtArgs>>): Prisma__User_AdminClient<$Result.GetResult<Prisma.$User_AdminPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_AdminCountArgs} args - Arguments to filter User_Admins to count.
     * @example
     * // Count the number of User_Admins
     * const count = await prisma.user_Admin.count({
     *   where: {
     *     // ... the filter for the User_Admins we want to count
     *   }
     * })
    **/
    count<T extends User_AdminCountArgs>(
      args?: Subset<T, User_AdminCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_AdminCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_Admin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_AdminAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_AdminAggregateArgs>(args: Subset<T, User_AdminAggregateArgs>): Prisma.PrismaPromise<GetUser_AdminAggregateType<T>>

    /**
     * Group by User_Admin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_AdminGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends User_AdminGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: User_AdminGroupByArgs['orderBy'] }
        : { orderBy?: User_AdminGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, User_AdminGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_AdminGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User_Admin model
   */
  readonly fields: User_AdminFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User_Admin.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__User_AdminClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User_Admin model
   */
  interface User_AdminFieldRefs {
    readonly id: FieldRef<"User_Admin", 'String'>
    readonly name: FieldRef<"User_Admin", 'String'>
    readonly email: FieldRef<"User_Admin", 'String'>
    readonly password: FieldRef<"User_Admin", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User_Admin findUnique
   */
  export type User_AdminFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Admin
     */
    select?: User_AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Admin
     */
    omit?: User_AdminOmit<ExtArgs> | null
    /**
     * Filter, which User_Admin to fetch.
     */
    where: User_AdminWhereUniqueInput
  }

  /**
   * User_Admin findUniqueOrThrow
   */
  export type User_AdminFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Admin
     */
    select?: User_AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Admin
     */
    omit?: User_AdminOmit<ExtArgs> | null
    /**
     * Filter, which User_Admin to fetch.
     */
    where: User_AdminWhereUniqueInput
  }

  /**
   * User_Admin findFirst
   */
  export type User_AdminFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Admin
     */
    select?: User_AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Admin
     */
    omit?: User_AdminOmit<ExtArgs> | null
    /**
     * Filter, which User_Admin to fetch.
     */
    where?: User_AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_Admins to fetch.
     */
    orderBy?: User_AdminOrderByWithRelationInput | User_AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for User_Admins.
     */
    cursor?: User_AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of User_Admins.
     */
    distinct?: User_AdminScalarFieldEnum | User_AdminScalarFieldEnum[]
  }

  /**
   * User_Admin findFirstOrThrow
   */
  export type User_AdminFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Admin
     */
    select?: User_AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Admin
     */
    omit?: User_AdminOmit<ExtArgs> | null
    /**
     * Filter, which User_Admin to fetch.
     */
    where?: User_AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_Admins to fetch.
     */
    orderBy?: User_AdminOrderByWithRelationInput | User_AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for User_Admins.
     */
    cursor?: User_AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of User_Admins.
     */
    distinct?: User_AdminScalarFieldEnum | User_AdminScalarFieldEnum[]
  }

  /**
   * User_Admin findMany
   */
  export type User_AdminFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Admin
     */
    select?: User_AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Admin
     */
    omit?: User_AdminOmit<ExtArgs> | null
    /**
     * Filter, which User_Admins to fetch.
     */
    where?: User_AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_Admins to fetch.
     */
    orderBy?: User_AdminOrderByWithRelationInput | User_AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing User_Admins.
     */
    cursor?: User_AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_Admins.
     */
    skip?: number
    distinct?: User_AdminScalarFieldEnum | User_AdminScalarFieldEnum[]
  }

  /**
   * User_Admin create
   */
  export type User_AdminCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Admin
     */
    select?: User_AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Admin
     */
    omit?: User_AdminOmit<ExtArgs> | null
    /**
     * The data needed to create a User_Admin.
     */
    data: XOR<User_AdminCreateInput, User_AdminUncheckedCreateInput>
  }

  /**
   * User_Admin createMany
   */
  export type User_AdminCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many User_Admins.
     */
    data: User_AdminCreateManyInput | User_AdminCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User_Admin update
   */
  export type User_AdminUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Admin
     */
    select?: User_AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Admin
     */
    omit?: User_AdminOmit<ExtArgs> | null
    /**
     * The data needed to update a User_Admin.
     */
    data: XOR<User_AdminUpdateInput, User_AdminUncheckedUpdateInput>
    /**
     * Choose, which User_Admin to update.
     */
    where: User_AdminWhereUniqueInput
  }

  /**
   * User_Admin updateMany
   */
  export type User_AdminUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update User_Admins.
     */
    data: XOR<User_AdminUpdateManyMutationInput, User_AdminUncheckedUpdateManyInput>
    /**
     * Filter which User_Admins to update
     */
    where?: User_AdminWhereInput
    /**
     * Limit how many User_Admins to update.
     */
    limit?: number
  }

  /**
   * User_Admin upsert
   */
  export type User_AdminUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Admin
     */
    select?: User_AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Admin
     */
    omit?: User_AdminOmit<ExtArgs> | null
    /**
     * The filter to search for the User_Admin to update in case it exists.
     */
    where: User_AdminWhereUniqueInput
    /**
     * In case the User_Admin found by the `where` argument doesn't exist, create a new User_Admin with this data.
     */
    create: XOR<User_AdminCreateInput, User_AdminUncheckedCreateInput>
    /**
     * In case the User_Admin was found with the provided `where` argument, update it with this data.
     */
    update: XOR<User_AdminUpdateInput, User_AdminUncheckedUpdateInput>
  }

  /**
   * User_Admin delete
   */
  export type User_AdminDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Admin
     */
    select?: User_AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Admin
     */
    omit?: User_AdminOmit<ExtArgs> | null
    /**
     * Filter which User_Admin to delete.
     */
    where: User_AdminWhereUniqueInput
  }

  /**
   * User_Admin deleteMany
   */
  export type User_AdminDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User_Admins to delete
     */
    where?: User_AdminWhereInput
    /**
     * Limit how many User_Admins to delete.
     */
    limit?: number
  }

  /**
   * User_Admin without action
   */
  export type User_AdminDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Admin
     */
    select?: User_AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Admin
     */
    omit?: User_AdminOmit<ExtArgs> | null
  }


  /**
   * Model User_Client
   */

  export type AggregateUser_Client = {
    _count: User_ClientCountAggregateOutputType | null
    _min: User_ClientMinAggregateOutputType | null
    _max: User_ClientMaxAggregateOutputType | null
  }

  export type User_ClientMinAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    password: string | null
    userImageUrl: string | null
  }

  export type User_ClientMaxAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    password: string | null
    userImageUrl: string | null
  }

  export type User_ClientCountAggregateOutputType = {
    id: number
    name: number
    email: number
    password: number
    userImageUrl: number
    _all: number
  }


  export type User_ClientMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    userImageUrl?: true
  }

  export type User_ClientMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    userImageUrl?: true
  }

  export type User_ClientCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    userImageUrl?: true
    _all?: true
  }

  export type User_ClientAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User_Client to aggregate.
     */
    where?: User_ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_Clients to fetch.
     */
    orderBy?: User_ClientOrderByWithRelationInput | User_ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: User_ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned User_Clients
    **/
    _count?: true | User_ClientCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_ClientMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_ClientMaxAggregateInputType
  }

  export type GetUser_ClientAggregateType<T extends User_ClientAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_Client]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_Client[P]>
      : GetScalarType<T[P], AggregateUser_Client[P]>
  }




  export type User_ClientGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: User_ClientWhereInput
    orderBy?: User_ClientOrderByWithAggregationInput | User_ClientOrderByWithAggregationInput[]
    by: User_ClientScalarFieldEnum[] | User_ClientScalarFieldEnum
    having?: User_ClientScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_ClientCountAggregateInputType | true
    _min?: User_ClientMinAggregateInputType
    _max?: User_ClientMaxAggregateInputType
  }

  export type User_ClientGroupByOutputType = {
    id: string
    name: string
    email: string
    password: string
    userImageUrl: string | null
    _count: User_ClientCountAggregateOutputType | null
    _min: User_ClientMinAggregateOutputType | null
    _max: User_ClientMaxAggregateOutputType | null
  }

  type GetUser_ClientGroupByPayload<T extends User_ClientGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_ClientGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_ClientGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_ClientGroupByOutputType[P]>
            : GetScalarType<T[P], User_ClientGroupByOutputType[P]>
        }
      >
    >


  export type User_ClientSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    userImageUrl?: boolean
    avaliationsByEmailClient?: boolean | User_Client$avaliationsByEmailClientArgs<ExtArgs>
    avaliationsRoadMapByIdClient?: boolean | User_Client$avaliationsRoadMapByIdClientArgs<ExtArgs>
    travelRoadMaps?: boolean | User_Client$travelRoadMapsArgs<ExtArgs>
    avaliationTouristPointByUserClientEmail?: boolean | User_Client$avaliationTouristPointByUserClientEmailArgs<ExtArgs>
    avaliationTouristPointByIdCreator?: boolean | User_Client$avaliationTouristPointByIdCreatorArgs<ExtArgs>
    avaliationCommercialPointByUserClientEmail?: boolean | User_Client$avaliationCommercialPointByUserClientEmailArgs<ExtArgs>
    avaliationCommercialPointByIdCreator?: boolean | User_Client$avaliationCommercialPointByIdCreatorArgs<ExtArgs>
    commentRoadMapByClientEmail?: boolean | User_Client$commentRoadMapByClientEmailArgs<ExtArgs>
    commentRoadMapByClientId?: boolean | User_Client$commentRoadMapByClientIdArgs<ExtArgs>
    commentTouristPointByClientEmail?: boolean | User_Client$commentTouristPointByClientEmailArgs<ExtArgs>
    commentTouristPointByClientId?: boolean | User_Client$commentTouristPointByClientIdArgs<ExtArgs>
    commentCommercialPointByClientEmail?: boolean | User_Client$commentCommercialPointByClientEmailArgs<ExtArgs>
    commentCommercialPointByClientId?: boolean | User_Client$commentCommercialPointByClientIdArgs<ExtArgs>
    FavoriteCommercialPointByClientId?: boolean | User_Client$FavoriteCommercialPointByClientIdArgs<ExtArgs>
    FavoriteTouristPointPointByClientId?: boolean | User_Client$FavoriteTouristPointPointByClientIdArgs<ExtArgs>
    FavoriteRoadMapPointByClientId?: boolean | User_Client$FavoriteRoadMapPointByClientIdArgs<ExtArgs>
    userNotificationTouristPointByIdClient?: boolean | User_Client$userNotificationTouristPointByIdClientArgs<ExtArgs>
    userNotificationRoadMapByIdClient?: boolean | User_Client$userNotificationRoadMapByIdClientArgs<ExtArgs>
    userReportRoadMapByIdUserReport?: boolean | User_Client$userReportRoadMapByIdUserReportArgs<ExtArgs>
    userReportCommercialPointByIdUserReport?: boolean | User_Client$userReportCommercialPointByIdUserReportArgs<ExtArgs>
    userReportTouristPointByIdUserReport?: boolean | User_Client$userReportTouristPointByIdUserReportArgs<ExtArgs>
    _count?: boolean | User_ClientCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_Client"]>



  export type User_ClientSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    userImageUrl?: boolean
  }

  export type User_ClientOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "email" | "password" | "userImageUrl", ExtArgs["result"]["user_Client"]>
  export type User_ClientInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    avaliationsByEmailClient?: boolean | User_Client$avaliationsByEmailClientArgs<ExtArgs>
    avaliationsRoadMapByIdClient?: boolean | User_Client$avaliationsRoadMapByIdClientArgs<ExtArgs>
    travelRoadMaps?: boolean | User_Client$travelRoadMapsArgs<ExtArgs>
    avaliationTouristPointByUserClientEmail?: boolean | User_Client$avaliationTouristPointByUserClientEmailArgs<ExtArgs>
    avaliationTouristPointByIdCreator?: boolean | User_Client$avaliationTouristPointByIdCreatorArgs<ExtArgs>
    avaliationCommercialPointByUserClientEmail?: boolean | User_Client$avaliationCommercialPointByUserClientEmailArgs<ExtArgs>
    avaliationCommercialPointByIdCreator?: boolean | User_Client$avaliationCommercialPointByIdCreatorArgs<ExtArgs>
    commentRoadMapByClientEmail?: boolean | User_Client$commentRoadMapByClientEmailArgs<ExtArgs>
    commentRoadMapByClientId?: boolean | User_Client$commentRoadMapByClientIdArgs<ExtArgs>
    commentTouristPointByClientEmail?: boolean | User_Client$commentTouristPointByClientEmailArgs<ExtArgs>
    commentTouristPointByClientId?: boolean | User_Client$commentTouristPointByClientIdArgs<ExtArgs>
    commentCommercialPointByClientEmail?: boolean | User_Client$commentCommercialPointByClientEmailArgs<ExtArgs>
    commentCommercialPointByClientId?: boolean | User_Client$commentCommercialPointByClientIdArgs<ExtArgs>
    FavoriteCommercialPointByClientId?: boolean | User_Client$FavoriteCommercialPointByClientIdArgs<ExtArgs>
    FavoriteTouristPointPointByClientId?: boolean | User_Client$FavoriteTouristPointPointByClientIdArgs<ExtArgs>
    FavoriteRoadMapPointByClientId?: boolean | User_Client$FavoriteRoadMapPointByClientIdArgs<ExtArgs>
    userNotificationTouristPointByIdClient?: boolean | User_Client$userNotificationTouristPointByIdClientArgs<ExtArgs>
    userNotificationRoadMapByIdClient?: boolean | User_Client$userNotificationRoadMapByIdClientArgs<ExtArgs>
    userReportRoadMapByIdUserReport?: boolean | User_Client$userReportRoadMapByIdUserReportArgs<ExtArgs>
    userReportCommercialPointByIdUserReport?: boolean | User_Client$userReportCommercialPointByIdUserReportArgs<ExtArgs>
    userReportTouristPointByIdUserReport?: boolean | User_Client$userReportTouristPointByIdUserReportArgs<ExtArgs>
    _count?: boolean | User_ClientCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $User_ClientPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User_Client"
    objects: {
      avaliationsByEmailClient: Prisma.$AvaliationRoadMapPayload<ExtArgs>[]
      avaliationsRoadMapByIdClient: Prisma.$AvaliationRoadMapPayload<ExtArgs>[]
      travelRoadMaps: Prisma.$Travel_Road_MapPayload<ExtArgs>[]
      avaliationTouristPointByUserClientEmail: Prisma.$AvaliationTouristPointPayload<ExtArgs>[]
      avaliationTouristPointByIdCreator: Prisma.$AvaliationTouristPointPayload<ExtArgs>[]
      avaliationCommercialPointByUserClientEmail: Prisma.$AvaliationCommercialPointPayload<ExtArgs>[]
      avaliationCommercialPointByIdCreator: Prisma.$AvaliationCommercialPointPayload<ExtArgs>[]
      commentRoadMapByClientEmail: Prisma.$CommentRoadMapPayload<ExtArgs>[]
      commentRoadMapByClientId: Prisma.$CommentRoadMapPayload<ExtArgs>[]
      commentTouristPointByClientEmail: Prisma.$CommentTouristPointPayload<ExtArgs>[]
      commentTouristPointByClientId: Prisma.$CommentTouristPointPayload<ExtArgs>[]
      commentCommercialPointByClientEmail: Prisma.$CommentCommercialPointPayload<ExtArgs>[]
      commentCommercialPointByClientId: Prisma.$CommentCommercialPointPayload<ExtArgs>[]
      FavoriteCommercialPointByClientId: Prisma.$FavoriteCommercialPointPayload<ExtArgs>[]
      FavoriteTouristPointPointByClientId: Prisma.$FavoriteTouristPointPayload<ExtArgs>[]
      FavoriteRoadMapPointByClientId: Prisma.$FavoriteRoadMapPayload<ExtArgs>[]
      userNotificationTouristPointByIdClient: Prisma.$notificationTouristPointPayload<ExtArgs>[]
      userNotificationRoadMapByIdClient: Prisma.$notificationRoadMapPayload<ExtArgs>[]
      userReportRoadMapByIdUserReport: Prisma.$reportRoadMapPayload<ExtArgs>[]
      userReportCommercialPointByIdUserReport: Prisma.$reportCommercialPointPayload<ExtArgs>[]
      userReportTouristPointByIdUserReport: Prisma.$reportTouristPointPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      email: string
      password: string
      userImageUrl: string | null
    }, ExtArgs["result"]["user_Client"]>
    composites: {}
  }

  type User_ClientGetPayload<S extends boolean | null | undefined | User_ClientDefaultArgs> = $Result.GetResult<Prisma.$User_ClientPayload, S>

  type User_ClientCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<User_ClientFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_ClientCountAggregateInputType | true
    }

  export interface User_ClientDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User_Client'], meta: { name: 'User_Client' } }
    /**
     * Find zero or one User_Client that matches the filter.
     * @param {User_ClientFindUniqueArgs} args - Arguments to find a User_Client
     * @example
     * // Get one User_Client
     * const user_Client = await prisma.user_Client.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends User_ClientFindUniqueArgs>(args: SelectSubset<T, User_ClientFindUniqueArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_Client that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {User_ClientFindUniqueOrThrowArgs} args - Arguments to find a User_Client
     * @example
     * // Get one User_Client
     * const user_Client = await prisma.user_Client.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends User_ClientFindUniqueOrThrowArgs>(args: SelectSubset<T, User_ClientFindUniqueOrThrowArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_Client that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_ClientFindFirstArgs} args - Arguments to find a User_Client
     * @example
     * // Get one User_Client
     * const user_Client = await prisma.user_Client.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends User_ClientFindFirstArgs>(args?: SelectSubset<T, User_ClientFindFirstArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_Client that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_ClientFindFirstOrThrowArgs} args - Arguments to find a User_Client
     * @example
     * // Get one User_Client
     * const user_Client = await prisma.user_Client.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends User_ClientFindFirstOrThrowArgs>(args?: SelectSubset<T, User_ClientFindFirstOrThrowArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_Clients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_ClientFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_Clients
     * const user_Clients = await prisma.user_Client.findMany()
     * 
     * // Get first 10 User_Clients
     * const user_Clients = await prisma.user_Client.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_ClientWithIdOnly = await prisma.user_Client.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends User_ClientFindManyArgs>(args?: SelectSubset<T, User_ClientFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_Client.
     * @param {User_ClientCreateArgs} args - Arguments to create a User_Client.
     * @example
     * // Create one User_Client
     * const User_Client = await prisma.user_Client.create({
     *   data: {
     *     // ... data to create a User_Client
     *   }
     * })
     * 
     */
    create<T extends User_ClientCreateArgs>(args: SelectSubset<T, User_ClientCreateArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_Clients.
     * @param {User_ClientCreateManyArgs} args - Arguments to create many User_Clients.
     * @example
     * // Create many User_Clients
     * const user_Client = await prisma.user_Client.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends User_ClientCreateManyArgs>(args?: SelectSubset<T, User_ClientCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User_Client.
     * @param {User_ClientDeleteArgs} args - Arguments to delete one User_Client.
     * @example
     * // Delete one User_Client
     * const User_Client = await prisma.user_Client.delete({
     *   where: {
     *     // ... filter to delete one User_Client
     *   }
     * })
     * 
     */
    delete<T extends User_ClientDeleteArgs>(args: SelectSubset<T, User_ClientDeleteArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_Client.
     * @param {User_ClientUpdateArgs} args - Arguments to update one User_Client.
     * @example
     * // Update one User_Client
     * const user_Client = await prisma.user_Client.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends User_ClientUpdateArgs>(args: SelectSubset<T, User_ClientUpdateArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_Clients.
     * @param {User_ClientDeleteManyArgs} args - Arguments to filter User_Clients to delete.
     * @example
     * // Delete a few User_Clients
     * const { count } = await prisma.user_Client.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends User_ClientDeleteManyArgs>(args?: SelectSubset<T, User_ClientDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_ClientUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_Clients
     * const user_Client = await prisma.user_Client.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends User_ClientUpdateManyArgs>(args: SelectSubset<T, User_ClientUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User_Client.
     * @param {User_ClientUpsertArgs} args - Arguments to update or create a User_Client.
     * @example
     * // Update or create a User_Client
     * const user_Client = await prisma.user_Client.upsert({
     *   create: {
     *     // ... data to create a User_Client
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_Client we want to update
     *   }
     * })
     */
    upsert<T extends User_ClientUpsertArgs>(args: SelectSubset<T, User_ClientUpsertArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_ClientCountArgs} args - Arguments to filter User_Clients to count.
     * @example
     * // Count the number of User_Clients
     * const count = await prisma.user_Client.count({
     *   where: {
     *     // ... the filter for the User_Clients we want to count
     *   }
     * })
    **/
    count<T extends User_ClientCountArgs>(
      args?: Subset<T, User_ClientCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_ClientCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_Client.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_ClientAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_ClientAggregateArgs>(args: Subset<T, User_ClientAggregateArgs>): Prisma.PrismaPromise<GetUser_ClientAggregateType<T>>

    /**
     * Group by User_Client.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_ClientGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends User_ClientGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: User_ClientGroupByArgs['orderBy'] }
        : { orderBy?: User_ClientGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, User_ClientGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_ClientGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User_Client model
   */
  readonly fields: User_ClientFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User_Client.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__User_ClientClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    avaliationsByEmailClient<T extends User_Client$avaliationsByEmailClientArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$avaliationsByEmailClientArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliationRoadMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    avaliationsRoadMapByIdClient<T extends User_Client$avaliationsRoadMapByIdClientArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$avaliationsRoadMapByIdClientArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliationRoadMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    travelRoadMaps<T extends User_Client$travelRoadMapsArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$travelRoadMapsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    avaliationTouristPointByUserClientEmail<T extends User_Client$avaliationTouristPointByUserClientEmailArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$avaliationTouristPointByUserClientEmailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliationTouristPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    avaliationTouristPointByIdCreator<T extends User_Client$avaliationTouristPointByIdCreatorArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$avaliationTouristPointByIdCreatorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliationTouristPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    avaliationCommercialPointByUserClientEmail<T extends User_Client$avaliationCommercialPointByUserClientEmailArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$avaliationCommercialPointByUserClientEmailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliationCommercialPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    avaliationCommercialPointByIdCreator<T extends User_Client$avaliationCommercialPointByIdCreatorArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$avaliationCommercialPointByIdCreatorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliationCommercialPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    commentRoadMapByClientEmail<T extends User_Client$commentRoadMapByClientEmailArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$commentRoadMapByClientEmailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentRoadMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    commentRoadMapByClientId<T extends User_Client$commentRoadMapByClientIdArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$commentRoadMapByClientIdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentRoadMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    commentTouristPointByClientEmail<T extends User_Client$commentTouristPointByClientEmailArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$commentTouristPointByClientEmailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentTouristPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    commentTouristPointByClientId<T extends User_Client$commentTouristPointByClientIdArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$commentTouristPointByClientIdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentTouristPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    commentCommercialPointByClientEmail<T extends User_Client$commentCommercialPointByClientEmailArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$commentCommercialPointByClientEmailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentCommercialPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    commentCommercialPointByClientId<T extends User_Client$commentCommercialPointByClientIdArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$commentCommercialPointByClientIdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentCommercialPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    FavoriteCommercialPointByClientId<T extends User_Client$FavoriteCommercialPointByClientIdArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$FavoriteCommercialPointByClientIdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoriteCommercialPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    FavoriteTouristPointPointByClientId<T extends User_Client$FavoriteTouristPointPointByClientIdArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$FavoriteTouristPointPointByClientIdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoriteTouristPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    FavoriteRoadMapPointByClientId<T extends User_Client$FavoriteRoadMapPointByClientIdArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$FavoriteRoadMapPointByClientIdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoriteRoadMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userNotificationTouristPointByIdClient<T extends User_Client$userNotificationTouristPointByIdClientArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$userNotificationTouristPointByIdClientArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationTouristPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userNotificationRoadMapByIdClient<T extends User_Client$userNotificationRoadMapByIdClientArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$userNotificationRoadMapByIdClientArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationRoadMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userReportRoadMapByIdUserReport<T extends User_Client$userReportRoadMapByIdUserReportArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$userReportRoadMapByIdUserReportArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportRoadMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userReportCommercialPointByIdUserReport<T extends User_Client$userReportCommercialPointByIdUserReportArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$userReportCommercialPointByIdUserReportArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportCommercialPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userReportTouristPointByIdUserReport<T extends User_Client$userReportTouristPointByIdUserReportArgs<ExtArgs> = {}>(args?: Subset<T, User_Client$userReportTouristPointByIdUserReportArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportTouristPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User_Client model
   */
  interface User_ClientFieldRefs {
    readonly id: FieldRef<"User_Client", 'String'>
    readonly name: FieldRef<"User_Client", 'String'>
    readonly email: FieldRef<"User_Client", 'String'>
    readonly password: FieldRef<"User_Client", 'String'>
    readonly userImageUrl: FieldRef<"User_Client", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User_Client findUnique
   */
  export type User_ClientFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Client
     */
    select?: User_ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Client
     */
    omit?: User_ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_ClientInclude<ExtArgs> | null
    /**
     * Filter, which User_Client to fetch.
     */
    where: User_ClientWhereUniqueInput
  }

  /**
   * User_Client findUniqueOrThrow
   */
  export type User_ClientFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Client
     */
    select?: User_ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Client
     */
    omit?: User_ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_ClientInclude<ExtArgs> | null
    /**
     * Filter, which User_Client to fetch.
     */
    where: User_ClientWhereUniqueInput
  }

  /**
   * User_Client findFirst
   */
  export type User_ClientFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Client
     */
    select?: User_ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Client
     */
    omit?: User_ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_ClientInclude<ExtArgs> | null
    /**
     * Filter, which User_Client to fetch.
     */
    where?: User_ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_Clients to fetch.
     */
    orderBy?: User_ClientOrderByWithRelationInput | User_ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for User_Clients.
     */
    cursor?: User_ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of User_Clients.
     */
    distinct?: User_ClientScalarFieldEnum | User_ClientScalarFieldEnum[]
  }

  /**
   * User_Client findFirstOrThrow
   */
  export type User_ClientFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Client
     */
    select?: User_ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Client
     */
    omit?: User_ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_ClientInclude<ExtArgs> | null
    /**
     * Filter, which User_Client to fetch.
     */
    where?: User_ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_Clients to fetch.
     */
    orderBy?: User_ClientOrderByWithRelationInput | User_ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for User_Clients.
     */
    cursor?: User_ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of User_Clients.
     */
    distinct?: User_ClientScalarFieldEnum | User_ClientScalarFieldEnum[]
  }

  /**
   * User_Client findMany
   */
  export type User_ClientFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Client
     */
    select?: User_ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Client
     */
    omit?: User_ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_ClientInclude<ExtArgs> | null
    /**
     * Filter, which User_Clients to fetch.
     */
    where?: User_ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_Clients to fetch.
     */
    orderBy?: User_ClientOrderByWithRelationInput | User_ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing User_Clients.
     */
    cursor?: User_ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_Clients.
     */
    skip?: number
    distinct?: User_ClientScalarFieldEnum | User_ClientScalarFieldEnum[]
  }

  /**
   * User_Client create
   */
  export type User_ClientCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Client
     */
    select?: User_ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Client
     */
    omit?: User_ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_ClientInclude<ExtArgs> | null
    /**
     * The data needed to create a User_Client.
     */
    data: XOR<User_ClientCreateInput, User_ClientUncheckedCreateInput>
  }

  /**
   * User_Client createMany
   */
  export type User_ClientCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many User_Clients.
     */
    data: User_ClientCreateManyInput | User_ClientCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User_Client update
   */
  export type User_ClientUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Client
     */
    select?: User_ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Client
     */
    omit?: User_ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_ClientInclude<ExtArgs> | null
    /**
     * The data needed to update a User_Client.
     */
    data: XOR<User_ClientUpdateInput, User_ClientUncheckedUpdateInput>
    /**
     * Choose, which User_Client to update.
     */
    where: User_ClientWhereUniqueInput
  }

  /**
   * User_Client updateMany
   */
  export type User_ClientUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update User_Clients.
     */
    data: XOR<User_ClientUpdateManyMutationInput, User_ClientUncheckedUpdateManyInput>
    /**
     * Filter which User_Clients to update
     */
    where?: User_ClientWhereInput
    /**
     * Limit how many User_Clients to update.
     */
    limit?: number
  }

  /**
   * User_Client upsert
   */
  export type User_ClientUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Client
     */
    select?: User_ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Client
     */
    omit?: User_ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_ClientInclude<ExtArgs> | null
    /**
     * The filter to search for the User_Client to update in case it exists.
     */
    where: User_ClientWhereUniqueInput
    /**
     * In case the User_Client found by the `where` argument doesn't exist, create a new User_Client with this data.
     */
    create: XOR<User_ClientCreateInput, User_ClientUncheckedCreateInput>
    /**
     * In case the User_Client was found with the provided `where` argument, update it with this data.
     */
    update: XOR<User_ClientUpdateInput, User_ClientUncheckedUpdateInput>
  }

  /**
   * User_Client delete
   */
  export type User_ClientDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Client
     */
    select?: User_ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Client
     */
    omit?: User_ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_ClientInclude<ExtArgs> | null
    /**
     * Filter which User_Client to delete.
     */
    where: User_ClientWhereUniqueInput
  }

  /**
   * User_Client deleteMany
   */
  export type User_ClientDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User_Clients to delete
     */
    where?: User_ClientWhereInput
    /**
     * Limit how many User_Clients to delete.
     */
    limit?: number
  }

  /**
   * User_Client.avaliationsByEmailClient
   */
  export type User_Client$avaliationsByEmailClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationRoadMap
     */
    select?: AvaliationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationRoadMap
     */
    omit?: AvaliationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationRoadMapInclude<ExtArgs> | null
    where?: AvaliationRoadMapWhereInput
    orderBy?: AvaliationRoadMapOrderByWithRelationInput | AvaliationRoadMapOrderByWithRelationInput[]
    cursor?: AvaliationRoadMapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AvaliationRoadMapScalarFieldEnum | AvaliationRoadMapScalarFieldEnum[]
  }

  /**
   * User_Client.avaliationsRoadMapByIdClient
   */
  export type User_Client$avaliationsRoadMapByIdClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationRoadMap
     */
    select?: AvaliationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationRoadMap
     */
    omit?: AvaliationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationRoadMapInclude<ExtArgs> | null
    where?: AvaliationRoadMapWhereInput
    orderBy?: AvaliationRoadMapOrderByWithRelationInput | AvaliationRoadMapOrderByWithRelationInput[]
    cursor?: AvaliationRoadMapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AvaliationRoadMapScalarFieldEnum | AvaliationRoadMapScalarFieldEnum[]
  }

  /**
   * User_Client.travelRoadMaps
   */
  export type User_Client$travelRoadMapsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Travel_Road_Map
     */
    select?: Travel_Road_MapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Travel_Road_Map
     */
    omit?: Travel_Road_MapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Travel_Road_MapInclude<ExtArgs> | null
    where?: Travel_Road_MapWhereInput
    orderBy?: Travel_Road_MapOrderByWithRelationInput | Travel_Road_MapOrderByWithRelationInput[]
    cursor?: Travel_Road_MapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Travel_Road_MapScalarFieldEnum | Travel_Road_MapScalarFieldEnum[]
  }

  /**
   * User_Client.avaliationTouristPointByUserClientEmail
   */
  export type User_Client$avaliationTouristPointByUserClientEmailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationTouristPoint
     */
    select?: AvaliationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationTouristPoint
     */
    omit?: AvaliationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationTouristPointInclude<ExtArgs> | null
    where?: AvaliationTouristPointWhereInput
    orderBy?: AvaliationTouristPointOrderByWithRelationInput | AvaliationTouristPointOrderByWithRelationInput[]
    cursor?: AvaliationTouristPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AvaliationTouristPointScalarFieldEnum | AvaliationTouristPointScalarFieldEnum[]
  }

  /**
   * User_Client.avaliationTouristPointByIdCreator
   */
  export type User_Client$avaliationTouristPointByIdCreatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationTouristPoint
     */
    select?: AvaliationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationTouristPoint
     */
    omit?: AvaliationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationTouristPointInclude<ExtArgs> | null
    where?: AvaliationTouristPointWhereInput
    orderBy?: AvaliationTouristPointOrderByWithRelationInput | AvaliationTouristPointOrderByWithRelationInput[]
    cursor?: AvaliationTouristPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AvaliationTouristPointScalarFieldEnum | AvaliationTouristPointScalarFieldEnum[]
  }

  /**
   * User_Client.avaliationCommercialPointByUserClientEmail
   */
  export type User_Client$avaliationCommercialPointByUserClientEmailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationCommercialPoint
     */
    select?: AvaliationCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationCommercialPoint
     */
    omit?: AvaliationCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationCommercialPointInclude<ExtArgs> | null
    where?: AvaliationCommercialPointWhereInput
    orderBy?: AvaliationCommercialPointOrderByWithRelationInput | AvaliationCommercialPointOrderByWithRelationInput[]
    cursor?: AvaliationCommercialPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AvaliationCommercialPointScalarFieldEnum | AvaliationCommercialPointScalarFieldEnum[]
  }

  /**
   * User_Client.avaliationCommercialPointByIdCreator
   */
  export type User_Client$avaliationCommercialPointByIdCreatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationCommercialPoint
     */
    select?: AvaliationCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationCommercialPoint
     */
    omit?: AvaliationCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationCommercialPointInclude<ExtArgs> | null
    where?: AvaliationCommercialPointWhereInput
    orderBy?: AvaliationCommercialPointOrderByWithRelationInput | AvaliationCommercialPointOrderByWithRelationInput[]
    cursor?: AvaliationCommercialPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AvaliationCommercialPointScalarFieldEnum | AvaliationCommercialPointScalarFieldEnum[]
  }

  /**
   * User_Client.commentRoadMapByClientEmail
   */
  export type User_Client$commentRoadMapByClientEmailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentRoadMap
     */
    select?: CommentRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentRoadMap
     */
    omit?: CommentRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentRoadMapInclude<ExtArgs> | null
    where?: CommentRoadMapWhereInput
    orderBy?: CommentRoadMapOrderByWithRelationInput | CommentRoadMapOrderByWithRelationInput[]
    cursor?: CommentRoadMapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentRoadMapScalarFieldEnum | CommentRoadMapScalarFieldEnum[]
  }

  /**
   * User_Client.commentRoadMapByClientId
   */
  export type User_Client$commentRoadMapByClientIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentRoadMap
     */
    select?: CommentRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentRoadMap
     */
    omit?: CommentRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentRoadMapInclude<ExtArgs> | null
    where?: CommentRoadMapWhereInput
    orderBy?: CommentRoadMapOrderByWithRelationInput | CommentRoadMapOrderByWithRelationInput[]
    cursor?: CommentRoadMapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentRoadMapScalarFieldEnum | CommentRoadMapScalarFieldEnum[]
  }

  /**
   * User_Client.commentTouristPointByClientEmail
   */
  export type User_Client$commentTouristPointByClientEmailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentTouristPoint
     */
    select?: CommentTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentTouristPoint
     */
    omit?: CommentTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentTouristPointInclude<ExtArgs> | null
    where?: CommentTouristPointWhereInput
    orderBy?: CommentTouristPointOrderByWithRelationInput | CommentTouristPointOrderByWithRelationInput[]
    cursor?: CommentTouristPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentTouristPointScalarFieldEnum | CommentTouristPointScalarFieldEnum[]
  }

  /**
   * User_Client.commentTouristPointByClientId
   */
  export type User_Client$commentTouristPointByClientIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentTouristPoint
     */
    select?: CommentTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentTouristPoint
     */
    omit?: CommentTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentTouristPointInclude<ExtArgs> | null
    where?: CommentTouristPointWhereInput
    orderBy?: CommentTouristPointOrderByWithRelationInput | CommentTouristPointOrderByWithRelationInput[]
    cursor?: CommentTouristPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentTouristPointScalarFieldEnum | CommentTouristPointScalarFieldEnum[]
  }

  /**
   * User_Client.commentCommercialPointByClientEmail
   */
  export type User_Client$commentCommercialPointByClientEmailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentCommercialPoint
     */
    select?: CommentCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentCommercialPoint
     */
    omit?: CommentCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentCommercialPointInclude<ExtArgs> | null
    where?: CommentCommercialPointWhereInput
    orderBy?: CommentCommercialPointOrderByWithRelationInput | CommentCommercialPointOrderByWithRelationInput[]
    cursor?: CommentCommercialPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentCommercialPointScalarFieldEnum | CommentCommercialPointScalarFieldEnum[]
  }

  /**
   * User_Client.commentCommercialPointByClientId
   */
  export type User_Client$commentCommercialPointByClientIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentCommercialPoint
     */
    select?: CommentCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentCommercialPoint
     */
    omit?: CommentCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentCommercialPointInclude<ExtArgs> | null
    where?: CommentCommercialPointWhereInput
    orderBy?: CommentCommercialPointOrderByWithRelationInput | CommentCommercialPointOrderByWithRelationInput[]
    cursor?: CommentCommercialPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentCommercialPointScalarFieldEnum | CommentCommercialPointScalarFieldEnum[]
  }

  /**
   * User_Client.FavoriteCommercialPointByClientId
   */
  export type User_Client$FavoriteCommercialPointByClientIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteCommercialPoint
     */
    select?: FavoriteCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteCommercialPoint
     */
    omit?: FavoriteCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteCommercialPointInclude<ExtArgs> | null
    where?: FavoriteCommercialPointWhereInput
    orderBy?: FavoriteCommercialPointOrderByWithRelationInput | FavoriteCommercialPointOrderByWithRelationInput[]
    cursor?: FavoriteCommercialPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoriteCommercialPointScalarFieldEnum | FavoriteCommercialPointScalarFieldEnum[]
  }

  /**
   * User_Client.FavoriteTouristPointPointByClientId
   */
  export type User_Client$FavoriteTouristPointPointByClientIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteTouristPoint
     */
    select?: FavoriteTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteTouristPoint
     */
    omit?: FavoriteTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteTouristPointInclude<ExtArgs> | null
    where?: FavoriteTouristPointWhereInput
    orderBy?: FavoriteTouristPointOrderByWithRelationInput | FavoriteTouristPointOrderByWithRelationInput[]
    cursor?: FavoriteTouristPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoriteTouristPointScalarFieldEnum | FavoriteTouristPointScalarFieldEnum[]
  }

  /**
   * User_Client.FavoriteRoadMapPointByClientId
   */
  export type User_Client$FavoriteRoadMapPointByClientIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteRoadMap
     */
    select?: FavoriteRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteRoadMap
     */
    omit?: FavoriteRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteRoadMapInclude<ExtArgs> | null
    where?: FavoriteRoadMapWhereInput
    orderBy?: FavoriteRoadMapOrderByWithRelationInput | FavoriteRoadMapOrderByWithRelationInput[]
    cursor?: FavoriteRoadMapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoriteRoadMapScalarFieldEnum | FavoriteRoadMapScalarFieldEnum[]
  }

  /**
   * User_Client.userNotificationTouristPointByIdClient
   */
  export type User_Client$userNotificationTouristPointByIdClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationTouristPoint
     */
    select?: notificationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationTouristPoint
     */
    omit?: notificationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationTouristPointInclude<ExtArgs> | null
    where?: notificationTouristPointWhereInput
    orderBy?: notificationTouristPointOrderByWithRelationInput | notificationTouristPointOrderByWithRelationInput[]
    cursor?: notificationTouristPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationTouristPointScalarFieldEnum | NotificationTouristPointScalarFieldEnum[]
  }

  /**
   * User_Client.userNotificationRoadMapByIdClient
   */
  export type User_Client$userNotificationRoadMapByIdClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationRoadMap
     */
    select?: notificationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationRoadMap
     */
    omit?: notificationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationRoadMapInclude<ExtArgs> | null
    where?: notificationRoadMapWhereInput
    orderBy?: notificationRoadMapOrderByWithRelationInput | notificationRoadMapOrderByWithRelationInput[]
    cursor?: notificationRoadMapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationRoadMapScalarFieldEnum | NotificationRoadMapScalarFieldEnum[]
  }

  /**
   * User_Client.userReportRoadMapByIdUserReport
   */
  export type User_Client$userReportRoadMapByIdUserReportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportRoadMap
     */
    select?: reportRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportRoadMap
     */
    omit?: reportRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportRoadMapInclude<ExtArgs> | null
    where?: reportRoadMapWhereInput
    orderBy?: reportRoadMapOrderByWithRelationInput | reportRoadMapOrderByWithRelationInput[]
    cursor?: reportRoadMapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportRoadMapScalarFieldEnum | ReportRoadMapScalarFieldEnum[]
  }

  /**
   * User_Client.userReportCommercialPointByIdUserReport
   */
  export type User_Client$userReportCommercialPointByIdUserReportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportCommercialPoint
     */
    select?: reportCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportCommercialPoint
     */
    omit?: reportCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportCommercialPointInclude<ExtArgs> | null
    where?: reportCommercialPointWhereInput
    orderBy?: reportCommercialPointOrderByWithRelationInput | reportCommercialPointOrderByWithRelationInput[]
    cursor?: reportCommercialPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportCommercialPointScalarFieldEnum | ReportCommercialPointScalarFieldEnum[]
  }

  /**
   * User_Client.userReportTouristPointByIdUserReport
   */
  export type User_Client$userReportTouristPointByIdUserReportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportTouristPoint
     */
    select?: reportTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportTouristPoint
     */
    omit?: reportTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportTouristPointInclude<ExtArgs> | null
    where?: reportTouristPointWhereInput
    orderBy?: reportTouristPointOrderByWithRelationInput | reportTouristPointOrderByWithRelationInput[]
    cursor?: reportTouristPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportTouristPointScalarFieldEnum | ReportTouristPointScalarFieldEnum[]
  }

  /**
   * User_Client without action
   */
  export type User_ClientDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Client
     */
    select?: User_ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Client
     */
    omit?: User_ClientOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_ClientInclude<ExtArgs> | null
  }


  /**
   * Model User_Business
   */

  export type AggregateUser_Business = {
    _count: User_BusinessCountAggregateOutputType | null
    _min: User_BusinessMinAggregateOutputType | null
    _max: User_BusinessMaxAggregateOutputType | null
  }

  export type User_BusinessMinAggregateOutputType = {
    id: string | null
    CNPJ: string | null
    name: string | null
    email: string | null
    telefone: string | null
    password: string | null
    userImageUrl: string | null
  }

  export type User_BusinessMaxAggregateOutputType = {
    id: string | null
    CNPJ: string | null
    name: string | null
    email: string | null
    telefone: string | null
    password: string | null
    userImageUrl: string | null
  }

  export type User_BusinessCountAggregateOutputType = {
    id: number
    CNPJ: number
    name: number
    email: number
    telefone: number
    password: number
    userImageUrl: number
    _all: number
  }


  export type User_BusinessMinAggregateInputType = {
    id?: true
    CNPJ?: true
    name?: true
    email?: true
    telefone?: true
    password?: true
    userImageUrl?: true
  }

  export type User_BusinessMaxAggregateInputType = {
    id?: true
    CNPJ?: true
    name?: true
    email?: true
    telefone?: true
    password?: true
    userImageUrl?: true
  }

  export type User_BusinessCountAggregateInputType = {
    id?: true
    CNPJ?: true
    name?: true
    email?: true
    telefone?: true
    password?: true
    userImageUrl?: true
    _all?: true
  }

  export type User_BusinessAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User_Business to aggregate.
     */
    where?: User_BusinessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_Businesses to fetch.
     */
    orderBy?: User_BusinessOrderByWithRelationInput | User_BusinessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: User_BusinessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_Businesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_Businesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned User_Businesses
    **/
    _count?: true | User_BusinessCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_BusinessMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_BusinessMaxAggregateInputType
  }

  export type GetUser_BusinessAggregateType<T extends User_BusinessAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_Business]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_Business[P]>
      : GetScalarType<T[P], AggregateUser_Business[P]>
  }




  export type User_BusinessGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: User_BusinessWhereInput
    orderBy?: User_BusinessOrderByWithAggregationInput | User_BusinessOrderByWithAggregationInput[]
    by: User_BusinessScalarFieldEnum[] | User_BusinessScalarFieldEnum
    having?: User_BusinessScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_BusinessCountAggregateInputType | true
    _min?: User_BusinessMinAggregateInputType
    _max?: User_BusinessMaxAggregateInputType
  }

  export type User_BusinessGroupByOutputType = {
    id: string
    CNPJ: string
    name: string
    email: string
    telefone: string
    password: string
    userImageUrl: string | null
    _count: User_BusinessCountAggregateOutputType | null
    _min: User_BusinessMinAggregateOutputType | null
    _max: User_BusinessMaxAggregateOutputType | null
  }

  type GetUser_BusinessGroupByPayload<T extends User_BusinessGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_BusinessGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_BusinessGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_BusinessGroupByOutputType[P]>
            : GetScalarType<T[P], User_BusinessGroupByOutputType[P]>
        }
      >
    >


  export type User_BusinessSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    CNPJ?: boolean
    name?: boolean
    email?: boolean
    telefone?: boolean
    password?: boolean
    userImageUrl?: boolean
    pontosComerciais?: boolean | User_Business$pontosComerciaisArgs<ExtArgs>
    _count?: boolean | User_BusinessCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_Business"]>



  export type User_BusinessSelectScalar = {
    id?: boolean
    CNPJ?: boolean
    name?: boolean
    email?: boolean
    telefone?: boolean
    password?: boolean
    userImageUrl?: boolean
  }

  export type User_BusinessOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "CNPJ" | "name" | "email" | "telefone" | "password" | "userImageUrl", ExtArgs["result"]["user_Business"]>
  export type User_BusinessInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pontosComerciais?: boolean | User_Business$pontosComerciaisArgs<ExtArgs>
    _count?: boolean | User_BusinessCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $User_BusinessPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User_Business"
    objects: {
      pontosComerciais: Prisma.$Ponto_ComercialPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      CNPJ: string
      name: string
      email: string
      telefone: string
      password: string
      userImageUrl: string | null
    }, ExtArgs["result"]["user_Business"]>
    composites: {}
  }

  type User_BusinessGetPayload<S extends boolean | null | undefined | User_BusinessDefaultArgs> = $Result.GetResult<Prisma.$User_BusinessPayload, S>

  type User_BusinessCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<User_BusinessFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_BusinessCountAggregateInputType | true
    }

  export interface User_BusinessDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User_Business'], meta: { name: 'User_Business' } }
    /**
     * Find zero or one User_Business that matches the filter.
     * @param {User_BusinessFindUniqueArgs} args - Arguments to find a User_Business
     * @example
     * // Get one User_Business
     * const user_Business = await prisma.user_Business.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends User_BusinessFindUniqueArgs>(args: SelectSubset<T, User_BusinessFindUniqueArgs<ExtArgs>>): Prisma__User_BusinessClient<$Result.GetResult<Prisma.$User_BusinessPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_Business that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {User_BusinessFindUniqueOrThrowArgs} args - Arguments to find a User_Business
     * @example
     * // Get one User_Business
     * const user_Business = await prisma.user_Business.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends User_BusinessFindUniqueOrThrowArgs>(args: SelectSubset<T, User_BusinessFindUniqueOrThrowArgs<ExtArgs>>): Prisma__User_BusinessClient<$Result.GetResult<Prisma.$User_BusinessPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_Business that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_BusinessFindFirstArgs} args - Arguments to find a User_Business
     * @example
     * // Get one User_Business
     * const user_Business = await prisma.user_Business.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends User_BusinessFindFirstArgs>(args?: SelectSubset<T, User_BusinessFindFirstArgs<ExtArgs>>): Prisma__User_BusinessClient<$Result.GetResult<Prisma.$User_BusinessPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_Business that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_BusinessFindFirstOrThrowArgs} args - Arguments to find a User_Business
     * @example
     * // Get one User_Business
     * const user_Business = await prisma.user_Business.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends User_BusinessFindFirstOrThrowArgs>(args?: SelectSubset<T, User_BusinessFindFirstOrThrowArgs<ExtArgs>>): Prisma__User_BusinessClient<$Result.GetResult<Prisma.$User_BusinessPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_Businesses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_BusinessFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_Businesses
     * const user_Businesses = await prisma.user_Business.findMany()
     * 
     * // Get first 10 User_Businesses
     * const user_Businesses = await prisma.user_Business.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_BusinessWithIdOnly = await prisma.user_Business.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends User_BusinessFindManyArgs>(args?: SelectSubset<T, User_BusinessFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$User_BusinessPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_Business.
     * @param {User_BusinessCreateArgs} args - Arguments to create a User_Business.
     * @example
     * // Create one User_Business
     * const User_Business = await prisma.user_Business.create({
     *   data: {
     *     // ... data to create a User_Business
     *   }
     * })
     * 
     */
    create<T extends User_BusinessCreateArgs>(args: SelectSubset<T, User_BusinessCreateArgs<ExtArgs>>): Prisma__User_BusinessClient<$Result.GetResult<Prisma.$User_BusinessPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_Businesses.
     * @param {User_BusinessCreateManyArgs} args - Arguments to create many User_Businesses.
     * @example
     * // Create many User_Businesses
     * const user_Business = await prisma.user_Business.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends User_BusinessCreateManyArgs>(args?: SelectSubset<T, User_BusinessCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User_Business.
     * @param {User_BusinessDeleteArgs} args - Arguments to delete one User_Business.
     * @example
     * // Delete one User_Business
     * const User_Business = await prisma.user_Business.delete({
     *   where: {
     *     // ... filter to delete one User_Business
     *   }
     * })
     * 
     */
    delete<T extends User_BusinessDeleteArgs>(args: SelectSubset<T, User_BusinessDeleteArgs<ExtArgs>>): Prisma__User_BusinessClient<$Result.GetResult<Prisma.$User_BusinessPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_Business.
     * @param {User_BusinessUpdateArgs} args - Arguments to update one User_Business.
     * @example
     * // Update one User_Business
     * const user_Business = await prisma.user_Business.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends User_BusinessUpdateArgs>(args: SelectSubset<T, User_BusinessUpdateArgs<ExtArgs>>): Prisma__User_BusinessClient<$Result.GetResult<Prisma.$User_BusinessPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_Businesses.
     * @param {User_BusinessDeleteManyArgs} args - Arguments to filter User_Businesses to delete.
     * @example
     * // Delete a few User_Businesses
     * const { count } = await prisma.user_Business.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends User_BusinessDeleteManyArgs>(args?: SelectSubset<T, User_BusinessDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_Businesses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_BusinessUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_Businesses
     * const user_Business = await prisma.user_Business.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends User_BusinessUpdateManyArgs>(args: SelectSubset<T, User_BusinessUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User_Business.
     * @param {User_BusinessUpsertArgs} args - Arguments to update or create a User_Business.
     * @example
     * // Update or create a User_Business
     * const user_Business = await prisma.user_Business.upsert({
     *   create: {
     *     // ... data to create a User_Business
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_Business we want to update
     *   }
     * })
     */
    upsert<T extends User_BusinessUpsertArgs>(args: SelectSubset<T, User_BusinessUpsertArgs<ExtArgs>>): Prisma__User_BusinessClient<$Result.GetResult<Prisma.$User_BusinessPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_Businesses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_BusinessCountArgs} args - Arguments to filter User_Businesses to count.
     * @example
     * // Count the number of User_Businesses
     * const count = await prisma.user_Business.count({
     *   where: {
     *     // ... the filter for the User_Businesses we want to count
     *   }
     * })
    **/
    count<T extends User_BusinessCountArgs>(
      args?: Subset<T, User_BusinessCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_BusinessCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_Business.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_BusinessAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_BusinessAggregateArgs>(args: Subset<T, User_BusinessAggregateArgs>): Prisma.PrismaPromise<GetUser_BusinessAggregateType<T>>

    /**
     * Group by User_Business.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_BusinessGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends User_BusinessGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: User_BusinessGroupByArgs['orderBy'] }
        : { orderBy?: User_BusinessGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, User_BusinessGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_BusinessGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User_Business model
   */
  readonly fields: User_BusinessFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User_Business.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__User_BusinessClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pontosComerciais<T extends User_Business$pontosComerciaisArgs<ExtArgs> = {}>(args?: Subset<T, User_Business$pontosComerciaisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Ponto_ComercialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User_Business model
   */
  interface User_BusinessFieldRefs {
    readonly id: FieldRef<"User_Business", 'String'>
    readonly CNPJ: FieldRef<"User_Business", 'String'>
    readonly name: FieldRef<"User_Business", 'String'>
    readonly email: FieldRef<"User_Business", 'String'>
    readonly telefone: FieldRef<"User_Business", 'String'>
    readonly password: FieldRef<"User_Business", 'String'>
    readonly userImageUrl: FieldRef<"User_Business", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User_Business findUnique
   */
  export type User_BusinessFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Business
     */
    select?: User_BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Business
     */
    omit?: User_BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_BusinessInclude<ExtArgs> | null
    /**
     * Filter, which User_Business to fetch.
     */
    where: User_BusinessWhereUniqueInput
  }

  /**
   * User_Business findUniqueOrThrow
   */
  export type User_BusinessFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Business
     */
    select?: User_BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Business
     */
    omit?: User_BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_BusinessInclude<ExtArgs> | null
    /**
     * Filter, which User_Business to fetch.
     */
    where: User_BusinessWhereUniqueInput
  }

  /**
   * User_Business findFirst
   */
  export type User_BusinessFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Business
     */
    select?: User_BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Business
     */
    omit?: User_BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_BusinessInclude<ExtArgs> | null
    /**
     * Filter, which User_Business to fetch.
     */
    where?: User_BusinessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_Businesses to fetch.
     */
    orderBy?: User_BusinessOrderByWithRelationInput | User_BusinessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for User_Businesses.
     */
    cursor?: User_BusinessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_Businesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_Businesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of User_Businesses.
     */
    distinct?: User_BusinessScalarFieldEnum | User_BusinessScalarFieldEnum[]
  }

  /**
   * User_Business findFirstOrThrow
   */
  export type User_BusinessFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Business
     */
    select?: User_BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Business
     */
    omit?: User_BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_BusinessInclude<ExtArgs> | null
    /**
     * Filter, which User_Business to fetch.
     */
    where?: User_BusinessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_Businesses to fetch.
     */
    orderBy?: User_BusinessOrderByWithRelationInput | User_BusinessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for User_Businesses.
     */
    cursor?: User_BusinessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_Businesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_Businesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of User_Businesses.
     */
    distinct?: User_BusinessScalarFieldEnum | User_BusinessScalarFieldEnum[]
  }

  /**
   * User_Business findMany
   */
  export type User_BusinessFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Business
     */
    select?: User_BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Business
     */
    omit?: User_BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_BusinessInclude<ExtArgs> | null
    /**
     * Filter, which User_Businesses to fetch.
     */
    where?: User_BusinessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_Businesses to fetch.
     */
    orderBy?: User_BusinessOrderByWithRelationInput | User_BusinessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing User_Businesses.
     */
    cursor?: User_BusinessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_Businesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_Businesses.
     */
    skip?: number
    distinct?: User_BusinessScalarFieldEnum | User_BusinessScalarFieldEnum[]
  }

  /**
   * User_Business create
   */
  export type User_BusinessCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Business
     */
    select?: User_BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Business
     */
    omit?: User_BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_BusinessInclude<ExtArgs> | null
    /**
     * The data needed to create a User_Business.
     */
    data: XOR<User_BusinessCreateInput, User_BusinessUncheckedCreateInput>
  }

  /**
   * User_Business createMany
   */
  export type User_BusinessCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many User_Businesses.
     */
    data: User_BusinessCreateManyInput | User_BusinessCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User_Business update
   */
  export type User_BusinessUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Business
     */
    select?: User_BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Business
     */
    omit?: User_BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_BusinessInclude<ExtArgs> | null
    /**
     * The data needed to update a User_Business.
     */
    data: XOR<User_BusinessUpdateInput, User_BusinessUncheckedUpdateInput>
    /**
     * Choose, which User_Business to update.
     */
    where: User_BusinessWhereUniqueInput
  }

  /**
   * User_Business updateMany
   */
  export type User_BusinessUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update User_Businesses.
     */
    data: XOR<User_BusinessUpdateManyMutationInput, User_BusinessUncheckedUpdateManyInput>
    /**
     * Filter which User_Businesses to update
     */
    where?: User_BusinessWhereInput
    /**
     * Limit how many User_Businesses to update.
     */
    limit?: number
  }

  /**
   * User_Business upsert
   */
  export type User_BusinessUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Business
     */
    select?: User_BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Business
     */
    omit?: User_BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_BusinessInclude<ExtArgs> | null
    /**
     * The filter to search for the User_Business to update in case it exists.
     */
    where: User_BusinessWhereUniqueInput
    /**
     * In case the User_Business found by the `where` argument doesn't exist, create a new User_Business with this data.
     */
    create: XOR<User_BusinessCreateInput, User_BusinessUncheckedCreateInput>
    /**
     * In case the User_Business was found with the provided `where` argument, update it with this data.
     */
    update: XOR<User_BusinessUpdateInput, User_BusinessUncheckedUpdateInput>
  }

  /**
   * User_Business delete
   */
  export type User_BusinessDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Business
     */
    select?: User_BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Business
     */
    omit?: User_BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_BusinessInclude<ExtArgs> | null
    /**
     * Filter which User_Business to delete.
     */
    where: User_BusinessWhereUniqueInput
  }

  /**
   * User_Business deleteMany
   */
  export type User_BusinessDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User_Businesses to delete
     */
    where?: User_BusinessWhereInput
    /**
     * Limit how many User_Businesses to delete.
     */
    limit?: number
  }

  /**
   * User_Business.pontosComerciais
   */
  export type User_Business$pontosComerciaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Comercial
     */
    select?: Ponto_ComercialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Comercial
     */
    omit?: Ponto_ComercialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_ComercialInclude<ExtArgs> | null
    where?: Ponto_ComercialWhereInput
    orderBy?: Ponto_ComercialOrderByWithRelationInput | Ponto_ComercialOrderByWithRelationInput[]
    cursor?: Ponto_ComercialWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Ponto_ComercialScalarFieldEnum | Ponto_ComercialScalarFieldEnum[]
  }

  /**
   * User_Business without action
   */
  export type User_BusinessDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_Business
     */
    select?: User_BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User_Business
     */
    omit?: User_BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: User_BusinessInclude<ExtArgs> | null
  }


  /**
   * Model Ponto_Comercial
   */

  export type AggregatePonto_Comercial = {
    _count: Ponto_ComercialCountAggregateOutputType | null
    _avg: Ponto_ComercialAvgAggregateOutputType | null
    _sum: Ponto_ComercialSumAggregateOutputType | null
    _min: Ponto_ComercialMinAggregateOutputType | null
    _max: Ponto_ComercialMaxAggregateOutputType | null
  }

  export type Ponto_ComercialAvgAggregateOutputType = {
    reportNumber: number | null
  }

  export type Ponto_ComercialSumAggregateOutputType = {
    reportNumber: number | null
  }

  export type Ponto_ComercialMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    local: string | null
    creationDate: Date | null
    userImageUrl: string | null
    reportNumber: number | null
    isPublished: boolean | null
    businessId: string | null
  }

  export type Ponto_ComercialMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    local: string | null
    creationDate: Date | null
    userImageUrl: string | null
    reportNumber: number | null
    isPublished: boolean | null
    businessId: string | null
  }

  export type Ponto_ComercialCountAggregateOutputType = {
    id: number
    name: number
    description: number
    local: number
    creationDate: number
    userImageUrl: number
    reportNumber: number
    isPublished: number
    businessId: number
    _all: number
  }


  export type Ponto_ComercialAvgAggregateInputType = {
    reportNumber?: true
  }

  export type Ponto_ComercialSumAggregateInputType = {
    reportNumber?: true
  }

  export type Ponto_ComercialMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    local?: true
    creationDate?: true
    userImageUrl?: true
    reportNumber?: true
    isPublished?: true
    businessId?: true
  }

  export type Ponto_ComercialMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    local?: true
    creationDate?: true
    userImageUrl?: true
    reportNumber?: true
    isPublished?: true
    businessId?: true
  }

  export type Ponto_ComercialCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    local?: true
    creationDate?: true
    userImageUrl?: true
    reportNumber?: true
    isPublished?: true
    businessId?: true
    _all?: true
  }

  export type Ponto_ComercialAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ponto_Comercial to aggregate.
     */
    where?: Ponto_ComercialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ponto_Comercials to fetch.
     */
    orderBy?: Ponto_ComercialOrderByWithRelationInput | Ponto_ComercialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Ponto_ComercialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ponto_Comercials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ponto_Comercials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ponto_Comercials
    **/
    _count?: true | Ponto_ComercialCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Ponto_ComercialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Ponto_ComercialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Ponto_ComercialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Ponto_ComercialMaxAggregateInputType
  }

  export type GetPonto_ComercialAggregateType<T extends Ponto_ComercialAggregateArgs> = {
        [P in keyof T & keyof AggregatePonto_Comercial]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePonto_Comercial[P]>
      : GetScalarType<T[P], AggregatePonto_Comercial[P]>
  }




  export type Ponto_ComercialGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Ponto_ComercialWhereInput
    orderBy?: Ponto_ComercialOrderByWithAggregationInput | Ponto_ComercialOrderByWithAggregationInput[]
    by: Ponto_ComercialScalarFieldEnum[] | Ponto_ComercialScalarFieldEnum
    having?: Ponto_ComercialScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Ponto_ComercialCountAggregateInputType | true
    _avg?: Ponto_ComercialAvgAggregateInputType
    _sum?: Ponto_ComercialSumAggregateInputType
    _min?: Ponto_ComercialMinAggregateInputType
    _max?: Ponto_ComercialMaxAggregateInputType
  }

  export type Ponto_ComercialGroupByOutputType = {
    id: string
    name: string
    description: string
    local: string
    creationDate: Date
    userImageUrl: string | null
    reportNumber: number
    isPublished: boolean
    businessId: string
    _count: Ponto_ComercialCountAggregateOutputType | null
    _avg: Ponto_ComercialAvgAggregateOutputType | null
    _sum: Ponto_ComercialSumAggregateOutputType | null
    _min: Ponto_ComercialMinAggregateOutputType | null
    _max: Ponto_ComercialMaxAggregateOutputType | null
  }

  type GetPonto_ComercialGroupByPayload<T extends Ponto_ComercialGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Ponto_ComercialGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Ponto_ComercialGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Ponto_ComercialGroupByOutputType[P]>
            : GetScalarType<T[P], Ponto_ComercialGroupByOutputType[P]>
        }
      >
    >


  export type Ponto_ComercialSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    local?: boolean
    creationDate?: boolean
    userImageUrl?: boolean
    reportNumber?: boolean
    isPublished?: boolean
    businessId?: boolean
    User_Business?: boolean | User_BusinessDefaultArgs<ExtArgs>
    avaliationCommercialPoint?: boolean | Ponto_Comercial$avaliationCommercialPointArgs<ExtArgs>
    commentCommercialPointByCommercialPointId?: boolean | Ponto_Comercial$commentCommercialPointByCommercialPointIdArgs<ExtArgs>
    FavoriteCommercialPointByCommercialPointId?: boolean | Ponto_Comercial$FavoriteCommercialPointByCommercialPointIdArgs<ExtArgs>
    ImageCommercialPointByCommercialPointId?: boolean | Ponto_Comercial$ImageCommercialPointByCommercialPointIdArgs<ExtArgs>
    RoadMapRelation?: boolean | Ponto_Comercial$RoadMapRelationArgs<ExtArgs>
    reportCommercialPointByIdCommercialPoint?: boolean | Ponto_Comercial$reportCommercialPointByIdCommercialPointArgs<ExtArgs>
    _count?: boolean | Ponto_ComercialCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ponto_Comercial"]>



  export type Ponto_ComercialSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    local?: boolean
    creationDate?: boolean
    userImageUrl?: boolean
    reportNumber?: boolean
    isPublished?: boolean
    businessId?: boolean
  }

  export type Ponto_ComercialOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "local" | "creationDate" | "userImageUrl" | "reportNumber" | "isPublished" | "businessId", ExtArgs["result"]["ponto_Comercial"]>
  export type Ponto_ComercialInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Business?: boolean | User_BusinessDefaultArgs<ExtArgs>
    avaliationCommercialPoint?: boolean | Ponto_Comercial$avaliationCommercialPointArgs<ExtArgs>
    commentCommercialPointByCommercialPointId?: boolean | Ponto_Comercial$commentCommercialPointByCommercialPointIdArgs<ExtArgs>
    FavoriteCommercialPointByCommercialPointId?: boolean | Ponto_Comercial$FavoriteCommercialPointByCommercialPointIdArgs<ExtArgs>
    ImageCommercialPointByCommercialPointId?: boolean | Ponto_Comercial$ImageCommercialPointByCommercialPointIdArgs<ExtArgs>
    RoadMapRelation?: boolean | Ponto_Comercial$RoadMapRelationArgs<ExtArgs>
    reportCommercialPointByIdCommercialPoint?: boolean | Ponto_Comercial$reportCommercialPointByIdCommercialPointArgs<ExtArgs>
    _count?: boolean | Ponto_ComercialCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $Ponto_ComercialPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Ponto_Comercial"
    objects: {
      User_Business: Prisma.$User_BusinessPayload<ExtArgs>
      avaliationCommercialPoint: Prisma.$AvaliationCommercialPointPayload<ExtArgs>[]
      commentCommercialPointByCommercialPointId: Prisma.$CommentCommercialPointPayload<ExtArgs>[]
      FavoriteCommercialPointByCommercialPointId: Prisma.$FavoriteCommercialPointPayload<ExtArgs>[]
      ImageCommercialPointByCommercialPointId: Prisma.$ImageCommercialPointPayload<ExtArgs>[]
      RoadMapRelation: Prisma.$Travel_Road_MapPayload<ExtArgs>[]
      reportCommercialPointByIdCommercialPoint: Prisma.$reportCommercialPointPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string
      local: string
      creationDate: Date
      userImageUrl: string | null
      reportNumber: number
      isPublished: boolean
      businessId: string
    }, ExtArgs["result"]["ponto_Comercial"]>
    composites: {}
  }

  type Ponto_ComercialGetPayload<S extends boolean | null | undefined | Ponto_ComercialDefaultArgs> = $Result.GetResult<Prisma.$Ponto_ComercialPayload, S>

  type Ponto_ComercialCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Ponto_ComercialFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Ponto_ComercialCountAggregateInputType | true
    }

  export interface Ponto_ComercialDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Ponto_Comercial'], meta: { name: 'Ponto_Comercial' } }
    /**
     * Find zero or one Ponto_Comercial that matches the filter.
     * @param {Ponto_ComercialFindUniqueArgs} args - Arguments to find a Ponto_Comercial
     * @example
     * // Get one Ponto_Comercial
     * const ponto_Comercial = await prisma.ponto_Comercial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Ponto_ComercialFindUniqueArgs>(args: SelectSubset<T, Ponto_ComercialFindUniqueArgs<ExtArgs>>): Prisma__Ponto_ComercialClient<$Result.GetResult<Prisma.$Ponto_ComercialPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ponto_Comercial that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Ponto_ComercialFindUniqueOrThrowArgs} args - Arguments to find a Ponto_Comercial
     * @example
     * // Get one Ponto_Comercial
     * const ponto_Comercial = await prisma.ponto_Comercial.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Ponto_ComercialFindUniqueOrThrowArgs>(args: SelectSubset<T, Ponto_ComercialFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Ponto_ComercialClient<$Result.GetResult<Prisma.$Ponto_ComercialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ponto_Comercial that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ponto_ComercialFindFirstArgs} args - Arguments to find a Ponto_Comercial
     * @example
     * // Get one Ponto_Comercial
     * const ponto_Comercial = await prisma.ponto_Comercial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Ponto_ComercialFindFirstArgs>(args?: SelectSubset<T, Ponto_ComercialFindFirstArgs<ExtArgs>>): Prisma__Ponto_ComercialClient<$Result.GetResult<Prisma.$Ponto_ComercialPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ponto_Comercial that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ponto_ComercialFindFirstOrThrowArgs} args - Arguments to find a Ponto_Comercial
     * @example
     * // Get one Ponto_Comercial
     * const ponto_Comercial = await prisma.ponto_Comercial.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Ponto_ComercialFindFirstOrThrowArgs>(args?: SelectSubset<T, Ponto_ComercialFindFirstOrThrowArgs<ExtArgs>>): Prisma__Ponto_ComercialClient<$Result.GetResult<Prisma.$Ponto_ComercialPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ponto_Comercials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ponto_ComercialFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ponto_Comercials
     * const ponto_Comercials = await prisma.ponto_Comercial.findMany()
     * 
     * // Get first 10 Ponto_Comercials
     * const ponto_Comercials = await prisma.ponto_Comercial.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ponto_ComercialWithIdOnly = await prisma.ponto_Comercial.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Ponto_ComercialFindManyArgs>(args?: SelectSubset<T, Ponto_ComercialFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Ponto_ComercialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ponto_Comercial.
     * @param {Ponto_ComercialCreateArgs} args - Arguments to create a Ponto_Comercial.
     * @example
     * // Create one Ponto_Comercial
     * const Ponto_Comercial = await prisma.ponto_Comercial.create({
     *   data: {
     *     // ... data to create a Ponto_Comercial
     *   }
     * })
     * 
     */
    create<T extends Ponto_ComercialCreateArgs>(args: SelectSubset<T, Ponto_ComercialCreateArgs<ExtArgs>>): Prisma__Ponto_ComercialClient<$Result.GetResult<Prisma.$Ponto_ComercialPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ponto_Comercials.
     * @param {Ponto_ComercialCreateManyArgs} args - Arguments to create many Ponto_Comercials.
     * @example
     * // Create many Ponto_Comercials
     * const ponto_Comercial = await prisma.ponto_Comercial.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Ponto_ComercialCreateManyArgs>(args?: SelectSubset<T, Ponto_ComercialCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Ponto_Comercial.
     * @param {Ponto_ComercialDeleteArgs} args - Arguments to delete one Ponto_Comercial.
     * @example
     * // Delete one Ponto_Comercial
     * const Ponto_Comercial = await prisma.ponto_Comercial.delete({
     *   where: {
     *     // ... filter to delete one Ponto_Comercial
     *   }
     * })
     * 
     */
    delete<T extends Ponto_ComercialDeleteArgs>(args: SelectSubset<T, Ponto_ComercialDeleteArgs<ExtArgs>>): Prisma__Ponto_ComercialClient<$Result.GetResult<Prisma.$Ponto_ComercialPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ponto_Comercial.
     * @param {Ponto_ComercialUpdateArgs} args - Arguments to update one Ponto_Comercial.
     * @example
     * // Update one Ponto_Comercial
     * const ponto_Comercial = await prisma.ponto_Comercial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Ponto_ComercialUpdateArgs>(args: SelectSubset<T, Ponto_ComercialUpdateArgs<ExtArgs>>): Prisma__Ponto_ComercialClient<$Result.GetResult<Prisma.$Ponto_ComercialPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ponto_Comercials.
     * @param {Ponto_ComercialDeleteManyArgs} args - Arguments to filter Ponto_Comercials to delete.
     * @example
     * // Delete a few Ponto_Comercials
     * const { count } = await prisma.ponto_Comercial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Ponto_ComercialDeleteManyArgs>(args?: SelectSubset<T, Ponto_ComercialDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ponto_Comercials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ponto_ComercialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ponto_Comercials
     * const ponto_Comercial = await prisma.ponto_Comercial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Ponto_ComercialUpdateManyArgs>(args: SelectSubset<T, Ponto_ComercialUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Ponto_Comercial.
     * @param {Ponto_ComercialUpsertArgs} args - Arguments to update or create a Ponto_Comercial.
     * @example
     * // Update or create a Ponto_Comercial
     * const ponto_Comercial = await prisma.ponto_Comercial.upsert({
     *   create: {
     *     // ... data to create a Ponto_Comercial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ponto_Comercial we want to update
     *   }
     * })
     */
    upsert<T extends Ponto_ComercialUpsertArgs>(args: SelectSubset<T, Ponto_ComercialUpsertArgs<ExtArgs>>): Prisma__Ponto_ComercialClient<$Result.GetResult<Prisma.$Ponto_ComercialPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ponto_Comercials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ponto_ComercialCountArgs} args - Arguments to filter Ponto_Comercials to count.
     * @example
     * // Count the number of Ponto_Comercials
     * const count = await prisma.ponto_Comercial.count({
     *   where: {
     *     // ... the filter for the Ponto_Comercials we want to count
     *   }
     * })
    **/
    count<T extends Ponto_ComercialCountArgs>(
      args?: Subset<T, Ponto_ComercialCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Ponto_ComercialCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ponto_Comercial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ponto_ComercialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Ponto_ComercialAggregateArgs>(args: Subset<T, Ponto_ComercialAggregateArgs>): Prisma.PrismaPromise<GetPonto_ComercialAggregateType<T>>

    /**
     * Group by Ponto_Comercial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ponto_ComercialGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Ponto_ComercialGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Ponto_ComercialGroupByArgs['orderBy'] }
        : { orderBy?: Ponto_ComercialGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Ponto_ComercialGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPonto_ComercialGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Ponto_Comercial model
   */
  readonly fields: Ponto_ComercialFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Ponto_Comercial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Ponto_ComercialClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User_Business<T extends User_BusinessDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_BusinessDefaultArgs<ExtArgs>>): Prisma__User_BusinessClient<$Result.GetResult<Prisma.$User_BusinessPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    avaliationCommercialPoint<T extends Ponto_Comercial$avaliationCommercialPointArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_Comercial$avaliationCommercialPointArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliationCommercialPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    commentCommercialPointByCommercialPointId<T extends Ponto_Comercial$commentCommercialPointByCommercialPointIdArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_Comercial$commentCommercialPointByCommercialPointIdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentCommercialPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    FavoriteCommercialPointByCommercialPointId<T extends Ponto_Comercial$FavoriteCommercialPointByCommercialPointIdArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_Comercial$FavoriteCommercialPointByCommercialPointIdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoriteCommercialPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ImageCommercialPointByCommercialPointId<T extends Ponto_Comercial$ImageCommercialPointByCommercialPointIdArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_Comercial$ImageCommercialPointByCommercialPointIdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImageCommercialPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    RoadMapRelation<T extends Ponto_Comercial$RoadMapRelationArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_Comercial$RoadMapRelationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reportCommercialPointByIdCommercialPoint<T extends Ponto_Comercial$reportCommercialPointByIdCommercialPointArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_Comercial$reportCommercialPointByIdCommercialPointArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportCommercialPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Ponto_Comercial model
   */
  interface Ponto_ComercialFieldRefs {
    readonly id: FieldRef<"Ponto_Comercial", 'String'>
    readonly name: FieldRef<"Ponto_Comercial", 'String'>
    readonly description: FieldRef<"Ponto_Comercial", 'String'>
    readonly local: FieldRef<"Ponto_Comercial", 'String'>
    readonly creationDate: FieldRef<"Ponto_Comercial", 'DateTime'>
    readonly userImageUrl: FieldRef<"Ponto_Comercial", 'String'>
    readonly reportNumber: FieldRef<"Ponto_Comercial", 'Int'>
    readonly isPublished: FieldRef<"Ponto_Comercial", 'Boolean'>
    readonly businessId: FieldRef<"Ponto_Comercial", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Ponto_Comercial findUnique
   */
  export type Ponto_ComercialFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Comercial
     */
    select?: Ponto_ComercialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Comercial
     */
    omit?: Ponto_ComercialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_ComercialInclude<ExtArgs> | null
    /**
     * Filter, which Ponto_Comercial to fetch.
     */
    where: Ponto_ComercialWhereUniqueInput
  }

  /**
   * Ponto_Comercial findUniqueOrThrow
   */
  export type Ponto_ComercialFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Comercial
     */
    select?: Ponto_ComercialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Comercial
     */
    omit?: Ponto_ComercialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_ComercialInclude<ExtArgs> | null
    /**
     * Filter, which Ponto_Comercial to fetch.
     */
    where: Ponto_ComercialWhereUniqueInput
  }

  /**
   * Ponto_Comercial findFirst
   */
  export type Ponto_ComercialFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Comercial
     */
    select?: Ponto_ComercialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Comercial
     */
    omit?: Ponto_ComercialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_ComercialInclude<ExtArgs> | null
    /**
     * Filter, which Ponto_Comercial to fetch.
     */
    where?: Ponto_ComercialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ponto_Comercials to fetch.
     */
    orderBy?: Ponto_ComercialOrderByWithRelationInput | Ponto_ComercialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ponto_Comercials.
     */
    cursor?: Ponto_ComercialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ponto_Comercials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ponto_Comercials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ponto_Comercials.
     */
    distinct?: Ponto_ComercialScalarFieldEnum | Ponto_ComercialScalarFieldEnum[]
  }

  /**
   * Ponto_Comercial findFirstOrThrow
   */
  export type Ponto_ComercialFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Comercial
     */
    select?: Ponto_ComercialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Comercial
     */
    omit?: Ponto_ComercialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_ComercialInclude<ExtArgs> | null
    /**
     * Filter, which Ponto_Comercial to fetch.
     */
    where?: Ponto_ComercialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ponto_Comercials to fetch.
     */
    orderBy?: Ponto_ComercialOrderByWithRelationInput | Ponto_ComercialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ponto_Comercials.
     */
    cursor?: Ponto_ComercialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ponto_Comercials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ponto_Comercials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ponto_Comercials.
     */
    distinct?: Ponto_ComercialScalarFieldEnum | Ponto_ComercialScalarFieldEnum[]
  }

  /**
   * Ponto_Comercial findMany
   */
  export type Ponto_ComercialFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Comercial
     */
    select?: Ponto_ComercialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Comercial
     */
    omit?: Ponto_ComercialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_ComercialInclude<ExtArgs> | null
    /**
     * Filter, which Ponto_Comercials to fetch.
     */
    where?: Ponto_ComercialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ponto_Comercials to fetch.
     */
    orderBy?: Ponto_ComercialOrderByWithRelationInput | Ponto_ComercialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ponto_Comercials.
     */
    cursor?: Ponto_ComercialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ponto_Comercials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ponto_Comercials.
     */
    skip?: number
    distinct?: Ponto_ComercialScalarFieldEnum | Ponto_ComercialScalarFieldEnum[]
  }

  /**
   * Ponto_Comercial create
   */
  export type Ponto_ComercialCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Comercial
     */
    select?: Ponto_ComercialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Comercial
     */
    omit?: Ponto_ComercialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_ComercialInclude<ExtArgs> | null
    /**
     * The data needed to create a Ponto_Comercial.
     */
    data: XOR<Ponto_ComercialCreateInput, Ponto_ComercialUncheckedCreateInput>
  }

  /**
   * Ponto_Comercial createMany
   */
  export type Ponto_ComercialCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Ponto_Comercials.
     */
    data: Ponto_ComercialCreateManyInput | Ponto_ComercialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Ponto_Comercial update
   */
  export type Ponto_ComercialUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Comercial
     */
    select?: Ponto_ComercialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Comercial
     */
    omit?: Ponto_ComercialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_ComercialInclude<ExtArgs> | null
    /**
     * The data needed to update a Ponto_Comercial.
     */
    data: XOR<Ponto_ComercialUpdateInput, Ponto_ComercialUncheckedUpdateInput>
    /**
     * Choose, which Ponto_Comercial to update.
     */
    where: Ponto_ComercialWhereUniqueInput
  }

  /**
   * Ponto_Comercial updateMany
   */
  export type Ponto_ComercialUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Ponto_Comercials.
     */
    data: XOR<Ponto_ComercialUpdateManyMutationInput, Ponto_ComercialUncheckedUpdateManyInput>
    /**
     * Filter which Ponto_Comercials to update
     */
    where?: Ponto_ComercialWhereInput
    /**
     * Limit how many Ponto_Comercials to update.
     */
    limit?: number
  }

  /**
   * Ponto_Comercial upsert
   */
  export type Ponto_ComercialUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Comercial
     */
    select?: Ponto_ComercialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Comercial
     */
    omit?: Ponto_ComercialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_ComercialInclude<ExtArgs> | null
    /**
     * The filter to search for the Ponto_Comercial to update in case it exists.
     */
    where: Ponto_ComercialWhereUniqueInput
    /**
     * In case the Ponto_Comercial found by the `where` argument doesn't exist, create a new Ponto_Comercial with this data.
     */
    create: XOR<Ponto_ComercialCreateInput, Ponto_ComercialUncheckedCreateInput>
    /**
     * In case the Ponto_Comercial was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Ponto_ComercialUpdateInput, Ponto_ComercialUncheckedUpdateInput>
  }

  /**
   * Ponto_Comercial delete
   */
  export type Ponto_ComercialDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Comercial
     */
    select?: Ponto_ComercialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Comercial
     */
    omit?: Ponto_ComercialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_ComercialInclude<ExtArgs> | null
    /**
     * Filter which Ponto_Comercial to delete.
     */
    where: Ponto_ComercialWhereUniqueInput
  }

  /**
   * Ponto_Comercial deleteMany
   */
  export type Ponto_ComercialDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ponto_Comercials to delete
     */
    where?: Ponto_ComercialWhereInput
    /**
     * Limit how many Ponto_Comercials to delete.
     */
    limit?: number
  }

  /**
   * Ponto_Comercial.avaliationCommercialPoint
   */
  export type Ponto_Comercial$avaliationCommercialPointArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationCommercialPoint
     */
    select?: AvaliationCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationCommercialPoint
     */
    omit?: AvaliationCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationCommercialPointInclude<ExtArgs> | null
    where?: AvaliationCommercialPointWhereInput
    orderBy?: AvaliationCommercialPointOrderByWithRelationInput | AvaliationCommercialPointOrderByWithRelationInput[]
    cursor?: AvaliationCommercialPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AvaliationCommercialPointScalarFieldEnum | AvaliationCommercialPointScalarFieldEnum[]
  }

  /**
   * Ponto_Comercial.commentCommercialPointByCommercialPointId
   */
  export type Ponto_Comercial$commentCommercialPointByCommercialPointIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentCommercialPoint
     */
    select?: CommentCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentCommercialPoint
     */
    omit?: CommentCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentCommercialPointInclude<ExtArgs> | null
    where?: CommentCommercialPointWhereInput
    orderBy?: CommentCommercialPointOrderByWithRelationInput | CommentCommercialPointOrderByWithRelationInput[]
    cursor?: CommentCommercialPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentCommercialPointScalarFieldEnum | CommentCommercialPointScalarFieldEnum[]
  }

  /**
   * Ponto_Comercial.FavoriteCommercialPointByCommercialPointId
   */
  export type Ponto_Comercial$FavoriteCommercialPointByCommercialPointIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteCommercialPoint
     */
    select?: FavoriteCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteCommercialPoint
     */
    omit?: FavoriteCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteCommercialPointInclude<ExtArgs> | null
    where?: FavoriteCommercialPointWhereInput
    orderBy?: FavoriteCommercialPointOrderByWithRelationInput | FavoriteCommercialPointOrderByWithRelationInput[]
    cursor?: FavoriteCommercialPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoriteCommercialPointScalarFieldEnum | FavoriteCommercialPointScalarFieldEnum[]
  }

  /**
   * Ponto_Comercial.ImageCommercialPointByCommercialPointId
   */
  export type Ponto_Comercial$ImageCommercialPointByCommercialPointIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageCommercialPoint
     */
    select?: ImageCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageCommercialPoint
     */
    omit?: ImageCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageCommercialPointInclude<ExtArgs> | null
    where?: ImageCommercialPointWhereInput
    orderBy?: ImageCommercialPointOrderByWithRelationInput | ImageCommercialPointOrderByWithRelationInput[]
    cursor?: ImageCommercialPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImageCommercialPointScalarFieldEnum | ImageCommercialPointScalarFieldEnum[]
  }

  /**
   * Ponto_Comercial.RoadMapRelation
   */
  export type Ponto_Comercial$RoadMapRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Travel_Road_Map
     */
    select?: Travel_Road_MapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Travel_Road_Map
     */
    omit?: Travel_Road_MapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Travel_Road_MapInclude<ExtArgs> | null
    where?: Travel_Road_MapWhereInput
    orderBy?: Travel_Road_MapOrderByWithRelationInput | Travel_Road_MapOrderByWithRelationInput[]
    cursor?: Travel_Road_MapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Travel_Road_MapScalarFieldEnum | Travel_Road_MapScalarFieldEnum[]
  }

  /**
   * Ponto_Comercial.reportCommercialPointByIdCommercialPoint
   */
  export type Ponto_Comercial$reportCommercialPointByIdCommercialPointArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportCommercialPoint
     */
    select?: reportCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportCommercialPoint
     */
    omit?: reportCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportCommercialPointInclude<ExtArgs> | null
    where?: reportCommercialPointWhereInput
    orderBy?: reportCommercialPointOrderByWithRelationInput | reportCommercialPointOrderByWithRelationInput[]
    cursor?: reportCommercialPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportCommercialPointScalarFieldEnum | ReportCommercialPointScalarFieldEnum[]
  }

  /**
   * Ponto_Comercial without action
   */
  export type Ponto_ComercialDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Comercial
     */
    select?: Ponto_ComercialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Comercial
     */
    omit?: Ponto_ComercialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_ComercialInclude<ExtArgs> | null
  }


  /**
   * Model Ponto_Turistico
   */

  export type AggregatePonto_Turistico = {
    _count: Ponto_TuristicoCountAggregateOutputType | null
    _avg: Ponto_TuristicoAvgAggregateOutputType | null
    _sum: Ponto_TuristicoSumAggregateOutputType | null
    _min: Ponto_TuristicoMinAggregateOutputType | null
    _max: Ponto_TuristicoMaxAggregateOutputType | null
  }

  export type Ponto_TuristicoAvgAggregateOutputType = {
    reportNumber: number | null
  }

  export type Ponto_TuristicoSumAggregateOutputType = {
    reportNumber: number | null
  }

  export type Ponto_TuristicoMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    creationDate: Date | null
    local: string | null
    userImageUrl: string | null
    reportNumber: number | null
    isPublished: boolean | null
  }

  export type Ponto_TuristicoMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    creationDate: Date | null
    local: string | null
    userImageUrl: string | null
    reportNumber: number | null
    isPublished: boolean | null
  }

  export type Ponto_TuristicoCountAggregateOutputType = {
    id: number
    name: number
    description: number
    creationDate: number
    local: number
    userImageUrl: number
    reportNumber: number
    isPublished: number
    _all: number
  }


  export type Ponto_TuristicoAvgAggregateInputType = {
    reportNumber?: true
  }

  export type Ponto_TuristicoSumAggregateInputType = {
    reportNumber?: true
  }

  export type Ponto_TuristicoMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    creationDate?: true
    local?: true
    userImageUrl?: true
    reportNumber?: true
    isPublished?: true
  }

  export type Ponto_TuristicoMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    creationDate?: true
    local?: true
    userImageUrl?: true
    reportNumber?: true
    isPublished?: true
  }

  export type Ponto_TuristicoCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    creationDate?: true
    local?: true
    userImageUrl?: true
    reportNumber?: true
    isPublished?: true
    _all?: true
  }

  export type Ponto_TuristicoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ponto_Turistico to aggregate.
     */
    where?: Ponto_TuristicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ponto_Turisticos to fetch.
     */
    orderBy?: Ponto_TuristicoOrderByWithRelationInput | Ponto_TuristicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Ponto_TuristicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ponto_Turisticos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ponto_Turisticos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ponto_Turisticos
    **/
    _count?: true | Ponto_TuristicoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Ponto_TuristicoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Ponto_TuristicoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Ponto_TuristicoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Ponto_TuristicoMaxAggregateInputType
  }

  export type GetPonto_TuristicoAggregateType<T extends Ponto_TuristicoAggregateArgs> = {
        [P in keyof T & keyof AggregatePonto_Turistico]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePonto_Turistico[P]>
      : GetScalarType<T[P], AggregatePonto_Turistico[P]>
  }




  export type Ponto_TuristicoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Ponto_TuristicoWhereInput
    orderBy?: Ponto_TuristicoOrderByWithAggregationInput | Ponto_TuristicoOrderByWithAggregationInput[]
    by: Ponto_TuristicoScalarFieldEnum[] | Ponto_TuristicoScalarFieldEnum
    having?: Ponto_TuristicoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Ponto_TuristicoCountAggregateInputType | true
    _avg?: Ponto_TuristicoAvgAggregateInputType
    _sum?: Ponto_TuristicoSumAggregateInputType
    _min?: Ponto_TuristicoMinAggregateInputType
    _max?: Ponto_TuristicoMaxAggregateInputType
  }

  export type Ponto_TuristicoGroupByOutputType = {
    id: string
    name: string
    description: string
    creationDate: Date
    local: string
    userImageUrl: string | null
    reportNumber: number
    isPublished: boolean
    _count: Ponto_TuristicoCountAggregateOutputType | null
    _avg: Ponto_TuristicoAvgAggregateOutputType | null
    _sum: Ponto_TuristicoSumAggregateOutputType | null
    _min: Ponto_TuristicoMinAggregateOutputType | null
    _max: Ponto_TuristicoMaxAggregateOutputType | null
  }

  type GetPonto_TuristicoGroupByPayload<T extends Ponto_TuristicoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Ponto_TuristicoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Ponto_TuristicoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Ponto_TuristicoGroupByOutputType[P]>
            : GetScalarType<T[P], Ponto_TuristicoGroupByOutputType[P]>
        }
      >
    >


  export type Ponto_TuristicoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    creationDate?: boolean
    local?: boolean
    userImageUrl?: boolean
    reportNumber?: boolean
    isPublished?: boolean
    avaliationTouristPoint?: boolean | Ponto_Turistico$avaliationTouristPointArgs<ExtArgs>
    commentTouristPointByTouristPointId?: boolean | Ponto_Turistico$commentTouristPointByTouristPointIdArgs<ExtArgs>
    FavoriteTouristPointByTouristPointId?: boolean | Ponto_Turistico$FavoriteTouristPointByTouristPointIdArgs<ExtArgs>
    ImageTouristPointByTouristPointId?: boolean | Ponto_Turistico$ImageTouristPointByTouristPointIdArgs<ExtArgs>
    RoadMapRelation?: boolean | Ponto_Turistico$RoadMapRelationArgs<ExtArgs>
    userReportTouristPointByIdTouristPoint?: boolean | Ponto_Turistico$userReportTouristPointByIdTouristPointArgs<ExtArgs>
    userNotificationTouristPointByIdTouristPoint?: boolean | Ponto_Turistico$userNotificationTouristPointByIdTouristPointArgs<ExtArgs>
    _count?: boolean | Ponto_TuristicoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ponto_Turistico"]>



  export type Ponto_TuristicoSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    creationDate?: boolean
    local?: boolean
    userImageUrl?: boolean
    reportNumber?: boolean
    isPublished?: boolean
  }

  export type Ponto_TuristicoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "creationDate" | "local" | "userImageUrl" | "reportNumber" | "isPublished", ExtArgs["result"]["ponto_Turistico"]>
  export type Ponto_TuristicoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    avaliationTouristPoint?: boolean | Ponto_Turistico$avaliationTouristPointArgs<ExtArgs>
    commentTouristPointByTouristPointId?: boolean | Ponto_Turistico$commentTouristPointByTouristPointIdArgs<ExtArgs>
    FavoriteTouristPointByTouristPointId?: boolean | Ponto_Turistico$FavoriteTouristPointByTouristPointIdArgs<ExtArgs>
    ImageTouristPointByTouristPointId?: boolean | Ponto_Turistico$ImageTouristPointByTouristPointIdArgs<ExtArgs>
    RoadMapRelation?: boolean | Ponto_Turistico$RoadMapRelationArgs<ExtArgs>
    userReportTouristPointByIdTouristPoint?: boolean | Ponto_Turistico$userReportTouristPointByIdTouristPointArgs<ExtArgs>
    userNotificationTouristPointByIdTouristPoint?: boolean | Ponto_Turistico$userNotificationTouristPointByIdTouristPointArgs<ExtArgs>
    _count?: boolean | Ponto_TuristicoCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $Ponto_TuristicoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Ponto_Turistico"
    objects: {
      avaliationTouristPoint: Prisma.$AvaliationTouristPointPayload<ExtArgs>[]
      commentTouristPointByTouristPointId: Prisma.$CommentTouristPointPayload<ExtArgs>[]
      FavoriteTouristPointByTouristPointId: Prisma.$FavoriteTouristPointPayload<ExtArgs>[]
      ImageTouristPointByTouristPointId: Prisma.$ImageTouristPointPayload<ExtArgs>[]
      RoadMapRelation: Prisma.$Travel_Road_MapPayload<ExtArgs>[]
      userReportTouristPointByIdTouristPoint: Prisma.$reportTouristPointPayload<ExtArgs>[]
      userNotificationTouristPointByIdTouristPoint: Prisma.$notificationTouristPointPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string
      creationDate: Date
      local: string
      userImageUrl: string | null
      reportNumber: number
      isPublished: boolean
    }, ExtArgs["result"]["ponto_Turistico"]>
    composites: {}
  }

  type Ponto_TuristicoGetPayload<S extends boolean | null | undefined | Ponto_TuristicoDefaultArgs> = $Result.GetResult<Prisma.$Ponto_TuristicoPayload, S>

  type Ponto_TuristicoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Ponto_TuristicoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Ponto_TuristicoCountAggregateInputType | true
    }

  export interface Ponto_TuristicoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Ponto_Turistico'], meta: { name: 'Ponto_Turistico' } }
    /**
     * Find zero or one Ponto_Turistico that matches the filter.
     * @param {Ponto_TuristicoFindUniqueArgs} args - Arguments to find a Ponto_Turistico
     * @example
     * // Get one Ponto_Turistico
     * const ponto_Turistico = await prisma.ponto_Turistico.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Ponto_TuristicoFindUniqueArgs>(args: SelectSubset<T, Ponto_TuristicoFindUniqueArgs<ExtArgs>>): Prisma__Ponto_TuristicoClient<$Result.GetResult<Prisma.$Ponto_TuristicoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ponto_Turistico that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Ponto_TuristicoFindUniqueOrThrowArgs} args - Arguments to find a Ponto_Turistico
     * @example
     * // Get one Ponto_Turistico
     * const ponto_Turistico = await prisma.ponto_Turistico.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Ponto_TuristicoFindUniqueOrThrowArgs>(args: SelectSubset<T, Ponto_TuristicoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Ponto_TuristicoClient<$Result.GetResult<Prisma.$Ponto_TuristicoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ponto_Turistico that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ponto_TuristicoFindFirstArgs} args - Arguments to find a Ponto_Turistico
     * @example
     * // Get one Ponto_Turistico
     * const ponto_Turistico = await prisma.ponto_Turistico.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Ponto_TuristicoFindFirstArgs>(args?: SelectSubset<T, Ponto_TuristicoFindFirstArgs<ExtArgs>>): Prisma__Ponto_TuristicoClient<$Result.GetResult<Prisma.$Ponto_TuristicoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ponto_Turistico that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ponto_TuristicoFindFirstOrThrowArgs} args - Arguments to find a Ponto_Turistico
     * @example
     * // Get one Ponto_Turistico
     * const ponto_Turistico = await prisma.ponto_Turistico.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Ponto_TuristicoFindFirstOrThrowArgs>(args?: SelectSubset<T, Ponto_TuristicoFindFirstOrThrowArgs<ExtArgs>>): Prisma__Ponto_TuristicoClient<$Result.GetResult<Prisma.$Ponto_TuristicoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ponto_Turisticos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ponto_TuristicoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ponto_Turisticos
     * const ponto_Turisticos = await prisma.ponto_Turistico.findMany()
     * 
     * // Get first 10 Ponto_Turisticos
     * const ponto_Turisticos = await prisma.ponto_Turistico.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ponto_TuristicoWithIdOnly = await prisma.ponto_Turistico.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Ponto_TuristicoFindManyArgs>(args?: SelectSubset<T, Ponto_TuristicoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Ponto_TuristicoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ponto_Turistico.
     * @param {Ponto_TuristicoCreateArgs} args - Arguments to create a Ponto_Turistico.
     * @example
     * // Create one Ponto_Turistico
     * const Ponto_Turistico = await prisma.ponto_Turistico.create({
     *   data: {
     *     // ... data to create a Ponto_Turistico
     *   }
     * })
     * 
     */
    create<T extends Ponto_TuristicoCreateArgs>(args: SelectSubset<T, Ponto_TuristicoCreateArgs<ExtArgs>>): Prisma__Ponto_TuristicoClient<$Result.GetResult<Prisma.$Ponto_TuristicoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ponto_Turisticos.
     * @param {Ponto_TuristicoCreateManyArgs} args - Arguments to create many Ponto_Turisticos.
     * @example
     * // Create many Ponto_Turisticos
     * const ponto_Turistico = await prisma.ponto_Turistico.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Ponto_TuristicoCreateManyArgs>(args?: SelectSubset<T, Ponto_TuristicoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Ponto_Turistico.
     * @param {Ponto_TuristicoDeleteArgs} args - Arguments to delete one Ponto_Turistico.
     * @example
     * // Delete one Ponto_Turistico
     * const Ponto_Turistico = await prisma.ponto_Turistico.delete({
     *   where: {
     *     // ... filter to delete one Ponto_Turistico
     *   }
     * })
     * 
     */
    delete<T extends Ponto_TuristicoDeleteArgs>(args: SelectSubset<T, Ponto_TuristicoDeleteArgs<ExtArgs>>): Prisma__Ponto_TuristicoClient<$Result.GetResult<Prisma.$Ponto_TuristicoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ponto_Turistico.
     * @param {Ponto_TuristicoUpdateArgs} args - Arguments to update one Ponto_Turistico.
     * @example
     * // Update one Ponto_Turistico
     * const ponto_Turistico = await prisma.ponto_Turistico.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Ponto_TuristicoUpdateArgs>(args: SelectSubset<T, Ponto_TuristicoUpdateArgs<ExtArgs>>): Prisma__Ponto_TuristicoClient<$Result.GetResult<Prisma.$Ponto_TuristicoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ponto_Turisticos.
     * @param {Ponto_TuristicoDeleteManyArgs} args - Arguments to filter Ponto_Turisticos to delete.
     * @example
     * // Delete a few Ponto_Turisticos
     * const { count } = await prisma.ponto_Turistico.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Ponto_TuristicoDeleteManyArgs>(args?: SelectSubset<T, Ponto_TuristicoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ponto_Turisticos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ponto_TuristicoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ponto_Turisticos
     * const ponto_Turistico = await prisma.ponto_Turistico.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Ponto_TuristicoUpdateManyArgs>(args: SelectSubset<T, Ponto_TuristicoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Ponto_Turistico.
     * @param {Ponto_TuristicoUpsertArgs} args - Arguments to update or create a Ponto_Turistico.
     * @example
     * // Update or create a Ponto_Turistico
     * const ponto_Turistico = await prisma.ponto_Turistico.upsert({
     *   create: {
     *     // ... data to create a Ponto_Turistico
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ponto_Turistico we want to update
     *   }
     * })
     */
    upsert<T extends Ponto_TuristicoUpsertArgs>(args: SelectSubset<T, Ponto_TuristicoUpsertArgs<ExtArgs>>): Prisma__Ponto_TuristicoClient<$Result.GetResult<Prisma.$Ponto_TuristicoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ponto_Turisticos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ponto_TuristicoCountArgs} args - Arguments to filter Ponto_Turisticos to count.
     * @example
     * // Count the number of Ponto_Turisticos
     * const count = await prisma.ponto_Turistico.count({
     *   where: {
     *     // ... the filter for the Ponto_Turisticos we want to count
     *   }
     * })
    **/
    count<T extends Ponto_TuristicoCountArgs>(
      args?: Subset<T, Ponto_TuristicoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Ponto_TuristicoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ponto_Turistico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ponto_TuristicoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Ponto_TuristicoAggregateArgs>(args: Subset<T, Ponto_TuristicoAggregateArgs>): Prisma.PrismaPromise<GetPonto_TuristicoAggregateType<T>>

    /**
     * Group by Ponto_Turistico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ponto_TuristicoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Ponto_TuristicoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Ponto_TuristicoGroupByArgs['orderBy'] }
        : { orderBy?: Ponto_TuristicoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Ponto_TuristicoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPonto_TuristicoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Ponto_Turistico model
   */
  readonly fields: Ponto_TuristicoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Ponto_Turistico.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Ponto_TuristicoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    avaliationTouristPoint<T extends Ponto_Turistico$avaliationTouristPointArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_Turistico$avaliationTouristPointArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliationTouristPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    commentTouristPointByTouristPointId<T extends Ponto_Turistico$commentTouristPointByTouristPointIdArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_Turistico$commentTouristPointByTouristPointIdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentTouristPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    FavoriteTouristPointByTouristPointId<T extends Ponto_Turistico$FavoriteTouristPointByTouristPointIdArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_Turistico$FavoriteTouristPointByTouristPointIdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoriteTouristPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ImageTouristPointByTouristPointId<T extends Ponto_Turistico$ImageTouristPointByTouristPointIdArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_Turistico$ImageTouristPointByTouristPointIdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImageTouristPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    RoadMapRelation<T extends Ponto_Turistico$RoadMapRelationArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_Turistico$RoadMapRelationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userReportTouristPointByIdTouristPoint<T extends Ponto_Turistico$userReportTouristPointByIdTouristPointArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_Turistico$userReportTouristPointByIdTouristPointArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportTouristPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userNotificationTouristPointByIdTouristPoint<T extends Ponto_Turistico$userNotificationTouristPointByIdTouristPointArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_Turistico$userNotificationTouristPointByIdTouristPointArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationTouristPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Ponto_Turistico model
   */
  interface Ponto_TuristicoFieldRefs {
    readonly id: FieldRef<"Ponto_Turistico", 'String'>
    readonly name: FieldRef<"Ponto_Turistico", 'String'>
    readonly description: FieldRef<"Ponto_Turistico", 'String'>
    readonly creationDate: FieldRef<"Ponto_Turistico", 'DateTime'>
    readonly local: FieldRef<"Ponto_Turistico", 'String'>
    readonly userImageUrl: FieldRef<"Ponto_Turistico", 'String'>
    readonly reportNumber: FieldRef<"Ponto_Turistico", 'Int'>
    readonly isPublished: FieldRef<"Ponto_Turistico", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Ponto_Turistico findUnique
   */
  export type Ponto_TuristicoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Turistico
     */
    select?: Ponto_TuristicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Turistico
     */
    omit?: Ponto_TuristicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_TuristicoInclude<ExtArgs> | null
    /**
     * Filter, which Ponto_Turistico to fetch.
     */
    where: Ponto_TuristicoWhereUniqueInput
  }

  /**
   * Ponto_Turistico findUniqueOrThrow
   */
  export type Ponto_TuristicoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Turistico
     */
    select?: Ponto_TuristicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Turistico
     */
    omit?: Ponto_TuristicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_TuristicoInclude<ExtArgs> | null
    /**
     * Filter, which Ponto_Turistico to fetch.
     */
    where: Ponto_TuristicoWhereUniqueInput
  }

  /**
   * Ponto_Turistico findFirst
   */
  export type Ponto_TuristicoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Turistico
     */
    select?: Ponto_TuristicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Turistico
     */
    omit?: Ponto_TuristicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_TuristicoInclude<ExtArgs> | null
    /**
     * Filter, which Ponto_Turistico to fetch.
     */
    where?: Ponto_TuristicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ponto_Turisticos to fetch.
     */
    orderBy?: Ponto_TuristicoOrderByWithRelationInput | Ponto_TuristicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ponto_Turisticos.
     */
    cursor?: Ponto_TuristicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ponto_Turisticos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ponto_Turisticos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ponto_Turisticos.
     */
    distinct?: Ponto_TuristicoScalarFieldEnum | Ponto_TuristicoScalarFieldEnum[]
  }

  /**
   * Ponto_Turistico findFirstOrThrow
   */
  export type Ponto_TuristicoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Turistico
     */
    select?: Ponto_TuristicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Turistico
     */
    omit?: Ponto_TuristicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_TuristicoInclude<ExtArgs> | null
    /**
     * Filter, which Ponto_Turistico to fetch.
     */
    where?: Ponto_TuristicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ponto_Turisticos to fetch.
     */
    orderBy?: Ponto_TuristicoOrderByWithRelationInput | Ponto_TuristicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ponto_Turisticos.
     */
    cursor?: Ponto_TuristicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ponto_Turisticos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ponto_Turisticos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ponto_Turisticos.
     */
    distinct?: Ponto_TuristicoScalarFieldEnum | Ponto_TuristicoScalarFieldEnum[]
  }

  /**
   * Ponto_Turistico findMany
   */
  export type Ponto_TuristicoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Turistico
     */
    select?: Ponto_TuristicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Turistico
     */
    omit?: Ponto_TuristicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_TuristicoInclude<ExtArgs> | null
    /**
     * Filter, which Ponto_Turisticos to fetch.
     */
    where?: Ponto_TuristicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ponto_Turisticos to fetch.
     */
    orderBy?: Ponto_TuristicoOrderByWithRelationInput | Ponto_TuristicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ponto_Turisticos.
     */
    cursor?: Ponto_TuristicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ponto_Turisticos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ponto_Turisticos.
     */
    skip?: number
    distinct?: Ponto_TuristicoScalarFieldEnum | Ponto_TuristicoScalarFieldEnum[]
  }

  /**
   * Ponto_Turistico create
   */
  export type Ponto_TuristicoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Turistico
     */
    select?: Ponto_TuristicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Turistico
     */
    omit?: Ponto_TuristicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_TuristicoInclude<ExtArgs> | null
    /**
     * The data needed to create a Ponto_Turistico.
     */
    data: XOR<Ponto_TuristicoCreateInput, Ponto_TuristicoUncheckedCreateInput>
  }

  /**
   * Ponto_Turistico createMany
   */
  export type Ponto_TuristicoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Ponto_Turisticos.
     */
    data: Ponto_TuristicoCreateManyInput | Ponto_TuristicoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Ponto_Turistico update
   */
  export type Ponto_TuristicoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Turistico
     */
    select?: Ponto_TuristicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Turistico
     */
    omit?: Ponto_TuristicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_TuristicoInclude<ExtArgs> | null
    /**
     * The data needed to update a Ponto_Turistico.
     */
    data: XOR<Ponto_TuristicoUpdateInput, Ponto_TuristicoUncheckedUpdateInput>
    /**
     * Choose, which Ponto_Turistico to update.
     */
    where: Ponto_TuristicoWhereUniqueInput
  }

  /**
   * Ponto_Turistico updateMany
   */
  export type Ponto_TuristicoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Ponto_Turisticos.
     */
    data: XOR<Ponto_TuristicoUpdateManyMutationInput, Ponto_TuristicoUncheckedUpdateManyInput>
    /**
     * Filter which Ponto_Turisticos to update
     */
    where?: Ponto_TuristicoWhereInput
    /**
     * Limit how many Ponto_Turisticos to update.
     */
    limit?: number
  }

  /**
   * Ponto_Turistico upsert
   */
  export type Ponto_TuristicoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Turistico
     */
    select?: Ponto_TuristicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Turistico
     */
    omit?: Ponto_TuristicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_TuristicoInclude<ExtArgs> | null
    /**
     * The filter to search for the Ponto_Turistico to update in case it exists.
     */
    where: Ponto_TuristicoWhereUniqueInput
    /**
     * In case the Ponto_Turistico found by the `where` argument doesn't exist, create a new Ponto_Turistico with this data.
     */
    create: XOR<Ponto_TuristicoCreateInput, Ponto_TuristicoUncheckedCreateInput>
    /**
     * In case the Ponto_Turistico was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Ponto_TuristicoUpdateInput, Ponto_TuristicoUncheckedUpdateInput>
  }

  /**
   * Ponto_Turistico delete
   */
  export type Ponto_TuristicoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Turistico
     */
    select?: Ponto_TuristicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Turistico
     */
    omit?: Ponto_TuristicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_TuristicoInclude<ExtArgs> | null
    /**
     * Filter which Ponto_Turistico to delete.
     */
    where: Ponto_TuristicoWhereUniqueInput
  }

  /**
   * Ponto_Turistico deleteMany
   */
  export type Ponto_TuristicoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ponto_Turisticos to delete
     */
    where?: Ponto_TuristicoWhereInput
    /**
     * Limit how many Ponto_Turisticos to delete.
     */
    limit?: number
  }

  /**
   * Ponto_Turistico.avaliationTouristPoint
   */
  export type Ponto_Turistico$avaliationTouristPointArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationTouristPoint
     */
    select?: AvaliationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationTouristPoint
     */
    omit?: AvaliationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationTouristPointInclude<ExtArgs> | null
    where?: AvaliationTouristPointWhereInput
    orderBy?: AvaliationTouristPointOrderByWithRelationInput | AvaliationTouristPointOrderByWithRelationInput[]
    cursor?: AvaliationTouristPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AvaliationTouristPointScalarFieldEnum | AvaliationTouristPointScalarFieldEnum[]
  }

  /**
   * Ponto_Turistico.commentTouristPointByTouristPointId
   */
  export type Ponto_Turistico$commentTouristPointByTouristPointIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentTouristPoint
     */
    select?: CommentTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentTouristPoint
     */
    omit?: CommentTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentTouristPointInclude<ExtArgs> | null
    where?: CommentTouristPointWhereInput
    orderBy?: CommentTouristPointOrderByWithRelationInput | CommentTouristPointOrderByWithRelationInput[]
    cursor?: CommentTouristPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentTouristPointScalarFieldEnum | CommentTouristPointScalarFieldEnum[]
  }

  /**
   * Ponto_Turistico.FavoriteTouristPointByTouristPointId
   */
  export type Ponto_Turistico$FavoriteTouristPointByTouristPointIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteTouristPoint
     */
    select?: FavoriteTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteTouristPoint
     */
    omit?: FavoriteTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteTouristPointInclude<ExtArgs> | null
    where?: FavoriteTouristPointWhereInput
    orderBy?: FavoriteTouristPointOrderByWithRelationInput | FavoriteTouristPointOrderByWithRelationInput[]
    cursor?: FavoriteTouristPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoriteTouristPointScalarFieldEnum | FavoriteTouristPointScalarFieldEnum[]
  }

  /**
   * Ponto_Turistico.ImageTouristPointByTouristPointId
   */
  export type Ponto_Turistico$ImageTouristPointByTouristPointIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageTouristPoint
     */
    select?: ImageTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageTouristPoint
     */
    omit?: ImageTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageTouristPointInclude<ExtArgs> | null
    where?: ImageTouristPointWhereInput
    orderBy?: ImageTouristPointOrderByWithRelationInput | ImageTouristPointOrderByWithRelationInput[]
    cursor?: ImageTouristPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImageTouristPointScalarFieldEnum | ImageTouristPointScalarFieldEnum[]
  }

  /**
   * Ponto_Turistico.RoadMapRelation
   */
  export type Ponto_Turistico$RoadMapRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Travel_Road_Map
     */
    select?: Travel_Road_MapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Travel_Road_Map
     */
    omit?: Travel_Road_MapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Travel_Road_MapInclude<ExtArgs> | null
    where?: Travel_Road_MapWhereInput
    orderBy?: Travel_Road_MapOrderByWithRelationInput | Travel_Road_MapOrderByWithRelationInput[]
    cursor?: Travel_Road_MapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Travel_Road_MapScalarFieldEnum | Travel_Road_MapScalarFieldEnum[]
  }

  /**
   * Ponto_Turistico.userReportTouristPointByIdTouristPoint
   */
  export type Ponto_Turistico$userReportTouristPointByIdTouristPointArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportTouristPoint
     */
    select?: reportTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportTouristPoint
     */
    omit?: reportTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportTouristPointInclude<ExtArgs> | null
    where?: reportTouristPointWhereInput
    orderBy?: reportTouristPointOrderByWithRelationInput | reportTouristPointOrderByWithRelationInput[]
    cursor?: reportTouristPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportTouristPointScalarFieldEnum | ReportTouristPointScalarFieldEnum[]
  }

  /**
   * Ponto_Turistico.userNotificationTouristPointByIdTouristPoint
   */
  export type Ponto_Turistico$userNotificationTouristPointByIdTouristPointArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationTouristPoint
     */
    select?: notificationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationTouristPoint
     */
    omit?: notificationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationTouristPointInclude<ExtArgs> | null
    where?: notificationTouristPointWhereInput
    orderBy?: notificationTouristPointOrderByWithRelationInput | notificationTouristPointOrderByWithRelationInput[]
    cursor?: notificationTouristPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationTouristPointScalarFieldEnum | NotificationTouristPointScalarFieldEnum[]
  }

  /**
   * Ponto_Turistico without action
   */
  export type Ponto_TuristicoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Turistico
     */
    select?: Ponto_TuristicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Turistico
     */
    omit?: Ponto_TuristicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_TuristicoInclude<ExtArgs> | null
  }


  /**
   * Model Travel_Road_Map
   */

  export type AggregateTravel_Road_Map = {
    _count: Travel_Road_MapCountAggregateOutputType | null
    _avg: Travel_Road_MapAvgAggregateOutputType | null
    _sum: Travel_Road_MapSumAggregateOutputType | null
    _min: Travel_Road_MapMinAggregateOutputType | null
    _max: Travel_Road_MapMaxAggregateOutputType | null
  }

  export type Travel_Road_MapAvgAggregateOutputType = {
    avaliationValue: number | null
    reportNumber: number | null
  }

  export type Travel_Road_MapSumAggregateOutputType = {
    avaliationValue: number | null
    reportNumber: number | null
  }

  export type Travel_Road_MapMinAggregateOutputType = {
    id: string | null
    title: string | null
    dataPublication: Date | null
    description: string | null
    idCreator: string | null
    avaliationValue: number | null
    isPublished: boolean | null
    userImageUrl: string | null
    reportNumber: number | null
  }

  export type Travel_Road_MapMaxAggregateOutputType = {
    id: string | null
    title: string | null
    dataPublication: Date | null
    description: string | null
    idCreator: string | null
    avaliationValue: number | null
    isPublished: boolean | null
    userImageUrl: string | null
    reportNumber: number | null
  }

  export type Travel_Road_MapCountAggregateOutputType = {
    id: number
    title: number
    dataPublication: number
    description: number
    idCreator: number
    avaliationValue: number
    isPublished: number
    userImageUrl: number
    reportNumber: number
    _all: number
  }


  export type Travel_Road_MapAvgAggregateInputType = {
    avaliationValue?: true
    reportNumber?: true
  }

  export type Travel_Road_MapSumAggregateInputType = {
    avaliationValue?: true
    reportNumber?: true
  }

  export type Travel_Road_MapMinAggregateInputType = {
    id?: true
    title?: true
    dataPublication?: true
    description?: true
    idCreator?: true
    avaliationValue?: true
    isPublished?: true
    userImageUrl?: true
    reportNumber?: true
  }

  export type Travel_Road_MapMaxAggregateInputType = {
    id?: true
    title?: true
    dataPublication?: true
    description?: true
    idCreator?: true
    avaliationValue?: true
    isPublished?: true
    userImageUrl?: true
    reportNumber?: true
  }

  export type Travel_Road_MapCountAggregateInputType = {
    id?: true
    title?: true
    dataPublication?: true
    description?: true
    idCreator?: true
    avaliationValue?: true
    isPublished?: true
    userImageUrl?: true
    reportNumber?: true
    _all?: true
  }

  export type Travel_Road_MapAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Travel_Road_Map to aggregate.
     */
    where?: Travel_Road_MapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Travel_Road_Maps to fetch.
     */
    orderBy?: Travel_Road_MapOrderByWithRelationInput | Travel_Road_MapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Travel_Road_MapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Travel_Road_Maps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Travel_Road_Maps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Travel_Road_Maps
    **/
    _count?: true | Travel_Road_MapCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Travel_Road_MapAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Travel_Road_MapSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Travel_Road_MapMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Travel_Road_MapMaxAggregateInputType
  }

  export type GetTravel_Road_MapAggregateType<T extends Travel_Road_MapAggregateArgs> = {
        [P in keyof T & keyof AggregateTravel_Road_Map]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTravel_Road_Map[P]>
      : GetScalarType<T[P], AggregateTravel_Road_Map[P]>
  }




  export type Travel_Road_MapGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Travel_Road_MapWhereInput
    orderBy?: Travel_Road_MapOrderByWithAggregationInput | Travel_Road_MapOrderByWithAggregationInput[]
    by: Travel_Road_MapScalarFieldEnum[] | Travel_Road_MapScalarFieldEnum
    having?: Travel_Road_MapScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Travel_Road_MapCountAggregateInputType | true
    _avg?: Travel_Road_MapAvgAggregateInputType
    _sum?: Travel_Road_MapSumAggregateInputType
    _min?: Travel_Road_MapMinAggregateInputType
    _max?: Travel_Road_MapMaxAggregateInputType
  }

  export type Travel_Road_MapGroupByOutputType = {
    id: string
    title: string
    dataPublication: Date | null
    description: string
    idCreator: string
    avaliationValue: number
    isPublished: boolean
    userImageUrl: string | null
    reportNumber: number
    _count: Travel_Road_MapCountAggregateOutputType | null
    _avg: Travel_Road_MapAvgAggregateOutputType | null
    _sum: Travel_Road_MapSumAggregateOutputType | null
    _min: Travel_Road_MapMinAggregateOutputType | null
    _max: Travel_Road_MapMaxAggregateOutputType | null
  }

  type GetTravel_Road_MapGroupByPayload<T extends Travel_Road_MapGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Travel_Road_MapGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Travel_Road_MapGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Travel_Road_MapGroupByOutputType[P]>
            : GetScalarType<T[P], Travel_Road_MapGroupByOutputType[P]>
        }
      >
    >


  export type Travel_Road_MapSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    dataPublication?: boolean
    description?: boolean
    idCreator?: boolean
    avaliationValue?: boolean
    isPublished?: boolean
    userImageUrl?: boolean
    reportNumber?: boolean
    userClient?: boolean | User_ClientDefaultArgs<ExtArgs>
    AvaliationRoadMap?: boolean | Travel_Road_Map$AvaliationRoadMapArgs<ExtArgs>
    commentRoadMapByRoadMapId?: boolean | Travel_Road_Map$commentRoadMapByRoadMapIdArgs<ExtArgs>
    FavoriteRoadMapByRoadMapId?: boolean | Travel_Road_Map$FavoriteRoadMapByRoadMapIdArgs<ExtArgs>
    ImageRoadMapByRoadMapId?: boolean | Travel_Road_Map$ImageRoadMapByRoadMapIdArgs<ExtArgs>
    PontosTuristicosRelation?: boolean | Travel_Road_Map$PontosTuristicosRelationArgs<ExtArgs>
    PontosComerciaisRelation?: boolean | Travel_Road_Map$PontosComerciaisRelationArgs<ExtArgs>
    CountryRelation?: boolean | Travel_Road_Map$CountryRelationArgs<ExtArgs>
    StateRelation?: boolean | Travel_Road_Map$StateRelationArgs<ExtArgs>
    CityRelation?: boolean | Travel_Road_Map$CityRelationArgs<ExtArgs>
    userReportRoadMapByIdRoadMap?: boolean | Travel_Road_Map$userReportRoadMapByIdRoadMapArgs<ExtArgs>
    userNotificationRoadMapByIdRoadMap?: boolean | Travel_Road_Map$userNotificationRoadMapByIdRoadMapArgs<ExtArgs>
    _count?: boolean | Travel_Road_MapCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["travel_Road_Map"]>



  export type Travel_Road_MapSelectScalar = {
    id?: boolean
    title?: boolean
    dataPublication?: boolean
    description?: boolean
    idCreator?: boolean
    avaliationValue?: boolean
    isPublished?: boolean
    userImageUrl?: boolean
    reportNumber?: boolean
  }

  export type Travel_Road_MapOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "dataPublication" | "description" | "idCreator" | "avaliationValue" | "isPublished" | "userImageUrl" | "reportNumber", ExtArgs["result"]["travel_Road_Map"]>
  export type Travel_Road_MapInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userClient?: boolean | User_ClientDefaultArgs<ExtArgs>
    AvaliationRoadMap?: boolean | Travel_Road_Map$AvaliationRoadMapArgs<ExtArgs>
    commentRoadMapByRoadMapId?: boolean | Travel_Road_Map$commentRoadMapByRoadMapIdArgs<ExtArgs>
    FavoriteRoadMapByRoadMapId?: boolean | Travel_Road_Map$FavoriteRoadMapByRoadMapIdArgs<ExtArgs>
    ImageRoadMapByRoadMapId?: boolean | Travel_Road_Map$ImageRoadMapByRoadMapIdArgs<ExtArgs>
    PontosTuristicosRelation?: boolean | Travel_Road_Map$PontosTuristicosRelationArgs<ExtArgs>
    PontosComerciaisRelation?: boolean | Travel_Road_Map$PontosComerciaisRelationArgs<ExtArgs>
    CountryRelation?: boolean | Travel_Road_Map$CountryRelationArgs<ExtArgs>
    StateRelation?: boolean | Travel_Road_Map$StateRelationArgs<ExtArgs>
    CityRelation?: boolean | Travel_Road_Map$CityRelationArgs<ExtArgs>
    userReportRoadMapByIdRoadMap?: boolean | Travel_Road_Map$userReportRoadMapByIdRoadMapArgs<ExtArgs>
    userNotificationRoadMapByIdRoadMap?: boolean | Travel_Road_Map$userNotificationRoadMapByIdRoadMapArgs<ExtArgs>
    _count?: boolean | Travel_Road_MapCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $Travel_Road_MapPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Travel_Road_Map"
    objects: {
      userClient: Prisma.$User_ClientPayload<ExtArgs>
      AvaliationRoadMap: Prisma.$AvaliationRoadMapPayload<ExtArgs>[]
      commentRoadMapByRoadMapId: Prisma.$CommentRoadMapPayload<ExtArgs>[]
      FavoriteRoadMapByRoadMapId: Prisma.$FavoriteRoadMapPayload<ExtArgs>[]
      ImageRoadMapByRoadMapId: Prisma.$ImageRoadMapPayload<ExtArgs>[]
      PontosTuristicosRelation: Prisma.$Ponto_TuristicoPayload<ExtArgs>[]
      PontosComerciaisRelation: Prisma.$Ponto_ComercialPayload<ExtArgs>[]
      CountryRelation: Prisma.$CountryPayload<ExtArgs>[]
      StateRelation: Prisma.$StatePayload<ExtArgs>[]
      CityRelation: Prisma.$CityPayload<ExtArgs>[]
      userReportRoadMapByIdRoadMap: Prisma.$reportRoadMapPayload<ExtArgs>[]
      userNotificationRoadMapByIdRoadMap: Prisma.$notificationRoadMapPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      dataPublication: Date | null
      description: string
      idCreator: string
      avaliationValue: number
      isPublished: boolean
      userImageUrl: string | null
      reportNumber: number
    }, ExtArgs["result"]["travel_Road_Map"]>
    composites: {}
  }

  type Travel_Road_MapGetPayload<S extends boolean | null | undefined | Travel_Road_MapDefaultArgs> = $Result.GetResult<Prisma.$Travel_Road_MapPayload, S>

  type Travel_Road_MapCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Travel_Road_MapFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Travel_Road_MapCountAggregateInputType | true
    }

  export interface Travel_Road_MapDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Travel_Road_Map'], meta: { name: 'Travel_Road_Map' } }
    /**
     * Find zero or one Travel_Road_Map that matches the filter.
     * @param {Travel_Road_MapFindUniqueArgs} args - Arguments to find a Travel_Road_Map
     * @example
     * // Get one Travel_Road_Map
     * const travel_Road_Map = await prisma.travel_Road_Map.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Travel_Road_MapFindUniqueArgs>(args: SelectSubset<T, Travel_Road_MapFindUniqueArgs<ExtArgs>>): Prisma__Travel_Road_MapClient<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Travel_Road_Map that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Travel_Road_MapFindUniqueOrThrowArgs} args - Arguments to find a Travel_Road_Map
     * @example
     * // Get one Travel_Road_Map
     * const travel_Road_Map = await prisma.travel_Road_Map.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Travel_Road_MapFindUniqueOrThrowArgs>(args: SelectSubset<T, Travel_Road_MapFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Travel_Road_MapClient<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Travel_Road_Map that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Travel_Road_MapFindFirstArgs} args - Arguments to find a Travel_Road_Map
     * @example
     * // Get one Travel_Road_Map
     * const travel_Road_Map = await prisma.travel_Road_Map.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Travel_Road_MapFindFirstArgs>(args?: SelectSubset<T, Travel_Road_MapFindFirstArgs<ExtArgs>>): Prisma__Travel_Road_MapClient<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Travel_Road_Map that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Travel_Road_MapFindFirstOrThrowArgs} args - Arguments to find a Travel_Road_Map
     * @example
     * // Get one Travel_Road_Map
     * const travel_Road_Map = await prisma.travel_Road_Map.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Travel_Road_MapFindFirstOrThrowArgs>(args?: SelectSubset<T, Travel_Road_MapFindFirstOrThrowArgs<ExtArgs>>): Prisma__Travel_Road_MapClient<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Travel_Road_Maps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Travel_Road_MapFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Travel_Road_Maps
     * const travel_Road_Maps = await prisma.travel_Road_Map.findMany()
     * 
     * // Get first 10 Travel_Road_Maps
     * const travel_Road_Maps = await prisma.travel_Road_Map.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const travel_Road_MapWithIdOnly = await prisma.travel_Road_Map.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Travel_Road_MapFindManyArgs>(args?: SelectSubset<T, Travel_Road_MapFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Travel_Road_Map.
     * @param {Travel_Road_MapCreateArgs} args - Arguments to create a Travel_Road_Map.
     * @example
     * // Create one Travel_Road_Map
     * const Travel_Road_Map = await prisma.travel_Road_Map.create({
     *   data: {
     *     // ... data to create a Travel_Road_Map
     *   }
     * })
     * 
     */
    create<T extends Travel_Road_MapCreateArgs>(args: SelectSubset<T, Travel_Road_MapCreateArgs<ExtArgs>>): Prisma__Travel_Road_MapClient<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Travel_Road_Maps.
     * @param {Travel_Road_MapCreateManyArgs} args - Arguments to create many Travel_Road_Maps.
     * @example
     * // Create many Travel_Road_Maps
     * const travel_Road_Map = await prisma.travel_Road_Map.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Travel_Road_MapCreateManyArgs>(args?: SelectSubset<T, Travel_Road_MapCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Travel_Road_Map.
     * @param {Travel_Road_MapDeleteArgs} args - Arguments to delete one Travel_Road_Map.
     * @example
     * // Delete one Travel_Road_Map
     * const Travel_Road_Map = await prisma.travel_Road_Map.delete({
     *   where: {
     *     // ... filter to delete one Travel_Road_Map
     *   }
     * })
     * 
     */
    delete<T extends Travel_Road_MapDeleteArgs>(args: SelectSubset<T, Travel_Road_MapDeleteArgs<ExtArgs>>): Prisma__Travel_Road_MapClient<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Travel_Road_Map.
     * @param {Travel_Road_MapUpdateArgs} args - Arguments to update one Travel_Road_Map.
     * @example
     * // Update one Travel_Road_Map
     * const travel_Road_Map = await prisma.travel_Road_Map.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Travel_Road_MapUpdateArgs>(args: SelectSubset<T, Travel_Road_MapUpdateArgs<ExtArgs>>): Prisma__Travel_Road_MapClient<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Travel_Road_Maps.
     * @param {Travel_Road_MapDeleteManyArgs} args - Arguments to filter Travel_Road_Maps to delete.
     * @example
     * // Delete a few Travel_Road_Maps
     * const { count } = await prisma.travel_Road_Map.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Travel_Road_MapDeleteManyArgs>(args?: SelectSubset<T, Travel_Road_MapDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Travel_Road_Maps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Travel_Road_MapUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Travel_Road_Maps
     * const travel_Road_Map = await prisma.travel_Road_Map.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Travel_Road_MapUpdateManyArgs>(args: SelectSubset<T, Travel_Road_MapUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Travel_Road_Map.
     * @param {Travel_Road_MapUpsertArgs} args - Arguments to update or create a Travel_Road_Map.
     * @example
     * // Update or create a Travel_Road_Map
     * const travel_Road_Map = await prisma.travel_Road_Map.upsert({
     *   create: {
     *     // ... data to create a Travel_Road_Map
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Travel_Road_Map we want to update
     *   }
     * })
     */
    upsert<T extends Travel_Road_MapUpsertArgs>(args: SelectSubset<T, Travel_Road_MapUpsertArgs<ExtArgs>>): Prisma__Travel_Road_MapClient<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Travel_Road_Maps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Travel_Road_MapCountArgs} args - Arguments to filter Travel_Road_Maps to count.
     * @example
     * // Count the number of Travel_Road_Maps
     * const count = await prisma.travel_Road_Map.count({
     *   where: {
     *     // ... the filter for the Travel_Road_Maps we want to count
     *   }
     * })
    **/
    count<T extends Travel_Road_MapCountArgs>(
      args?: Subset<T, Travel_Road_MapCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Travel_Road_MapCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Travel_Road_Map.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Travel_Road_MapAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Travel_Road_MapAggregateArgs>(args: Subset<T, Travel_Road_MapAggregateArgs>): Prisma.PrismaPromise<GetTravel_Road_MapAggregateType<T>>

    /**
     * Group by Travel_Road_Map.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Travel_Road_MapGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Travel_Road_MapGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Travel_Road_MapGroupByArgs['orderBy'] }
        : { orderBy?: Travel_Road_MapGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Travel_Road_MapGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTravel_Road_MapGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Travel_Road_Map model
   */
  readonly fields: Travel_Road_MapFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Travel_Road_Map.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Travel_Road_MapClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userClient<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    AvaliationRoadMap<T extends Travel_Road_Map$AvaliationRoadMapArgs<ExtArgs> = {}>(args?: Subset<T, Travel_Road_Map$AvaliationRoadMapArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliationRoadMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    commentRoadMapByRoadMapId<T extends Travel_Road_Map$commentRoadMapByRoadMapIdArgs<ExtArgs> = {}>(args?: Subset<T, Travel_Road_Map$commentRoadMapByRoadMapIdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentRoadMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    FavoriteRoadMapByRoadMapId<T extends Travel_Road_Map$FavoriteRoadMapByRoadMapIdArgs<ExtArgs> = {}>(args?: Subset<T, Travel_Road_Map$FavoriteRoadMapByRoadMapIdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoriteRoadMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ImageRoadMapByRoadMapId<T extends Travel_Road_Map$ImageRoadMapByRoadMapIdArgs<ExtArgs> = {}>(args?: Subset<T, Travel_Road_Map$ImageRoadMapByRoadMapIdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImageRoadMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    PontosTuristicosRelation<T extends Travel_Road_Map$PontosTuristicosRelationArgs<ExtArgs> = {}>(args?: Subset<T, Travel_Road_Map$PontosTuristicosRelationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Ponto_TuristicoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    PontosComerciaisRelation<T extends Travel_Road_Map$PontosComerciaisRelationArgs<ExtArgs> = {}>(args?: Subset<T, Travel_Road_Map$PontosComerciaisRelationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Ponto_ComercialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CountryRelation<T extends Travel_Road_Map$CountryRelationArgs<ExtArgs> = {}>(args?: Subset<T, Travel_Road_Map$CountryRelationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    StateRelation<T extends Travel_Road_Map$StateRelationArgs<ExtArgs> = {}>(args?: Subset<T, Travel_Road_Map$StateRelationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CityRelation<T extends Travel_Road_Map$CityRelationArgs<ExtArgs> = {}>(args?: Subset<T, Travel_Road_Map$CityRelationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userReportRoadMapByIdRoadMap<T extends Travel_Road_Map$userReportRoadMapByIdRoadMapArgs<ExtArgs> = {}>(args?: Subset<T, Travel_Road_Map$userReportRoadMapByIdRoadMapArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportRoadMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userNotificationRoadMapByIdRoadMap<T extends Travel_Road_Map$userNotificationRoadMapByIdRoadMapArgs<ExtArgs> = {}>(args?: Subset<T, Travel_Road_Map$userNotificationRoadMapByIdRoadMapArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationRoadMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Travel_Road_Map model
   */
  interface Travel_Road_MapFieldRefs {
    readonly id: FieldRef<"Travel_Road_Map", 'String'>
    readonly title: FieldRef<"Travel_Road_Map", 'String'>
    readonly dataPublication: FieldRef<"Travel_Road_Map", 'DateTime'>
    readonly description: FieldRef<"Travel_Road_Map", 'String'>
    readonly idCreator: FieldRef<"Travel_Road_Map", 'String'>
    readonly avaliationValue: FieldRef<"Travel_Road_Map", 'Int'>
    readonly isPublished: FieldRef<"Travel_Road_Map", 'Boolean'>
    readonly userImageUrl: FieldRef<"Travel_Road_Map", 'String'>
    readonly reportNumber: FieldRef<"Travel_Road_Map", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Travel_Road_Map findUnique
   */
  export type Travel_Road_MapFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Travel_Road_Map
     */
    select?: Travel_Road_MapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Travel_Road_Map
     */
    omit?: Travel_Road_MapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Travel_Road_MapInclude<ExtArgs> | null
    /**
     * Filter, which Travel_Road_Map to fetch.
     */
    where: Travel_Road_MapWhereUniqueInput
  }

  /**
   * Travel_Road_Map findUniqueOrThrow
   */
  export type Travel_Road_MapFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Travel_Road_Map
     */
    select?: Travel_Road_MapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Travel_Road_Map
     */
    omit?: Travel_Road_MapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Travel_Road_MapInclude<ExtArgs> | null
    /**
     * Filter, which Travel_Road_Map to fetch.
     */
    where: Travel_Road_MapWhereUniqueInput
  }

  /**
   * Travel_Road_Map findFirst
   */
  export type Travel_Road_MapFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Travel_Road_Map
     */
    select?: Travel_Road_MapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Travel_Road_Map
     */
    omit?: Travel_Road_MapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Travel_Road_MapInclude<ExtArgs> | null
    /**
     * Filter, which Travel_Road_Map to fetch.
     */
    where?: Travel_Road_MapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Travel_Road_Maps to fetch.
     */
    orderBy?: Travel_Road_MapOrderByWithRelationInput | Travel_Road_MapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Travel_Road_Maps.
     */
    cursor?: Travel_Road_MapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Travel_Road_Maps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Travel_Road_Maps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Travel_Road_Maps.
     */
    distinct?: Travel_Road_MapScalarFieldEnum | Travel_Road_MapScalarFieldEnum[]
  }

  /**
   * Travel_Road_Map findFirstOrThrow
   */
  export type Travel_Road_MapFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Travel_Road_Map
     */
    select?: Travel_Road_MapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Travel_Road_Map
     */
    omit?: Travel_Road_MapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Travel_Road_MapInclude<ExtArgs> | null
    /**
     * Filter, which Travel_Road_Map to fetch.
     */
    where?: Travel_Road_MapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Travel_Road_Maps to fetch.
     */
    orderBy?: Travel_Road_MapOrderByWithRelationInput | Travel_Road_MapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Travel_Road_Maps.
     */
    cursor?: Travel_Road_MapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Travel_Road_Maps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Travel_Road_Maps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Travel_Road_Maps.
     */
    distinct?: Travel_Road_MapScalarFieldEnum | Travel_Road_MapScalarFieldEnum[]
  }

  /**
   * Travel_Road_Map findMany
   */
  export type Travel_Road_MapFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Travel_Road_Map
     */
    select?: Travel_Road_MapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Travel_Road_Map
     */
    omit?: Travel_Road_MapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Travel_Road_MapInclude<ExtArgs> | null
    /**
     * Filter, which Travel_Road_Maps to fetch.
     */
    where?: Travel_Road_MapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Travel_Road_Maps to fetch.
     */
    orderBy?: Travel_Road_MapOrderByWithRelationInput | Travel_Road_MapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Travel_Road_Maps.
     */
    cursor?: Travel_Road_MapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Travel_Road_Maps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Travel_Road_Maps.
     */
    skip?: number
    distinct?: Travel_Road_MapScalarFieldEnum | Travel_Road_MapScalarFieldEnum[]
  }

  /**
   * Travel_Road_Map create
   */
  export type Travel_Road_MapCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Travel_Road_Map
     */
    select?: Travel_Road_MapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Travel_Road_Map
     */
    omit?: Travel_Road_MapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Travel_Road_MapInclude<ExtArgs> | null
    /**
     * The data needed to create a Travel_Road_Map.
     */
    data: XOR<Travel_Road_MapCreateInput, Travel_Road_MapUncheckedCreateInput>
  }

  /**
   * Travel_Road_Map createMany
   */
  export type Travel_Road_MapCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Travel_Road_Maps.
     */
    data: Travel_Road_MapCreateManyInput | Travel_Road_MapCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Travel_Road_Map update
   */
  export type Travel_Road_MapUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Travel_Road_Map
     */
    select?: Travel_Road_MapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Travel_Road_Map
     */
    omit?: Travel_Road_MapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Travel_Road_MapInclude<ExtArgs> | null
    /**
     * The data needed to update a Travel_Road_Map.
     */
    data: XOR<Travel_Road_MapUpdateInput, Travel_Road_MapUncheckedUpdateInput>
    /**
     * Choose, which Travel_Road_Map to update.
     */
    where: Travel_Road_MapWhereUniqueInput
  }

  /**
   * Travel_Road_Map updateMany
   */
  export type Travel_Road_MapUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Travel_Road_Maps.
     */
    data: XOR<Travel_Road_MapUpdateManyMutationInput, Travel_Road_MapUncheckedUpdateManyInput>
    /**
     * Filter which Travel_Road_Maps to update
     */
    where?: Travel_Road_MapWhereInput
    /**
     * Limit how many Travel_Road_Maps to update.
     */
    limit?: number
  }

  /**
   * Travel_Road_Map upsert
   */
  export type Travel_Road_MapUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Travel_Road_Map
     */
    select?: Travel_Road_MapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Travel_Road_Map
     */
    omit?: Travel_Road_MapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Travel_Road_MapInclude<ExtArgs> | null
    /**
     * The filter to search for the Travel_Road_Map to update in case it exists.
     */
    where: Travel_Road_MapWhereUniqueInput
    /**
     * In case the Travel_Road_Map found by the `where` argument doesn't exist, create a new Travel_Road_Map with this data.
     */
    create: XOR<Travel_Road_MapCreateInput, Travel_Road_MapUncheckedCreateInput>
    /**
     * In case the Travel_Road_Map was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Travel_Road_MapUpdateInput, Travel_Road_MapUncheckedUpdateInput>
  }

  /**
   * Travel_Road_Map delete
   */
  export type Travel_Road_MapDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Travel_Road_Map
     */
    select?: Travel_Road_MapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Travel_Road_Map
     */
    omit?: Travel_Road_MapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Travel_Road_MapInclude<ExtArgs> | null
    /**
     * Filter which Travel_Road_Map to delete.
     */
    where: Travel_Road_MapWhereUniqueInput
  }

  /**
   * Travel_Road_Map deleteMany
   */
  export type Travel_Road_MapDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Travel_Road_Maps to delete
     */
    where?: Travel_Road_MapWhereInput
    /**
     * Limit how many Travel_Road_Maps to delete.
     */
    limit?: number
  }

  /**
   * Travel_Road_Map.AvaliationRoadMap
   */
  export type Travel_Road_Map$AvaliationRoadMapArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationRoadMap
     */
    select?: AvaliationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationRoadMap
     */
    omit?: AvaliationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationRoadMapInclude<ExtArgs> | null
    where?: AvaliationRoadMapWhereInput
    orderBy?: AvaliationRoadMapOrderByWithRelationInput | AvaliationRoadMapOrderByWithRelationInput[]
    cursor?: AvaliationRoadMapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AvaliationRoadMapScalarFieldEnum | AvaliationRoadMapScalarFieldEnum[]
  }

  /**
   * Travel_Road_Map.commentRoadMapByRoadMapId
   */
  export type Travel_Road_Map$commentRoadMapByRoadMapIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentRoadMap
     */
    select?: CommentRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentRoadMap
     */
    omit?: CommentRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentRoadMapInclude<ExtArgs> | null
    where?: CommentRoadMapWhereInput
    orderBy?: CommentRoadMapOrderByWithRelationInput | CommentRoadMapOrderByWithRelationInput[]
    cursor?: CommentRoadMapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentRoadMapScalarFieldEnum | CommentRoadMapScalarFieldEnum[]
  }

  /**
   * Travel_Road_Map.FavoriteRoadMapByRoadMapId
   */
  export type Travel_Road_Map$FavoriteRoadMapByRoadMapIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteRoadMap
     */
    select?: FavoriteRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteRoadMap
     */
    omit?: FavoriteRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteRoadMapInclude<ExtArgs> | null
    where?: FavoriteRoadMapWhereInput
    orderBy?: FavoriteRoadMapOrderByWithRelationInput | FavoriteRoadMapOrderByWithRelationInput[]
    cursor?: FavoriteRoadMapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoriteRoadMapScalarFieldEnum | FavoriteRoadMapScalarFieldEnum[]
  }

  /**
   * Travel_Road_Map.ImageRoadMapByRoadMapId
   */
  export type Travel_Road_Map$ImageRoadMapByRoadMapIdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageRoadMap
     */
    select?: ImageRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageRoadMap
     */
    omit?: ImageRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageRoadMapInclude<ExtArgs> | null
    where?: ImageRoadMapWhereInput
    orderBy?: ImageRoadMapOrderByWithRelationInput | ImageRoadMapOrderByWithRelationInput[]
    cursor?: ImageRoadMapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImageRoadMapScalarFieldEnum | ImageRoadMapScalarFieldEnum[]
  }

  /**
   * Travel_Road_Map.PontosTuristicosRelation
   */
  export type Travel_Road_Map$PontosTuristicosRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Turistico
     */
    select?: Ponto_TuristicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Turistico
     */
    omit?: Ponto_TuristicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_TuristicoInclude<ExtArgs> | null
    where?: Ponto_TuristicoWhereInput
    orderBy?: Ponto_TuristicoOrderByWithRelationInput | Ponto_TuristicoOrderByWithRelationInput[]
    cursor?: Ponto_TuristicoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Ponto_TuristicoScalarFieldEnum | Ponto_TuristicoScalarFieldEnum[]
  }

  /**
   * Travel_Road_Map.PontosComerciaisRelation
   */
  export type Travel_Road_Map$PontosComerciaisRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ponto_Comercial
     */
    select?: Ponto_ComercialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ponto_Comercial
     */
    omit?: Ponto_ComercialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Ponto_ComercialInclude<ExtArgs> | null
    where?: Ponto_ComercialWhereInput
    orderBy?: Ponto_ComercialOrderByWithRelationInput | Ponto_ComercialOrderByWithRelationInput[]
    cursor?: Ponto_ComercialWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Ponto_ComercialScalarFieldEnum | Ponto_ComercialScalarFieldEnum[]
  }

  /**
   * Travel_Road_Map.CountryRelation
   */
  export type Travel_Road_Map$CountryRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
    where?: CountryWhereInput
    orderBy?: CountryOrderByWithRelationInput | CountryOrderByWithRelationInput[]
    cursor?: CountryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CountryScalarFieldEnum | CountryScalarFieldEnum[]
  }

  /**
   * Travel_Road_Map.StateRelation
   */
  export type Travel_Road_Map$StateRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the State
     */
    select?: StateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the State
     */
    omit?: StateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StateInclude<ExtArgs> | null
    where?: StateWhereInput
    orderBy?: StateOrderByWithRelationInput | StateOrderByWithRelationInput[]
    cursor?: StateWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StateScalarFieldEnum | StateScalarFieldEnum[]
  }

  /**
   * Travel_Road_Map.CityRelation
   */
  export type Travel_Road_Map$CityRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CityInclude<ExtArgs> | null
    where?: CityWhereInput
    orderBy?: CityOrderByWithRelationInput | CityOrderByWithRelationInput[]
    cursor?: CityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CityScalarFieldEnum | CityScalarFieldEnum[]
  }

  /**
   * Travel_Road_Map.userReportRoadMapByIdRoadMap
   */
  export type Travel_Road_Map$userReportRoadMapByIdRoadMapArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportRoadMap
     */
    select?: reportRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportRoadMap
     */
    omit?: reportRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportRoadMapInclude<ExtArgs> | null
    where?: reportRoadMapWhereInput
    orderBy?: reportRoadMapOrderByWithRelationInput | reportRoadMapOrderByWithRelationInput[]
    cursor?: reportRoadMapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportRoadMapScalarFieldEnum | ReportRoadMapScalarFieldEnum[]
  }

  /**
   * Travel_Road_Map.userNotificationRoadMapByIdRoadMap
   */
  export type Travel_Road_Map$userNotificationRoadMapByIdRoadMapArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationRoadMap
     */
    select?: notificationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationRoadMap
     */
    omit?: notificationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationRoadMapInclude<ExtArgs> | null
    where?: notificationRoadMapWhereInput
    orderBy?: notificationRoadMapOrderByWithRelationInput | notificationRoadMapOrderByWithRelationInput[]
    cursor?: notificationRoadMapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationRoadMapScalarFieldEnum | NotificationRoadMapScalarFieldEnum[]
  }

  /**
   * Travel_Road_Map without action
   */
  export type Travel_Road_MapDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Travel_Road_Map
     */
    select?: Travel_Road_MapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Travel_Road_Map
     */
    omit?: Travel_Road_MapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Travel_Road_MapInclude<ExtArgs> | null
  }


  /**
   * Model Country
   */

  export type AggregateCountry = {
    _count: CountryCountAggregateOutputType | null
    _min: CountryMinAggregateOutputType | null
    _max: CountryMaxAggregateOutputType | null
  }

  export type CountryMinAggregateOutputType = {
    id: string | null
    name: string | null
  }

  export type CountryMaxAggregateOutputType = {
    id: string | null
    name: string | null
  }

  export type CountryCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type CountryMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type CountryMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type CountryCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type CountryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Country to aggregate.
     */
    where?: CountryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Countries to fetch.
     */
    orderBy?: CountryOrderByWithRelationInput | CountryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CountryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Countries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Countries
    **/
    _count?: true | CountryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CountryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CountryMaxAggregateInputType
  }

  export type GetCountryAggregateType<T extends CountryAggregateArgs> = {
        [P in keyof T & keyof AggregateCountry]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCountry[P]>
      : GetScalarType<T[P], AggregateCountry[P]>
  }




  export type CountryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CountryWhereInput
    orderBy?: CountryOrderByWithAggregationInput | CountryOrderByWithAggregationInput[]
    by: CountryScalarFieldEnum[] | CountryScalarFieldEnum
    having?: CountryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CountryCountAggregateInputType | true
    _min?: CountryMinAggregateInputType
    _max?: CountryMaxAggregateInputType
  }

  export type CountryGroupByOutputType = {
    id: string
    name: string
    _count: CountryCountAggregateOutputType | null
    _min: CountryMinAggregateOutputType | null
    _max: CountryMaxAggregateOutputType | null
  }

  type GetCountryGroupByPayload<T extends CountryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CountryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CountryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CountryGroupByOutputType[P]>
            : GetScalarType<T[P], CountryGroupByOutputType[P]>
        }
      >
    >


  export type CountrySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    StateByCountryName?: boolean | Country$StateByCountryNameArgs<ExtArgs>
    CityByCountryName?: boolean | Country$CityByCountryNameArgs<ExtArgs>
    RoadMapRelation?: boolean | Country$RoadMapRelationArgs<ExtArgs>
    _count?: boolean | CountryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["country"]>



  export type CountrySelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type CountryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["country"]>
  export type CountryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    StateByCountryName?: boolean | Country$StateByCountryNameArgs<ExtArgs>
    CityByCountryName?: boolean | Country$CityByCountryNameArgs<ExtArgs>
    RoadMapRelation?: boolean | Country$RoadMapRelationArgs<ExtArgs>
    _count?: boolean | CountryCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CountryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Country"
    objects: {
      StateByCountryName: Prisma.$StatePayload<ExtArgs>[]
      CityByCountryName: Prisma.$CityPayload<ExtArgs>[]
      RoadMapRelation: Prisma.$Travel_Road_MapPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
    }, ExtArgs["result"]["country"]>
    composites: {}
  }

  type CountryGetPayload<S extends boolean | null | undefined | CountryDefaultArgs> = $Result.GetResult<Prisma.$CountryPayload, S>

  type CountryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CountryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CountryCountAggregateInputType | true
    }

  export interface CountryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Country'], meta: { name: 'Country' } }
    /**
     * Find zero or one Country that matches the filter.
     * @param {CountryFindUniqueArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CountryFindUniqueArgs>(args: SelectSubset<T, CountryFindUniqueArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Country that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CountryFindUniqueOrThrowArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CountryFindUniqueOrThrowArgs>(args: SelectSubset<T, CountryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Country that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryFindFirstArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CountryFindFirstArgs>(args?: SelectSubset<T, CountryFindFirstArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Country that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryFindFirstOrThrowArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CountryFindFirstOrThrowArgs>(args?: SelectSubset<T, CountryFindFirstOrThrowArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Countries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Countries
     * const countries = await prisma.country.findMany()
     * 
     * // Get first 10 Countries
     * const countries = await prisma.country.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const countryWithIdOnly = await prisma.country.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CountryFindManyArgs>(args?: SelectSubset<T, CountryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Country.
     * @param {CountryCreateArgs} args - Arguments to create a Country.
     * @example
     * // Create one Country
     * const Country = await prisma.country.create({
     *   data: {
     *     // ... data to create a Country
     *   }
     * })
     * 
     */
    create<T extends CountryCreateArgs>(args: SelectSubset<T, CountryCreateArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Countries.
     * @param {CountryCreateManyArgs} args - Arguments to create many Countries.
     * @example
     * // Create many Countries
     * const country = await prisma.country.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CountryCreateManyArgs>(args?: SelectSubset<T, CountryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Country.
     * @param {CountryDeleteArgs} args - Arguments to delete one Country.
     * @example
     * // Delete one Country
     * const Country = await prisma.country.delete({
     *   where: {
     *     // ... filter to delete one Country
     *   }
     * })
     * 
     */
    delete<T extends CountryDeleteArgs>(args: SelectSubset<T, CountryDeleteArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Country.
     * @param {CountryUpdateArgs} args - Arguments to update one Country.
     * @example
     * // Update one Country
     * const country = await prisma.country.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CountryUpdateArgs>(args: SelectSubset<T, CountryUpdateArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Countries.
     * @param {CountryDeleteManyArgs} args - Arguments to filter Countries to delete.
     * @example
     * // Delete a few Countries
     * const { count } = await prisma.country.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CountryDeleteManyArgs>(args?: SelectSubset<T, CountryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Countries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Countries
     * const country = await prisma.country.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CountryUpdateManyArgs>(args: SelectSubset<T, CountryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Country.
     * @param {CountryUpsertArgs} args - Arguments to update or create a Country.
     * @example
     * // Update or create a Country
     * const country = await prisma.country.upsert({
     *   create: {
     *     // ... data to create a Country
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Country we want to update
     *   }
     * })
     */
    upsert<T extends CountryUpsertArgs>(args: SelectSubset<T, CountryUpsertArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Countries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryCountArgs} args - Arguments to filter Countries to count.
     * @example
     * // Count the number of Countries
     * const count = await prisma.country.count({
     *   where: {
     *     // ... the filter for the Countries we want to count
     *   }
     * })
    **/
    count<T extends CountryCountArgs>(
      args?: Subset<T, CountryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CountryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Country.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CountryAggregateArgs>(args: Subset<T, CountryAggregateArgs>): Prisma.PrismaPromise<GetCountryAggregateType<T>>

    /**
     * Group by Country.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CountryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CountryGroupByArgs['orderBy'] }
        : { orderBy?: CountryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CountryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCountryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Country model
   */
  readonly fields: CountryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Country.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CountryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    StateByCountryName<T extends Country$StateByCountryNameArgs<ExtArgs> = {}>(args?: Subset<T, Country$StateByCountryNameArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CityByCountryName<T extends Country$CityByCountryNameArgs<ExtArgs> = {}>(args?: Subset<T, Country$CityByCountryNameArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    RoadMapRelation<T extends Country$RoadMapRelationArgs<ExtArgs> = {}>(args?: Subset<T, Country$RoadMapRelationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Country model
   */
  interface CountryFieldRefs {
    readonly id: FieldRef<"Country", 'String'>
    readonly name: FieldRef<"Country", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Country findUnique
   */
  export type CountryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
    /**
     * Filter, which Country to fetch.
     */
    where: CountryWhereUniqueInput
  }

  /**
   * Country findUniqueOrThrow
   */
  export type CountryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
    /**
     * Filter, which Country to fetch.
     */
    where: CountryWhereUniqueInput
  }

  /**
   * Country findFirst
   */
  export type CountryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
    /**
     * Filter, which Country to fetch.
     */
    where?: CountryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Countries to fetch.
     */
    orderBy?: CountryOrderByWithRelationInput | CountryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Countries.
     */
    cursor?: CountryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Countries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Countries.
     */
    distinct?: CountryScalarFieldEnum | CountryScalarFieldEnum[]
  }

  /**
   * Country findFirstOrThrow
   */
  export type CountryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
    /**
     * Filter, which Country to fetch.
     */
    where?: CountryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Countries to fetch.
     */
    orderBy?: CountryOrderByWithRelationInput | CountryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Countries.
     */
    cursor?: CountryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Countries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Countries.
     */
    distinct?: CountryScalarFieldEnum | CountryScalarFieldEnum[]
  }

  /**
   * Country findMany
   */
  export type CountryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
    /**
     * Filter, which Countries to fetch.
     */
    where?: CountryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Countries to fetch.
     */
    orderBy?: CountryOrderByWithRelationInput | CountryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Countries.
     */
    cursor?: CountryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Countries.
     */
    skip?: number
    distinct?: CountryScalarFieldEnum | CountryScalarFieldEnum[]
  }

  /**
   * Country create
   */
  export type CountryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
    /**
     * The data needed to create a Country.
     */
    data: XOR<CountryCreateInput, CountryUncheckedCreateInput>
  }

  /**
   * Country createMany
   */
  export type CountryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Countries.
     */
    data: CountryCreateManyInput | CountryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Country update
   */
  export type CountryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
    /**
     * The data needed to update a Country.
     */
    data: XOR<CountryUpdateInput, CountryUncheckedUpdateInput>
    /**
     * Choose, which Country to update.
     */
    where: CountryWhereUniqueInput
  }

  /**
   * Country updateMany
   */
  export type CountryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Countries.
     */
    data: XOR<CountryUpdateManyMutationInput, CountryUncheckedUpdateManyInput>
    /**
     * Filter which Countries to update
     */
    where?: CountryWhereInput
    /**
     * Limit how many Countries to update.
     */
    limit?: number
  }

  /**
   * Country upsert
   */
  export type CountryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
    /**
     * The filter to search for the Country to update in case it exists.
     */
    where: CountryWhereUniqueInput
    /**
     * In case the Country found by the `where` argument doesn't exist, create a new Country with this data.
     */
    create: XOR<CountryCreateInput, CountryUncheckedCreateInput>
    /**
     * In case the Country was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CountryUpdateInput, CountryUncheckedUpdateInput>
  }

  /**
   * Country delete
   */
  export type CountryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
    /**
     * Filter which Country to delete.
     */
    where: CountryWhereUniqueInput
  }

  /**
   * Country deleteMany
   */
  export type CountryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Countries to delete
     */
    where?: CountryWhereInput
    /**
     * Limit how many Countries to delete.
     */
    limit?: number
  }

  /**
   * Country.StateByCountryName
   */
  export type Country$StateByCountryNameArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the State
     */
    select?: StateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the State
     */
    omit?: StateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StateInclude<ExtArgs> | null
    where?: StateWhereInput
    orderBy?: StateOrderByWithRelationInput | StateOrderByWithRelationInput[]
    cursor?: StateWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StateScalarFieldEnum | StateScalarFieldEnum[]
  }

  /**
   * Country.CityByCountryName
   */
  export type Country$CityByCountryNameArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CityInclude<ExtArgs> | null
    where?: CityWhereInput
    orderBy?: CityOrderByWithRelationInput | CityOrderByWithRelationInput[]
    cursor?: CityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CityScalarFieldEnum | CityScalarFieldEnum[]
  }

  /**
   * Country.RoadMapRelation
   */
  export type Country$RoadMapRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Travel_Road_Map
     */
    select?: Travel_Road_MapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Travel_Road_Map
     */
    omit?: Travel_Road_MapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Travel_Road_MapInclude<ExtArgs> | null
    where?: Travel_Road_MapWhereInput
    orderBy?: Travel_Road_MapOrderByWithRelationInput | Travel_Road_MapOrderByWithRelationInput[]
    cursor?: Travel_Road_MapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Travel_Road_MapScalarFieldEnum | Travel_Road_MapScalarFieldEnum[]
  }

  /**
   * Country without action
   */
  export type CountryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
  }


  /**
   * Model State
   */

  export type AggregateState = {
    _count: StateCountAggregateOutputType | null
    _min: StateMinAggregateOutputType | null
    _max: StateMaxAggregateOutputType | null
  }

  export type StateMinAggregateOutputType = {
    id: string | null
    name: string | null
    countryName: string | null
  }

  export type StateMaxAggregateOutputType = {
    id: string | null
    name: string | null
    countryName: string | null
  }

  export type StateCountAggregateOutputType = {
    id: number
    name: number
    countryName: number
    _all: number
  }


  export type StateMinAggregateInputType = {
    id?: true
    name?: true
    countryName?: true
  }

  export type StateMaxAggregateInputType = {
    id?: true
    name?: true
    countryName?: true
  }

  export type StateCountAggregateInputType = {
    id?: true
    name?: true
    countryName?: true
    _all?: true
  }

  export type StateAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which State to aggregate.
     */
    where?: StateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of States to fetch.
     */
    orderBy?: StateOrderByWithRelationInput | StateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` States from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` States.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned States
    **/
    _count?: true | StateCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StateMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StateMaxAggregateInputType
  }

  export type GetStateAggregateType<T extends StateAggregateArgs> = {
        [P in keyof T & keyof AggregateState]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateState[P]>
      : GetScalarType<T[P], AggregateState[P]>
  }




  export type StateGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StateWhereInput
    orderBy?: StateOrderByWithAggregationInput | StateOrderByWithAggregationInput[]
    by: StateScalarFieldEnum[] | StateScalarFieldEnum
    having?: StateScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StateCountAggregateInputType | true
    _min?: StateMinAggregateInputType
    _max?: StateMaxAggregateInputType
  }

  export type StateGroupByOutputType = {
    id: string
    name: string
    countryName: string
    _count: StateCountAggregateOutputType | null
    _min: StateMinAggregateOutputType | null
    _max: StateMaxAggregateOutputType | null
  }

  type GetStateGroupByPayload<T extends StateGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StateGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StateGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StateGroupByOutputType[P]>
            : GetScalarType<T[P], StateGroupByOutputType[P]>
        }
      >
    >


  export type StateSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    countryName?: boolean
    CountryByCountryName?: boolean | CountryDefaultArgs<ExtArgs>
    StateByStateName?: boolean | State$StateByStateNameArgs<ExtArgs>
    RoadMapRelation?: boolean | State$RoadMapRelationArgs<ExtArgs>
    _count?: boolean | StateCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["state"]>



  export type StateSelectScalar = {
    id?: boolean
    name?: boolean
    countryName?: boolean
  }

  export type StateOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "countryName", ExtArgs["result"]["state"]>
  export type StateInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CountryByCountryName?: boolean | CountryDefaultArgs<ExtArgs>
    StateByStateName?: boolean | State$StateByStateNameArgs<ExtArgs>
    RoadMapRelation?: boolean | State$RoadMapRelationArgs<ExtArgs>
    _count?: boolean | StateCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $StatePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "State"
    objects: {
      CountryByCountryName: Prisma.$CountryPayload<ExtArgs>
      StateByStateName: Prisma.$CityPayload<ExtArgs>[]
      RoadMapRelation: Prisma.$Travel_Road_MapPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      countryName: string
    }, ExtArgs["result"]["state"]>
    composites: {}
  }

  type StateGetPayload<S extends boolean | null | undefined | StateDefaultArgs> = $Result.GetResult<Prisma.$StatePayload, S>

  type StateCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StateFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StateCountAggregateInputType | true
    }

  export interface StateDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['State'], meta: { name: 'State' } }
    /**
     * Find zero or one State that matches the filter.
     * @param {StateFindUniqueArgs} args - Arguments to find a State
     * @example
     * // Get one State
     * const state = await prisma.state.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StateFindUniqueArgs>(args: SelectSubset<T, StateFindUniqueArgs<ExtArgs>>): Prisma__StateClient<$Result.GetResult<Prisma.$StatePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one State that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StateFindUniqueOrThrowArgs} args - Arguments to find a State
     * @example
     * // Get one State
     * const state = await prisma.state.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StateFindUniqueOrThrowArgs>(args: SelectSubset<T, StateFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StateClient<$Result.GetResult<Prisma.$StatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first State that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StateFindFirstArgs} args - Arguments to find a State
     * @example
     * // Get one State
     * const state = await prisma.state.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StateFindFirstArgs>(args?: SelectSubset<T, StateFindFirstArgs<ExtArgs>>): Prisma__StateClient<$Result.GetResult<Prisma.$StatePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first State that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StateFindFirstOrThrowArgs} args - Arguments to find a State
     * @example
     * // Get one State
     * const state = await prisma.state.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StateFindFirstOrThrowArgs>(args?: SelectSubset<T, StateFindFirstOrThrowArgs<ExtArgs>>): Prisma__StateClient<$Result.GetResult<Prisma.$StatePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more States that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StateFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all States
     * const states = await prisma.state.findMany()
     * 
     * // Get first 10 States
     * const states = await prisma.state.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stateWithIdOnly = await prisma.state.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StateFindManyArgs>(args?: SelectSubset<T, StateFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a State.
     * @param {StateCreateArgs} args - Arguments to create a State.
     * @example
     * // Create one State
     * const State = await prisma.state.create({
     *   data: {
     *     // ... data to create a State
     *   }
     * })
     * 
     */
    create<T extends StateCreateArgs>(args: SelectSubset<T, StateCreateArgs<ExtArgs>>): Prisma__StateClient<$Result.GetResult<Prisma.$StatePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many States.
     * @param {StateCreateManyArgs} args - Arguments to create many States.
     * @example
     * // Create many States
     * const state = await prisma.state.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StateCreateManyArgs>(args?: SelectSubset<T, StateCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a State.
     * @param {StateDeleteArgs} args - Arguments to delete one State.
     * @example
     * // Delete one State
     * const State = await prisma.state.delete({
     *   where: {
     *     // ... filter to delete one State
     *   }
     * })
     * 
     */
    delete<T extends StateDeleteArgs>(args: SelectSubset<T, StateDeleteArgs<ExtArgs>>): Prisma__StateClient<$Result.GetResult<Prisma.$StatePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one State.
     * @param {StateUpdateArgs} args - Arguments to update one State.
     * @example
     * // Update one State
     * const state = await prisma.state.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StateUpdateArgs>(args: SelectSubset<T, StateUpdateArgs<ExtArgs>>): Prisma__StateClient<$Result.GetResult<Prisma.$StatePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more States.
     * @param {StateDeleteManyArgs} args - Arguments to filter States to delete.
     * @example
     * // Delete a few States
     * const { count } = await prisma.state.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StateDeleteManyArgs>(args?: SelectSubset<T, StateDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more States.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StateUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many States
     * const state = await prisma.state.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StateUpdateManyArgs>(args: SelectSubset<T, StateUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one State.
     * @param {StateUpsertArgs} args - Arguments to update or create a State.
     * @example
     * // Update or create a State
     * const state = await prisma.state.upsert({
     *   create: {
     *     // ... data to create a State
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the State we want to update
     *   }
     * })
     */
    upsert<T extends StateUpsertArgs>(args: SelectSubset<T, StateUpsertArgs<ExtArgs>>): Prisma__StateClient<$Result.GetResult<Prisma.$StatePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of States.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StateCountArgs} args - Arguments to filter States to count.
     * @example
     * // Count the number of States
     * const count = await prisma.state.count({
     *   where: {
     *     // ... the filter for the States we want to count
     *   }
     * })
    **/
    count<T extends StateCountArgs>(
      args?: Subset<T, StateCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StateCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a State.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StateAggregateArgs>(args: Subset<T, StateAggregateArgs>): Prisma.PrismaPromise<GetStateAggregateType<T>>

    /**
     * Group by State.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StateGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StateGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StateGroupByArgs['orderBy'] }
        : { orderBy?: StateGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStateGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the State model
   */
  readonly fields: StateFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for State.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StateClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    CountryByCountryName<T extends CountryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CountryDefaultArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    StateByStateName<T extends State$StateByStateNameArgs<ExtArgs> = {}>(args?: Subset<T, State$StateByStateNameArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    RoadMapRelation<T extends State$RoadMapRelationArgs<ExtArgs> = {}>(args?: Subset<T, State$RoadMapRelationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the State model
   */
  interface StateFieldRefs {
    readonly id: FieldRef<"State", 'String'>
    readonly name: FieldRef<"State", 'String'>
    readonly countryName: FieldRef<"State", 'String'>
  }
    

  // Custom InputTypes
  /**
   * State findUnique
   */
  export type StateFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the State
     */
    select?: StateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the State
     */
    omit?: StateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StateInclude<ExtArgs> | null
    /**
     * Filter, which State to fetch.
     */
    where: StateWhereUniqueInput
  }

  /**
   * State findUniqueOrThrow
   */
  export type StateFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the State
     */
    select?: StateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the State
     */
    omit?: StateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StateInclude<ExtArgs> | null
    /**
     * Filter, which State to fetch.
     */
    where: StateWhereUniqueInput
  }

  /**
   * State findFirst
   */
  export type StateFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the State
     */
    select?: StateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the State
     */
    omit?: StateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StateInclude<ExtArgs> | null
    /**
     * Filter, which State to fetch.
     */
    where?: StateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of States to fetch.
     */
    orderBy?: StateOrderByWithRelationInput | StateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for States.
     */
    cursor?: StateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` States from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` States.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of States.
     */
    distinct?: StateScalarFieldEnum | StateScalarFieldEnum[]
  }

  /**
   * State findFirstOrThrow
   */
  export type StateFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the State
     */
    select?: StateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the State
     */
    omit?: StateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StateInclude<ExtArgs> | null
    /**
     * Filter, which State to fetch.
     */
    where?: StateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of States to fetch.
     */
    orderBy?: StateOrderByWithRelationInput | StateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for States.
     */
    cursor?: StateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` States from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` States.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of States.
     */
    distinct?: StateScalarFieldEnum | StateScalarFieldEnum[]
  }

  /**
   * State findMany
   */
  export type StateFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the State
     */
    select?: StateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the State
     */
    omit?: StateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StateInclude<ExtArgs> | null
    /**
     * Filter, which States to fetch.
     */
    where?: StateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of States to fetch.
     */
    orderBy?: StateOrderByWithRelationInput | StateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing States.
     */
    cursor?: StateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` States from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` States.
     */
    skip?: number
    distinct?: StateScalarFieldEnum | StateScalarFieldEnum[]
  }

  /**
   * State create
   */
  export type StateCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the State
     */
    select?: StateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the State
     */
    omit?: StateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StateInclude<ExtArgs> | null
    /**
     * The data needed to create a State.
     */
    data: XOR<StateCreateInput, StateUncheckedCreateInput>
  }

  /**
   * State createMany
   */
  export type StateCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many States.
     */
    data: StateCreateManyInput | StateCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * State update
   */
  export type StateUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the State
     */
    select?: StateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the State
     */
    omit?: StateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StateInclude<ExtArgs> | null
    /**
     * The data needed to update a State.
     */
    data: XOR<StateUpdateInput, StateUncheckedUpdateInput>
    /**
     * Choose, which State to update.
     */
    where: StateWhereUniqueInput
  }

  /**
   * State updateMany
   */
  export type StateUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update States.
     */
    data: XOR<StateUpdateManyMutationInput, StateUncheckedUpdateManyInput>
    /**
     * Filter which States to update
     */
    where?: StateWhereInput
    /**
     * Limit how many States to update.
     */
    limit?: number
  }

  /**
   * State upsert
   */
  export type StateUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the State
     */
    select?: StateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the State
     */
    omit?: StateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StateInclude<ExtArgs> | null
    /**
     * The filter to search for the State to update in case it exists.
     */
    where: StateWhereUniqueInput
    /**
     * In case the State found by the `where` argument doesn't exist, create a new State with this data.
     */
    create: XOR<StateCreateInput, StateUncheckedCreateInput>
    /**
     * In case the State was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StateUpdateInput, StateUncheckedUpdateInput>
  }

  /**
   * State delete
   */
  export type StateDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the State
     */
    select?: StateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the State
     */
    omit?: StateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StateInclude<ExtArgs> | null
    /**
     * Filter which State to delete.
     */
    where: StateWhereUniqueInput
  }

  /**
   * State deleteMany
   */
  export type StateDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which States to delete
     */
    where?: StateWhereInput
    /**
     * Limit how many States to delete.
     */
    limit?: number
  }

  /**
   * State.StateByStateName
   */
  export type State$StateByStateNameArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CityInclude<ExtArgs> | null
    where?: CityWhereInput
    orderBy?: CityOrderByWithRelationInput | CityOrderByWithRelationInput[]
    cursor?: CityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CityScalarFieldEnum | CityScalarFieldEnum[]
  }

  /**
   * State.RoadMapRelation
   */
  export type State$RoadMapRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Travel_Road_Map
     */
    select?: Travel_Road_MapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Travel_Road_Map
     */
    omit?: Travel_Road_MapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Travel_Road_MapInclude<ExtArgs> | null
    where?: Travel_Road_MapWhereInput
    orderBy?: Travel_Road_MapOrderByWithRelationInput | Travel_Road_MapOrderByWithRelationInput[]
    cursor?: Travel_Road_MapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Travel_Road_MapScalarFieldEnum | Travel_Road_MapScalarFieldEnum[]
  }

  /**
   * State without action
   */
  export type StateDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the State
     */
    select?: StateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the State
     */
    omit?: StateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StateInclude<ExtArgs> | null
  }


  /**
   * Model City
   */

  export type AggregateCity = {
    _count: CityCountAggregateOutputType | null
    _min: CityMinAggregateOutputType | null
    _max: CityMaxAggregateOutputType | null
  }

  export type CityMinAggregateOutputType = {
    id: string | null
    name: string | null
    countryName: string | null
    stateName: string | null
  }

  export type CityMaxAggregateOutputType = {
    id: string | null
    name: string | null
    countryName: string | null
    stateName: string | null
  }

  export type CityCountAggregateOutputType = {
    id: number
    name: number
    countryName: number
    stateName: number
    _all: number
  }


  export type CityMinAggregateInputType = {
    id?: true
    name?: true
    countryName?: true
    stateName?: true
  }

  export type CityMaxAggregateInputType = {
    id?: true
    name?: true
    countryName?: true
    stateName?: true
  }

  export type CityCountAggregateInputType = {
    id?: true
    name?: true
    countryName?: true
    stateName?: true
    _all?: true
  }

  export type CityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which City to aggregate.
     */
    where?: CityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cities to fetch.
     */
    orderBy?: CityOrderByWithRelationInput | CityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Cities
    **/
    _count?: true | CityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CityMaxAggregateInputType
  }

  export type GetCityAggregateType<T extends CityAggregateArgs> = {
        [P in keyof T & keyof AggregateCity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCity[P]>
      : GetScalarType<T[P], AggregateCity[P]>
  }




  export type CityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CityWhereInput
    orderBy?: CityOrderByWithAggregationInput | CityOrderByWithAggregationInput[]
    by: CityScalarFieldEnum[] | CityScalarFieldEnum
    having?: CityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CityCountAggregateInputType | true
    _min?: CityMinAggregateInputType
    _max?: CityMaxAggregateInputType
  }

  export type CityGroupByOutputType = {
    id: string
    name: string
    countryName: string
    stateName: string
    _count: CityCountAggregateOutputType | null
    _min: CityMinAggregateOutputType | null
    _max: CityMaxAggregateOutputType | null
  }

  type GetCityGroupByPayload<T extends CityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CityGroupByOutputType[P]>
            : GetScalarType<T[P], CityGroupByOutputType[P]>
        }
      >
    >


  export type CitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    countryName?: boolean
    stateName?: boolean
    StateByStateName?: boolean | StateDefaultArgs<ExtArgs>
    CityByCountryName?: boolean | CountryDefaultArgs<ExtArgs>
    RoadMapRelation?: boolean | City$RoadMapRelationArgs<ExtArgs>
    _count?: boolean | CityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["city"]>



  export type CitySelectScalar = {
    id?: boolean
    name?: boolean
    countryName?: boolean
    stateName?: boolean
  }

  export type CityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "countryName" | "stateName", ExtArgs["result"]["city"]>
  export type CityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    StateByStateName?: boolean | StateDefaultArgs<ExtArgs>
    CityByCountryName?: boolean | CountryDefaultArgs<ExtArgs>
    RoadMapRelation?: boolean | City$RoadMapRelationArgs<ExtArgs>
    _count?: boolean | CityCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "City"
    objects: {
      StateByStateName: Prisma.$StatePayload<ExtArgs>
      CityByCountryName: Prisma.$CountryPayload<ExtArgs>
      RoadMapRelation: Prisma.$Travel_Road_MapPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      countryName: string
      stateName: string
    }, ExtArgs["result"]["city"]>
    composites: {}
  }

  type CityGetPayload<S extends boolean | null | undefined | CityDefaultArgs> = $Result.GetResult<Prisma.$CityPayload, S>

  type CityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CityCountAggregateInputType | true
    }

  export interface CityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['City'], meta: { name: 'City' } }
    /**
     * Find zero or one City that matches the filter.
     * @param {CityFindUniqueArgs} args - Arguments to find a City
     * @example
     * // Get one City
     * const city = await prisma.city.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CityFindUniqueArgs>(args: SelectSubset<T, CityFindUniqueArgs<ExtArgs>>): Prisma__CityClient<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one City that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CityFindUniqueOrThrowArgs} args - Arguments to find a City
     * @example
     * // Get one City
     * const city = await prisma.city.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CityFindUniqueOrThrowArgs>(args: SelectSubset<T, CityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CityClient<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first City that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CityFindFirstArgs} args - Arguments to find a City
     * @example
     * // Get one City
     * const city = await prisma.city.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CityFindFirstArgs>(args?: SelectSubset<T, CityFindFirstArgs<ExtArgs>>): Prisma__CityClient<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first City that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CityFindFirstOrThrowArgs} args - Arguments to find a City
     * @example
     * // Get one City
     * const city = await prisma.city.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CityFindFirstOrThrowArgs>(args?: SelectSubset<T, CityFindFirstOrThrowArgs<ExtArgs>>): Prisma__CityClient<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cities
     * const cities = await prisma.city.findMany()
     * 
     * // Get first 10 Cities
     * const cities = await prisma.city.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cityWithIdOnly = await prisma.city.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CityFindManyArgs>(args?: SelectSubset<T, CityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a City.
     * @param {CityCreateArgs} args - Arguments to create a City.
     * @example
     * // Create one City
     * const City = await prisma.city.create({
     *   data: {
     *     // ... data to create a City
     *   }
     * })
     * 
     */
    create<T extends CityCreateArgs>(args: SelectSubset<T, CityCreateArgs<ExtArgs>>): Prisma__CityClient<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cities.
     * @param {CityCreateManyArgs} args - Arguments to create many Cities.
     * @example
     * // Create many Cities
     * const city = await prisma.city.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CityCreateManyArgs>(args?: SelectSubset<T, CityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a City.
     * @param {CityDeleteArgs} args - Arguments to delete one City.
     * @example
     * // Delete one City
     * const City = await prisma.city.delete({
     *   where: {
     *     // ... filter to delete one City
     *   }
     * })
     * 
     */
    delete<T extends CityDeleteArgs>(args: SelectSubset<T, CityDeleteArgs<ExtArgs>>): Prisma__CityClient<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one City.
     * @param {CityUpdateArgs} args - Arguments to update one City.
     * @example
     * // Update one City
     * const city = await prisma.city.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CityUpdateArgs>(args: SelectSubset<T, CityUpdateArgs<ExtArgs>>): Prisma__CityClient<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cities.
     * @param {CityDeleteManyArgs} args - Arguments to filter Cities to delete.
     * @example
     * // Delete a few Cities
     * const { count } = await prisma.city.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CityDeleteManyArgs>(args?: SelectSubset<T, CityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cities
     * const city = await prisma.city.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CityUpdateManyArgs>(args: SelectSubset<T, CityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one City.
     * @param {CityUpsertArgs} args - Arguments to update or create a City.
     * @example
     * // Update or create a City
     * const city = await prisma.city.upsert({
     *   create: {
     *     // ... data to create a City
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the City we want to update
     *   }
     * })
     */
    upsert<T extends CityUpsertArgs>(args: SelectSubset<T, CityUpsertArgs<ExtArgs>>): Prisma__CityClient<$Result.GetResult<Prisma.$CityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CityCountArgs} args - Arguments to filter Cities to count.
     * @example
     * // Count the number of Cities
     * const count = await prisma.city.count({
     *   where: {
     *     // ... the filter for the Cities we want to count
     *   }
     * })
    **/
    count<T extends CityCountArgs>(
      args?: Subset<T, CityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a City.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CityAggregateArgs>(args: Subset<T, CityAggregateArgs>): Prisma.PrismaPromise<GetCityAggregateType<T>>

    /**
     * Group by City.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CityGroupByArgs['orderBy'] }
        : { orderBy?: CityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the City model
   */
  readonly fields: CityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for City.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    StateByStateName<T extends StateDefaultArgs<ExtArgs> = {}>(args?: Subset<T, StateDefaultArgs<ExtArgs>>): Prisma__StateClient<$Result.GetResult<Prisma.$StatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    CityByCountryName<T extends CountryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CountryDefaultArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    RoadMapRelation<T extends City$RoadMapRelationArgs<ExtArgs> = {}>(args?: Subset<T, City$RoadMapRelationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the City model
   */
  interface CityFieldRefs {
    readonly id: FieldRef<"City", 'String'>
    readonly name: FieldRef<"City", 'String'>
    readonly countryName: FieldRef<"City", 'String'>
    readonly stateName: FieldRef<"City", 'String'>
  }
    

  // Custom InputTypes
  /**
   * City findUnique
   */
  export type CityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CityInclude<ExtArgs> | null
    /**
     * Filter, which City to fetch.
     */
    where: CityWhereUniqueInput
  }

  /**
   * City findUniqueOrThrow
   */
  export type CityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CityInclude<ExtArgs> | null
    /**
     * Filter, which City to fetch.
     */
    where: CityWhereUniqueInput
  }

  /**
   * City findFirst
   */
  export type CityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CityInclude<ExtArgs> | null
    /**
     * Filter, which City to fetch.
     */
    where?: CityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cities to fetch.
     */
    orderBy?: CityOrderByWithRelationInput | CityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cities.
     */
    cursor?: CityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cities.
     */
    distinct?: CityScalarFieldEnum | CityScalarFieldEnum[]
  }

  /**
   * City findFirstOrThrow
   */
  export type CityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CityInclude<ExtArgs> | null
    /**
     * Filter, which City to fetch.
     */
    where?: CityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cities to fetch.
     */
    orderBy?: CityOrderByWithRelationInput | CityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cities.
     */
    cursor?: CityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cities.
     */
    distinct?: CityScalarFieldEnum | CityScalarFieldEnum[]
  }

  /**
   * City findMany
   */
  export type CityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CityInclude<ExtArgs> | null
    /**
     * Filter, which Cities to fetch.
     */
    where?: CityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cities to fetch.
     */
    orderBy?: CityOrderByWithRelationInput | CityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Cities.
     */
    cursor?: CityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cities.
     */
    skip?: number
    distinct?: CityScalarFieldEnum | CityScalarFieldEnum[]
  }

  /**
   * City create
   */
  export type CityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CityInclude<ExtArgs> | null
    /**
     * The data needed to create a City.
     */
    data: XOR<CityCreateInput, CityUncheckedCreateInput>
  }

  /**
   * City createMany
   */
  export type CityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Cities.
     */
    data: CityCreateManyInput | CityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * City update
   */
  export type CityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CityInclude<ExtArgs> | null
    /**
     * The data needed to update a City.
     */
    data: XOR<CityUpdateInput, CityUncheckedUpdateInput>
    /**
     * Choose, which City to update.
     */
    where: CityWhereUniqueInput
  }

  /**
   * City updateMany
   */
  export type CityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Cities.
     */
    data: XOR<CityUpdateManyMutationInput, CityUncheckedUpdateManyInput>
    /**
     * Filter which Cities to update
     */
    where?: CityWhereInput
    /**
     * Limit how many Cities to update.
     */
    limit?: number
  }

  /**
   * City upsert
   */
  export type CityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CityInclude<ExtArgs> | null
    /**
     * The filter to search for the City to update in case it exists.
     */
    where: CityWhereUniqueInput
    /**
     * In case the City found by the `where` argument doesn't exist, create a new City with this data.
     */
    create: XOR<CityCreateInput, CityUncheckedCreateInput>
    /**
     * In case the City was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CityUpdateInput, CityUncheckedUpdateInput>
  }

  /**
   * City delete
   */
  export type CityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CityInclude<ExtArgs> | null
    /**
     * Filter which City to delete.
     */
    where: CityWhereUniqueInput
  }

  /**
   * City deleteMany
   */
  export type CityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cities to delete
     */
    where?: CityWhereInput
    /**
     * Limit how many Cities to delete.
     */
    limit?: number
  }

  /**
   * City.RoadMapRelation
   */
  export type City$RoadMapRelationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Travel_Road_Map
     */
    select?: Travel_Road_MapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Travel_Road_Map
     */
    omit?: Travel_Road_MapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Travel_Road_MapInclude<ExtArgs> | null
    where?: Travel_Road_MapWhereInput
    orderBy?: Travel_Road_MapOrderByWithRelationInput | Travel_Road_MapOrderByWithRelationInput[]
    cursor?: Travel_Road_MapWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Travel_Road_MapScalarFieldEnum | Travel_Road_MapScalarFieldEnum[]
  }

  /**
   * City without action
   */
  export type CityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the City
     */
    select?: CitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the City
     */
    omit?: CityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CityInclude<ExtArgs> | null
  }


  /**
   * Model ImageTouristPoint
   */

  export type AggregateImageTouristPoint = {
    _count: ImageTouristPointCountAggregateOutputType | null
    _min: ImageTouristPointMinAggregateOutputType | null
    _max: ImageTouristPointMaxAggregateOutputType | null
  }

  export type ImageTouristPointMinAggregateOutputType = {
    id: string | null
    image: string | null
    idTouristPoint: string | null
  }

  export type ImageTouristPointMaxAggregateOutputType = {
    id: string | null
    image: string | null
    idTouristPoint: string | null
  }

  export type ImageTouristPointCountAggregateOutputType = {
    id: number
    image: number
    idTouristPoint: number
    _all: number
  }


  export type ImageTouristPointMinAggregateInputType = {
    id?: true
    image?: true
    idTouristPoint?: true
  }

  export type ImageTouristPointMaxAggregateInputType = {
    id?: true
    image?: true
    idTouristPoint?: true
  }

  export type ImageTouristPointCountAggregateInputType = {
    id?: true
    image?: true
    idTouristPoint?: true
    _all?: true
  }

  export type ImageTouristPointAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ImageTouristPoint to aggregate.
     */
    where?: ImageTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImageTouristPoints to fetch.
     */
    orderBy?: ImageTouristPointOrderByWithRelationInput | ImageTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ImageTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImageTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImageTouristPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ImageTouristPoints
    **/
    _count?: true | ImageTouristPointCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ImageTouristPointMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ImageTouristPointMaxAggregateInputType
  }

  export type GetImageTouristPointAggregateType<T extends ImageTouristPointAggregateArgs> = {
        [P in keyof T & keyof AggregateImageTouristPoint]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImageTouristPoint[P]>
      : GetScalarType<T[P], AggregateImageTouristPoint[P]>
  }




  export type ImageTouristPointGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ImageTouristPointWhereInput
    orderBy?: ImageTouristPointOrderByWithAggregationInput | ImageTouristPointOrderByWithAggregationInput[]
    by: ImageTouristPointScalarFieldEnum[] | ImageTouristPointScalarFieldEnum
    having?: ImageTouristPointScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ImageTouristPointCountAggregateInputType | true
    _min?: ImageTouristPointMinAggregateInputType
    _max?: ImageTouristPointMaxAggregateInputType
  }

  export type ImageTouristPointGroupByOutputType = {
    id: string
    image: string
    idTouristPoint: string
    _count: ImageTouristPointCountAggregateOutputType | null
    _min: ImageTouristPointMinAggregateOutputType | null
    _max: ImageTouristPointMaxAggregateOutputType | null
  }

  type GetImageTouristPointGroupByPayload<T extends ImageTouristPointGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ImageTouristPointGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ImageTouristPointGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ImageTouristPointGroupByOutputType[P]>
            : GetScalarType<T[P], ImageTouristPointGroupByOutputType[P]>
        }
      >
    >


  export type ImageTouristPointSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    image?: boolean
    idTouristPoint?: boolean
    userTouristPointByTouristPointId?: boolean | Ponto_TuristicoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imageTouristPoint"]>



  export type ImageTouristPointSelectScalar = {
    id?: boolean
    image?: boolean
    idTouristPoint?: boolean
  }

  export type ImageTouristPointOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "image" | "idTouristPoint", ExtArgs["result"]["imageTouristPoint"]>
  export type ImageTouristPointInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userTouristPointByTouristPointId?: boolean | Ponto_TuristicoDefaultArgs<ExtArgs>
  }

  export type $ImageTouristPointPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ImageTouristPoint"
    objects: {
      userTouristPointByTouristPointId: Prisma.$Ponto_TuristicoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      image: string
      idTouristPoint: string
    }, ExtArgs["result"]["imageTouristPoint"]>
    composites: {}
  }

  type ImageTouristPointGetPayload<S extends boolean | null | undefined | ImageTouristPointDefaultArgs> = $Result.GetResult<Prisma.$ImageTouristPointPayload, S>

  type ImageTouristPointCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ImageTouristPointFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ImageTouristPointCountAggregateInputType | true
    }

  export interface ImageTouristPointDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ImageTouristPoint'], meta: { name: 'ImageTouristPoint' } }
    /**
     * Find zero or one ImageTouristPoint that matches the filter.
     * @param {ImageTouristPointFindUniqueArgs} args - Arguments to find a ImageTouristPoint
     * @example
     * // Get one ImageTouristPoint
     * const imageTouristPoint = await prisma.imageTouristPoint.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ImageTouristPointFindUniqueArgs>(args: SelectSubset<T, ImageTouristPointFindUniqueArgs<ExtArgs>>): Prisma__ImageTouristPointClient<$Result.GetResult<Prisma.$ImageTouristPointPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ImageTouristPoint that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ImageTouristPointFindUniqueOrThrowArgs} args - Arguments to find a ImageTouristPoint
     * @example
     * // Get one ImageTouristPoint
     * const imageTouristPoint = await prisma.imageTouristPoint.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ImageTouristPointFindUniqueOrThrowArgs>(args: SelectSubset<T, ImageTouristPointFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ImageTouristPointClient<$Result.GetResult<Prisma.$ImageTouristPointPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ImageTouristPoint that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageTouristPointFindFirstArgs} args - Arguments to find a ImageTouristPoint
     * @example
     * // Get one ImageTouristPoint
     * const imageTouristPoint = await prisma.imageTouristPoint.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ImageTouristPointFindFirstArgs>(args?: SelectSubset<T, ImageTouristPointFindFirstArgs<ExtArgs>>): Prisma__ImageTouristPointClient<$Result.GetResult<Prisma.$ImageTouristPointPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ImageTouristPoint that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageTouristPointFindFirstOrThrowArgs} args - Arguments to find a ImageTouristPoint
     * @example
     * // Get one ImageTouristPoint
     * const imageTouristPoint = await prisma.imageTouristPoint.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ImageTouristPointFindFirstOrThrowArgs>(args?: SelectSubset<T, ImageTouristPointFindFirstOrThrowArgs<ExtArgs>>): Prisma__ImageTouristPointClient<$Result.GetResult<Prisma.$ImageTouristPointPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ImageTouristPoints that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageTouristPointFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ImageTouristPoints
     * const imageTouristPoints = await prisma.imageTouristPoint.findMany()
     * 
     * // Get first 10 ImageTouristPoints
     * const imageTouristPoints = await prisma.imageTouristPoint.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const imageTouristPointWithIdOnly = await prisma.imageTouristPoint.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ImageTouristPointFindManyArgs>(args?: SelectSubset<T, ImageTouristPointFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImageTouristPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ImageTouristPoint.
     * @param {ImageTouristPointCreateArgs} args - Arguments to create a ImageTouristPoint.
     * @example
     * // Create one ImageTouristPoint
     * const ImageTouristPoint = await prisma.imageTouristPoint.create({
     *   data: {
     *     // ... data to create a ImageTouristPoint
     *   }
     * })
     * 
     */
    create<T extends ImageTouristPointCreateArgs>(args: SelectSubset<T, ImageTouristPointCreateArgs<ExtArgs>>): Prisma__ImageTouristPointClient<$Result.GetResult<Prisma.$ImageTouristPointPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ImageTouristPoints.
     * @param {ImageTouristPointCreateManyArgs} args - Arguments to create many ImageTouristPoints.
     * @example
     * // Create many ImageTouristPoints
     * const imageTouristPoint = await prisma.imageTouristPoint.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ImageTouristPointCreateManyArgs>(args?: SelectSubset<T, ImageTouristPointCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ImageTouristPoint.
     * @param {ImageTouristPointDeleteArgs} args - Arguments to delete one ImageTouristPoint.
     * @example
     * // Delete one ImageTouristPoint
     * const ImageTouristPoint = await prisma.imageTouristPoint.delete({
     *   where: {
     *     // ... filter to delete one ImageTouristPoint
     *   }
     * })
     * 
     */
    delete<T extends ImageTouristPointDeleteArgs>(args: SelectSubset<T, ImageTouristPointDeleteArgs<ExtArgs>>): Prisma__ImageTouristPointClient<$Result.GetResult<Prisma.$ImageTouristPointPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ImageTouristPoint.
     * @param {ImageTouristPointUpdateArgs} args - Arguments to update one ImageTouristPoint.
     * @example
     * // Update one ImageTouristPoint
     * const imageTouristPoint = await prisma.imageTouristPoint.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ImageTouristPointUpdateArgs>(args: SelectSubset<T, ImageTouristPointUpdateArgs<ExtArgs>>): Prisma__ImageTouristPointClient<$Result.GetResult<Prisma.$ImageTouristPointPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ImageTouristPoints.
     * @param {ImageTouristPointDeleteManyArgs} args - Arguments to filter ImageTouristPoints to delete.
     * @example
     * // Delete a few ImageTouristPoints
     * const { count } = await prisma.imageTouristPoint.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ImageTouristPointDeleteManyArgs>(args?: SelectSubset<T, ImageTouristPointDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ImageTouristPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageTouristPointUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ImageTouristPoints
     * const imageTouristPoint = await prisma.imageTouristPoint.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ImageTouristPointUpdateManyArgs>(args: SelectSubset<T, ImageTouristPointUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ImageTouristPoint.
     * @param {ImageTouristPointUpsertArgs} args - Arguments to update or create a ImageTouristPoint.
     * @example
     * // Update or create a ImageTouristPoint
     * const imageTouristPoint = await prisma.imageTouristPoint.upsert({
     *   create: {
     *     // ... data to create a ImageTouristPoint
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ImageTouristPoint we want to update
     *   }
     * })
     */
    upsert<T extends ImageTouristPointUpsertArgs>(args: SelectSubset<T, ImageTouristPointUpsertArgs<ExtArgs>>): Prisma__ImageTouristPointClient<$Result.GetResult<Prisma.$ImageTouristPointPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ImageTouristPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageTouristPointCountArgs} args - Arguments to filter ImageTouristPoints to count.
     * @example
     * // Count the number of ImageTouristPoints
     * const count = await prisma.imageTouristPoint.count({
     *   where: {
     *     // ... the filter for the ImageTouristPoints we want to count
     *   }
     * })
    **/
    count<T extends ImageTouristPointCountArgs>(
      args?: Subset<T, ImageTouristPointCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ImageTouristPointCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ImageTouristPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageTouristPointAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ImageTouristPointAggregateArgs>(args: Subset<T, ImageTouristPointAggregateArgs>): Prisma.PrismaPromise<GetImageTouristPointAggregateType<T>>

    /**
     * Group by ImageTouristPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageTouristPointGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ImageTouristPointGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ImageTouristPointGroupByArgs['orderBy'] }
        : { orderBy?: ImageTouristPointGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ImageTouristPointGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImageTouristPointGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ImageTouristPoint model
   */
  readonly fields: ImageTouristPointFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ImageTouristPoint.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ImageTouristPointClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userTouristPointByTouristPointId<T extends Ponto_TuristicoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_TuristicoDefaultArgs<ExtArgs>>): Prisma__Ponto_TuristicoClient<$Result.GetResult<Prisma.$Ponto_TuristicoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ImageTouristPoint model
   */
  interface ImageTouristPointFieldRefs {
    readonly id: FieldRef<"ImageTouristPoint", 'String'>
    readonly image: FieldRef<"ImageTouristPoint", 'String'>
    readonly idTouristPoint: FieldRef<"ImageTouristPoint", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ImageTouristPoint findUnique
   */
  export type ImageTouristPointFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageTouristPoint
     */
    select?: ImageTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageTouristPoint
     */
    omit?: ImageTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which ImageTouristPoint to fetch.
     */
    where: ImageTouristPointWhereUniqueInput
  }

  /**
   * ImageTouristPoint findUniqueOrThrow
   */
  export type ImageTouristPointFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageTouristPoint
     */
    select?: ImageTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageTouristPoint
     */
    omit?: ImageTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which ImageTouristPoint to fetch.
     */
    where: ImageTouristPointWhereUniqueInput
  }

  /**
   * ImageTouristPoint findFirst
   */
  export type ImageTouristPointFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageTouristPoint
     */
    select?: ImageTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageTouristPoint
     */
    omit?: ImageTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which ImageTouristPoint to fetch.
     */
    where?: ImageTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImageTouristPoints to fetch.
     */
    orderBy?: ImageTouristPointOrderByWithRelationInput | ImageTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ImageTouristPoints.
     */
    cursor?: ImageTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImageTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImageTouristPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ImageTouristPoints.
     */
    distinct?: ImageTouristPointScalarFieldEnum | ImageTouristPointScalarFieldEnum[]
  }

  /**
   * ImageTouristPoint findFirstOrThrow
   */
  export type ImageTouristPointFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageTouristPoint
     */
    select?: ImageTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageTouristPoint
     */
    omit?: ImageTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which ImageTouristPoint to fetch.
     */
    where?: ImageTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImageTouristPoints to fetch.
     */
    orderBy?: ImageTouristPointOrderByWithRelationInput | ImageTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ImageTouristPoints.
     */
    cursor?: ImageTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImageTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImageTouristPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ImageTouristPoints.
     */
    distinct?: ImageTouristPointScalarFieldEnum | ImageTouristPointScalarFieldEnum[]
  }

  /**
   * ImageTouristPoint findMany
   */
  export type ImageTouristPointFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageTouristPoint
     */
    select?: ImageTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageTouristPoint
     */
    omit?: ImageTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which ImageTouristPoints to fetch.
     */
    where?: ImageTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImageTouristPoints to fetch.
     */
    orderBy?: ImageTouristPointOrderByWithRelationInput | ImageTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ImageTouristPoints.
     */
    cursor?: ImageTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImageTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImageTouristPoints.
     */
    skip?: number
    distinct?: ImageTouristPointScalarFieldEnum | ImageTouristPointScalarFieldEnum[]
  }

  /**
   * ImageTouristPoint create
   */
  export type ImageTouristPointCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageTouristPoint
     */
    select?: ImageTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageTouristPoint
     */
    omit?: ImageTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageTouristPointInclude<ExtArgs> | null
    /**
     * The data needed to create a ImageTouristPoint.
     */
    data: XOR<ImageTouristPointCreateInput, ImageTouristPointUncheckedCreateInput>
  }

  /**
   * ImageTouristPoint createMany
   */
  export type ImageTouristPointCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ImageTouristPoints.
     */
    data: ImageTouristPointCreateManyInput | ImageTouristPointCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ImageTouristPoint update
   */
  export type ImageTouristPointUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageTouristPoint
     */
    select?: ImageTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageTouristPoint
     */
    omit?: ImageTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageTouristPointInclude<ExtArgs> | null
    /**
     * The data needed to update a ImageTouristPoint.
     */
    data: XOR<ImageTouristPointUpdateInput, ImageTouristPointUncheckedUpdateInput>
    /**
     * Choose, which ImageTouristPoint to update.
     */
    where: ImageTouristPointWhereUniqueInput
  }

  /**
   * ImageTouristPoint updateMany
   */
  export type ImageTouristPointUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ImageTouristPoints.
     */
    data: XOR<ImageTouristPointUpdateManyMutationInput, ImageTouristPointUncheckedUpdateManyInput>
    /**
     * Filter which ImageTouristPoints to update
     */
    where?: ImageTouristPointWhereInput
    /**
     * Limit how many ImageTouristPoints to update.
     */
    limit?: number
  }

  /**
   * ImageTouristPoint upsert
   */
  export type ImageTouristPointUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageTouristPoint
     */
    select?: ImageTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageTouristPoint
     */
    omit?: ImageTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageTouristPointInclude<ExtArgs> | null
    /**
     * The filter to search for the ImageTouristPoint to update in case it exists.
     */
    where: ImageTouristPointWhereUniqueInput
    /**
     * In case the ImageTouristPoint found by the `where` argument doesn't exist, create a new ImageTouristPoint with this data.
     */
    create: XOR<ImageTouristPointCreateInput, ImageTouristPointUncheckedCreateInput>
    /**
     * In case the ImageTouristPoint was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ImageTouristPointUpdateInput, ImageTouristPointUncheckedUpdateInput>
  }

  /**
   * ImageTouristPoint delete
   */
  export type ImageTouristPointDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageTouristPoint
     */
    select?: ImageTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageTouristPoint
     */
    omit?: ImageTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageTouristPointInclude<ExtArgs> | null
    /**
     * Filter which ImageTouristPoint to delete.
     */
    where: ImageTouristPointWhereUniqueInput
  }

  /**
   * ImageTouristPoint deleteMany
   */
  export type ImageTouristPointDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ImageTouristPoints to delete
     */
    where?: ImageTouristPointWhereInput
    /**
     * Limit how many ImageTouristPoints to delete.
     */
    limit?: number
  }

  /**
   * ImageTouristPoint without action
   */
  export type ImageTouristPointDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageTouristPoint
     */
    select?: ImageTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageTouristPoint
     */
    omit?: ImageTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageTouristPointInclude<ExtArgs> | null
  }


  /**
   * Model ImageCommercialPoint
   */

  export type AggregateImageCommercialPoint = {
    _count: ImageCommercialPointCountAggregateOutputType | null
    _min: ImageCommercialPointMinAggregateOutputType | null
    _max: ImageCommercialPointMaxAggregateOutputType | null
  }

  export type ImageCommercialPointMinAggregateOutputType = {
    id: string | null
    image: string | null
    idCommercialPoint: string | null
  }

  export type ImageCommercialPointMaxAggregateOutputType = {
    id: string | null
    image: string | null
    idCommercialPoint: string | null
  }

  export type ImageCommercialPointCountAggregateOutputType = {
    id: number
    image: number
    idCommercialPoint: number
    _all: number
  }


  export type ImageCommercialPointMinAggregateInputType = {
    id?: true
    image?: true
    idCommercialPoint?: true
  }

  export type ImageCommercialPointMaxAggregateInputType = {
    id?: true
    image?: true
    idCommercialPoint?: true
  }

  export type ImageCommercialPointCountAggregateInputType = {
    id?: true
    image?: true
    idCommercialPoint?: true
    _all?: true
  }

  export type ImageCommercialPointAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ImageCommercialPoint to aggregate.
     */
    where?: ImageCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImageCommercialPoints to fetch.
     */
    orderBy?: ImageCommercialPointOrderByWithRelationInput | ImageCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ImageCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImageCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImageCommercialPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ImageCommercialPoints
    **/
    _count?: true | ImageCommercialPointCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ImageCommercialPointMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ImageCommercialPointMaxAggregateInputType
  }

  export type GetImageCommercialPointAggregateType<T extends ImageCommercialPointAggregateArgs> = {
        [P in keyof T & keyof AggregateImageCommercialPoint]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImageCommercialPoint[P]>
      : GetScalarType<T[P], AggregateImageCommercialPoint[P]>
  }




  export type ImageCommercialPointGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ImageCommercialPointWhereInput
    orderBy?: ImageCommercialPointOrderByWithAggregationInput | ImageCommercialPointOrderByWithAggregationInput[]
    by: ImageCommercialPointScalarFieldEnum[] | ImageCommercialPointScalarFieldEnum
    having?: ImageCommercialPointScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ImageCommercialPointCountAggregateInputType | true
    _min?: ImageCommercialPointMinAggregateInputType
    _max?: ImageCommercialPointMaxAggregateInputType
  }

  export type ImageCommercialPointGroupByOutputType = {
    id: string
    image: string
    idCommercialPoint: string
    _count: ImageCommercialPointCountAggregateOutputType | null
    _min: ImageCommercialPointMinAggregateOutputType | null
    _max: ImageCommercialPointMaxAggregateOutputType | null
  }

  type GetImageCommercialPointGroupByPayload<T extends ImageCommercialPointGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ImageCommercialPointGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ImageCommercialPointGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ImageCommercialPointGroupByOutputType[P]>
            : GetScalarType<T[P], ImageCommercialPointGroupByOutputType[P]>
        }
      >
    >


  export type ImageCommercialPointSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    image?: boolean
    idCommercialPoint?: boolean
    userCommercialPointByCommercialPointId?: boolean | Ponto_ComercialDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imageCommercialPoint"]>



  export type ImageCommercialPointSelectScalar = {
    id?: boolean
    image?: boolean
    idCommercialPoint?: boolean
  }

  export type ImageCommercialPointOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "image" | "idCommercialPoint", ExtArgs["result"]["imageCommercialPoint"]>
  export type ImageCommercialPointInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userCommercialPointByCommercialPointId?: boolean | Ponto_ComercialDefaultArgs<ExtArgs>
  }

  export type $ImageCommercialPointPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ImageCommercialPoint"
    objects: {
      userCommercialPointByCommercialPointId: Prisma.$Ponto_ComercialPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      image: string
      idCommercialPoint: string
    }, ExtArgs["result"]["imageCommercialPoint"]>
    composites: {}
  }

  type ImageCommercialPointGetPayload<S extends boolean | null | undefined | ImageCommercialPointDefaultArgs> = $Result.GetResult<Prisma.$ImageCommercialPointPayload, S>

  type ImageCommercialPointCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ImageCommercialPointFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ImageCommercialPointCountAggregateInputType | true
    }

  export interface ImageCommercialPointDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ImageCommercialPoint'], meta: { name: 'ImageCommercialPoint' } }
    /**
     * Find zero or one ImageCommercialPoint that matches the filter.
     * @param {ImageCommercialPointFindUniqueArgs} args - Arguments to find a ImageCommercialPoint
     * @example
     * // Get one ImageCommercialPoint
     * const imageCommercialPoint = await prisma.imageCommercialPoint.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ImageCommercialPointFindUniqueArgs>(args: SelectSubset<T, ImageCommercialPointFindUniqueArgs<ExtArgs>>): Prisma__ImageCommercialPointClient<$Result.GetResult<Prisma.$ImageCommercialPointPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ImageCommercialPoint that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ImageCommercialPointFindUniqueOrThrowArgs} args - Arguments to find a ImageCommercialPoint
     * @example
     * // Get one ImageCommercialPoint
     * const imageCommercialPoint = await prisma.imageCommercialPoint.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ImageCommercialPointFindUniqueOrThrowArgs>(args: SelectSubset<T, ImageCommercialPointFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ImageCommercialPointClient<$Result.GetResult<Prisma.$ImageCommercialPointPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ImageCommercialPoint that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageCommercialPointFindFirstArgs} args - Arguments to find a ImageCommercialPoint
     * @example
     * // Get one ImageCommercialPoint
     * const imageCommercialPoint = await prisma.imageCommercialPoint.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ImageCommercialPointFindFirstArgs>(args?: SelectSubset<T, ImageCommercialPointFindFirstArgs<ExtArgs>>): Prisma__ImageCommercialPointClient<$Result.GetResult<Prisma.$ImageCommercialPointPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ImageCommercialPoint that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageCommercialPointFindFirstOrThrowArgs} args - Arguments to find a ImageCommercialPoint
     * @example
     * // Get one ImageCommercialPoint
     * const imageCommercialPoint = await prisma.imageCommercialPoint.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ImageCommercialPointFindFirstOrThrowArgs>(args?: SelectSubset<T, ImageCommercialPointFindFirstOrThrowArgs<ExtArgs>>): Prisma__ImageCommercialPointClient<$Result.GetResult<Prisma.$ImageCommercialPointPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ImageCommercialPoints that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageCommercialPointFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ImageCommercialPoints
     * const imageCommercialPoints = await prisma.imageCommercialPoint.findMany()
     * 
     * // Get first 10 ImageCommercialPoints
     * const imageCommercialPoints = await prisma.imageCommercialPoint.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const imageCommercialPointWithIdOnly = await prisma.imageCommercialPoint.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ImageCommercialPointFindManyArgs>(args?: SelectSubset<T, ImageCommercialPointFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImageCommercialPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ImageCommercialPoint.
     * @param {ImageCommercialPointCreateArgs} args - Arguments to create a ImageCommercialPoint.
     * @example
     * // Create one ImageCommercialPoint
     * const ImageCommercialPoint = await prisma.imageCommercialPoint.create({
     *   data: {
     *     // ... data to create a ImageCommercialPoint
     *   }
     * })
     * 
     */
    create<T extends ImageCommercialPointCreateArgs>(args: SelectSubset<T, ImageCommercialPointCreateArgs<ExtArgs>>): Prisma__ImageCommercialPointClient<$Result.GetResult<Prisma.$ImageCommercialPointPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ImageCommercialPoints.
     * @param {ImageCommercialPointCreateManyArgs} args - Arguments to create many ImageCommercialPoints.
     * @example
     * // Create many ImageCommercialPoints
     * const imageCommercialPoint = await prisma.imageCommercialPoint.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ImageCommercialPointCreateManyArgs>(args?: SelectSubset<T, ImageCommercialPointCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ImageCommercialPoint.
     * @param {ImageCommercialPointDeleteArgs} args - Arguments to delete one ImageCommercialPoint.
     * @example
     * // Delete one ImageCommercialPoint
     * const ImageCommercialPoint = await prisma.imageCommercialPoint.delete({
     *   where: {
     *     // ... filter to delete one ImageCommercialPoint
     *   }
     * })
     * 
     */
    delete<T extends ImageCommercialPointDeleteArgs>(args: SelectSubset<T, ImageCommercialPointDeleteArgs<ExtArgs>>): Prisma__ImageCommercialPointClient<$Result.GetResult<Prisma.$ImageCommercialPointPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ImageCommercialPoint.
     * @param {ImageCommercialPointUpdateArgs} args - Arguments to update one ImageCommercialPoint.
     * @example
     * // Update one ImageCommercialPoint
     * const imageCommercialPoint = await prisma.imageCommercialPoint.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ImageCommercialPointUpdateArgs>(args: SelectSubset<T, ImageCommercialPointUpdateArgs<ExtArgs>>): Prisma__ImageCommercialPointClient<$Result.GetResult<Prisma.$ImageCommercialPointPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ImageCommercialPoints.
     * @param {ImageCommercialPointDeleteManyArgs} args - Arguments to filter ImageCommercialPoints to delete.
     * @example
     * // Delete a few ImageCommercialPoints
     * const { count } = await prisma.imageCommercialPoint.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ImageCommercialPointDeleteManyArgs>(args?: SelectSubset<T, ImageCommercialPointDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ImageCommercialPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageCommercialPointUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ImageCommercialPoints
     * const imageCommercialPoint = await prisma.imageCommercialPoint.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ImageCommercialPointUpdateManyArgs>(args: SelectSubset<T, ImageCommercialPointUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ImageCommercialPoint.
     * @param {ImageCommercialPointUpsertArgs} args - Arguments to update or create a ImageCommercialPoint.
     * @example
     * // Update or create a ImageCommercialPoint
     * const imageCommercialPoint = await prisma.imageCommercialPoint.upsert({
     *   create: {
     *     // ... data to create a ImageCommercialPoint
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ImageCommercialPoint we want to update
     *   }
     * })
     */
    upsert<T extends ImageCommercialPointUpsertArgs>(args: SelectSubset<T, ImageCommercialPointUpsertArgs<ExtArgs>>): Prisma__ImageCommercialPointClient<$Result.GetResult<Prisma.$ImageCommercialPointPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ImageCommercialPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageCommercialPointCountArgs} args - Arguments to filter ImageCommercialPoints to count.
     * @example
     * // Count the number of ImageCommercialPoints
     * const count = await prisma.imageCommercialPoint.count({
     *   where: {
     *     // ... the filter for the ImageCommercialPoints we want to count
     *   }
     * })
    **/
    count<T extends ImageCommercialPointCountArgs>(
      args?: Subset<T, ImageCommercialPointCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ImageCommercialPointCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ImageCommercialPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageCommercialPointAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ImageCommercialPointAggregateArgs>(args: Subset<T, ImageCommercialPointAggregateArgs>): Prisma.PrismaPromise<GetImageCommercialPointAggregateType<T>>

    /**
     * Group by ImageCommercialPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageCommercialPointGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ImageCommercialPointGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ImageCommercialPointGroupByArgs['orderBy'] }
        : { orderBy?: ImageCommercialPointGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ImageCommercialPointGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImageCommercialPointGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ImageCommercialPoint model
   */
  readonly fields: ImageCommercialPointFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ImageCommercialPoint.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ImageCommercialPointClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userCommercialPointByCommercialPointId<T extends Ponto_ComercialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_ComercialDefaultArgs<ExtArgs>>): Prisma__Ponto_ComercialClient<$Result.GetResult<Prisma.$Ponto_ComercialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ImageCommercialPoint model
   */
  interface ImageCommercialPointFieldRefs {
    readonly id: FieldRef<"ImageCommercialPoint", 'String'>
    readonly image: FieldRef<"ImageCommercialPoint", 'String'>
    readonly idCommercialPoint: FieldRef<"ImageCommercialPoint", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ImageCommercialPoint findUnique
   */
  export type ImageCommercialPointFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageCommercialPoint
     */
    select?: ImageCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageCommercialPoint
     */
    omit?: ImageCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which ImageCommercialPoint to fetch.
     */
    where: ImageCommercialPointWhereUniqueInput
  }

  /**
   * ImageCommercialPoint findUniqueOrThrow
   */
  export type ImageCommercialPointFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageCommercialPoint
     */
    select?: ImageCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageCommercialPoint
     */
    omit?: ImageCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which ImageCommercialPoint to fetch.
     */
    where: ImageCommercialPointWhereUniqueInput
  }

  /**
   * ImageCommercialPoint findFirst
   */
  export type ImageCommercialPointFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageCommercialPoint
     */
    select?: ImageCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageCommercialPoint
     */
    omit?: ImageCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which ImageCommercialPoint to fetch.
     */
    where?: ImageCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImageCommercialPoints to fetch.
     */
    orderBy?: ImageCommercialPointOrderByWithRelationInput | ImageCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ImageCommercialPoints.
     */
    cursor?: ImageCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImageCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImageCommercialPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ImageCommercialPoints.
     */
    distinct?: ImageCommercialPointScalarFieldEnum | ImageCommercialPointScalarFieldEnum[]
  }

  /**
   * ImageCommercialPoint findFirstOrThrow
   */
  export type ImageCommercialPointFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageCommercialPoint
     */
    select?: ImageCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageCommercialPoint
     */
    omit?: ImageCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which ImageCommercialPoint to fetch.
     */
    where?: ImageCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImageCommercialPoints to fetch.
     */
    orderBy?: ImageCommercialPointOrderByWithRelationInput | ImageCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ImageCommercialPoints.
     */
    cursor?: ImageCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImageCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImageCommercialPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ImageCommercialPoints.
     */
    distinct?: ImageCommercialPointScalarFieldEnum | ImageCommercialPointScalarFieldEnum[]
  }

  /**
   * ImageCommercialPoint findMany
   */
  export type ImageCommercialPointFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageCommercialPoint
     */
    select?: ImageCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageCommercialPoint
     */
    omit?: ImageCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which ImageCommercialPoints to fetch.
     */
    where?: ImageCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImageCommercialPoints to fetch.
     */
    orderBy?: ImageCommercialPointOrderByWithRelationInput | ImageCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ImageCommercialPoints.
     */
    cursor?: ImageCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImageCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImageCommercialPoints.
     */
    skip?: number
    distinct?: ImageCommercialPointScalarFieldEnum | ImageCommercialPointScalarFieldEnum[]
  }

  /**
   * ImageCommercialPoint create
   */
  export type ImageCommercialPointCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageCommercialPoint
     */
    select?: ImageCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageCommercialPoint
     */
    omit?: ImageCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageCommercialPointInclude<ExtArgs> | null
    /**
     * The data needed to create a ImageCommercialPoint.
     */
    data: XOR<ImageCommercialPointCreateInput, ImageCommercialPointUncheckedCreateInput>
  }

  /**
   * ImageCommercialPoint createMany
   */
  export type ImageCommercialPointCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ImageCommercialPoints.
     */
    data: ImageCommercialPointCreateManyInput | ImageCommercialPointCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ImageCommercialPoint update
   */
  export type ImageCommercialPointUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageCommercialPoint
     */
    select?: ImageCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageCommercialPoint
     */
    omit?: ImageCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageCommercialPointInclude<ExtArgs> | null
    /**
     * The data needed to update a ImageCommercialPoint.
     */
    data: XOR<ImageCommercialPointUpdateInput, ImageCommercialPointUncheckedUpdateInput>
    /**
     * Choose, which ImageCommercialPoint to update.
     */
    where: ImageCommercialPointWhereUniqueInput
  }

  /**
   * ImageCommercialPoint updateMany
   */
  export type ImageCommercialPointUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ImageCommercialPoints.
     */
    data: XOR<ImageCommercialPointUpdateManyMutationInput, ImageCommercialPointUncheckedUpdateManyInput>
    /**
     * Filter which ImageCommercialPoints to update
     */
    where?: ImageCommercialPointWhereInput
    /**
     * Limit how many ImageCommercialPoints to update.
     */
    limit?: number
  }

  /**
   * ImageCommercialPoint upsert
   */
  export type ImageCommercialPointUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageCommercialPoint
     */
    select?: ImageCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageCommercialPoint
     */
    omit?: ImageCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageCommercialPointInclude<ExtArgs> | null
    /**
     * The filter to search for the ImageCommercialPoint to update in case it exists.
     */
    where: ImageCommercialPointWhereUniqueInput
    /**
     * In case the ImageCommercialPoint found by the `where` argument doesn't exist, create a new ImageCommercialPoint with this data.
     */
    create: XOR<ImageCommercialPointCreateInput, ImageCommercialPointUncheckedCreateInput>
    /**
     * In case the ImageCommercialPoint was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ImageCommercialPointUpdateInput, ImageCommercialPointUncheckedUpdateInput>
  }

  /**
   * ImageCommercialPoint delete
   */
  export type ImageCommercialPointDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageCommercialPoint
     */
    select?: ImageCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageCommercialPoint
     */
    omit?: ImageCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageCommercialPointInclude<ExtArgs> | null
    /**
     * Filter which ImageCommercialPoint to delete.
     */
    where: ImageCommercialPointWhereUniqueInput
  }

  /**
   * ImageCommercialPoint deleteMany
   */
  export type ImageCommercialPointDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ImageCommercialPoints to delete
     */
    where?: ImageCommercialPointWhereInput
    /**
     * Limit how many ImageCommercialPoints to delete.
     */
    limit?: number
  }

  /**
   * ImageCommercialPoint without action
   */
  export type ImageCommercialPointDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageCommercialPoint
     */
    select?: ImageCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageCommercialPoint
     */
    omit?: ImageCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageCommercialPointInclude<ExtArgs> | null
  }


  /**
   * Model ImageRoadMap
   */

  export type AggregateImageRoadMap = {
    _count: ImageRoadMapCountAggregateOutputType | null
    _min: ImageRoadMapMinAggregateOutputType | null
    _max: ImageRoadMapMaxAggregateOutputType | null
  }

  export type ImageRoadMapMinAggregateOutputType = {
    id: string | null
    image: string | null
    idRoadMap: string | null
  }

  export type ImageRoadMapMaxAggregateOutputType = {
    id: string | null
    image: string | null
    idRoadMap: string | null
  }

  export type ImageRoadMapCountAggregateOutputType = {
    id: number
    image: number
    idRoadMap: number
    _all: number
  }


  export type ImageRoadMapMinAggregateInputType = {
    id?: true
    image?: true
    idRoadMap?: true
  }

  export type ImageRoadMapMaxAggregateInputType = {
    id?: true
    image?: true
    idRoadMap?: true
  }

  export type ImageRoadMapCountAggregateInputType = {
    id?: true
    image?: true
    idRoadMap?: true
    _all?: true
  }

  export type ImageRoadMapAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ImageRoadMap to aggregate.
     */
    where?: ImageRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImageRoadMaps to fetch.
     */
    orderBy?: ImageRoadMapOrderByWithRelationInput | ImageRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ImageRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImageRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImageRoadMaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ImageRoadMaps
    **/
    _count?: true | ImageRoadMapCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ImageRoadMapMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ImageRoadMapMaxAggregateInputType
  }

  export type GetImageRoadMapAggregateType<T extends ImageRoadMapAggregateArgs> = {
        [P in keyof T & keyof AggregateImageRoadMap]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImageRoadMap[P]>
      : GetScalarType<T[P], AggregateImageRoadMap[P]>
  }




  export type ImageRoadMapGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ImageRoadMapWhereInput
    orderBy?: ImageRoadMapOrderByWithAggregationInput | ImageRoadMapOrderByWithAggregationInput[]
    by: ImageRoadMapScalarFieldEnum[] | ImageRoadMapScalarFieldEnum
    having?: ImageRoadMapScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ImageRoadMapCountAggregateInputType | true
    _min?: ImageRoadMapMinAggregateInputType
    _max?: ImageRoadMapMaxAggregateInputType
  }

  export type ImageRoadMapGroupByOutputType = {
    id: string
    image: string
    idRoadMap: string
    _count: ImageRoadMapCountAggregateOutputType | null
    _min: ImageRoadMapMinAggregateOutputType | null
    _max: ImageRoadMapMaxAggregateOutputType | null
  }

  type GetImageRoadMapGroupByPayload<T extends ImageRoadMapGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ImageRoadMapGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ImageRoadMapGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ImageRoadMapGroupByOutputType[P]>
            : GetScalarType<T[P], ImageRoadMapGroupByOutputType[P]>
        }
      >
    >


  export type ImageRoadMapSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    image?: boolean
    idRoadMap?: boolean
    userRoadMapByRoadMapId?: boolean | Travel_Road_MapDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imageRoadMap"]>



  export type ImageRoadMapSelectScalar = {
    id?: boolean
    image?: boolean
    idRoadMap?: boolean
  }

  export type ImageRoadMapOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "image" | "idRoadMap", ExtArgs["result"]["imageRoadMap"]>
  export type ImageRoadMapInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userRoadMapByRoadMapId?: boolean | Travel_Road_MapDefaultArgs<ExtArgs>
  }

  export type $ImageRoadMapPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ImageRoadMap"
    objects: {
      userRoadMapByRoadMapId: Prisma.$Travel_Road_MapPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      image: string
      idRoadMap: string
    }, ExtArgs["result"]["imageRoadMap"]>
    composites: {}
  }

  type ImageRoadMapGetPayload<S extends boolean | null | undefined | ImageRoadMapDefaultArgs> = $Result.GetResult<Prisma.$ImageRoadMapPayload, S>

  type ImageRoadMapCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ImageRoadMapFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ImageRoadMapCountAggregateInputType | true
    }

  export interface ImageRoadMapDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ImageRoadMap'], meta: { name: 'ImageRoadMap' } }
    /**
     * Find zero or one ImageRoadMap that matches the filter.
     * @param {ImageRoadMapFindUniqueArgs} args - Arguments to find a ImageRoadMap
     * @example
     * // Get one ImageRoadMap
     * const imageRoadMap = await prisma.imageRoadMap.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ImageRoadMapFindUniqueArgs>(args: SelectSubset<T, ImageRoadMapFindUniqueArgs<ExtArgs>>): Prisma__ImageRoadMapClient<$Result.GetResult<Prisma.$ImageRoadMapPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ImageRoadMap that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ImageRoadMapFindUniqueOrThrowArgs} args - Arguments to find a ImageRoadMap
     * @example
     * // Get one ImageRoadMap
     * const imageRoadMap = await prisma.imageRoadMap.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ImageRoadMapFindUniqueOrThrowArgs>(args: SelectSubset<T, ImageRoadMapFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ImageRoadMapClient<$Result.GetResult<Prisma.$ImageRoadMapPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ImageRoadMap that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageRoadMapFindFirstArgs} args - Arguments to find a ImageRoadMap
     * @example
     * // Get one ImageRoadMap
     * const imageRoadMap = await prisma.imageRoadMap.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ImageRoadMapFindFirstArgs>(args?: SelectSubset<T, ImageRoadMapFindFirstArgs<ExtArgs>>): Prisma__ImageRoadMapClient<$Result.GetResult<Prisma.$ImageRoadMapPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ImageRoadMap that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageRoadMapFindFirstOrThrowArgs} args - Arguments to find a ImageRoadMap
     * @example
     * // Get one ImageRoadMap
     * const imageRoadMap = await prisma.imageRoadMap.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ImageRoadMapFindFirstOrThrowArgs>(args?: SelectSubset<T, ImageRoadMapFindFirstOrThrowArgs<ExtArgs>>): Prisma__ImageRoadMapClient<$Result.GetResult<Prisma.$ImageRoadMapPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ImageRoadMaps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageRoadMapFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ImageRoadMaps
     * const imageRoadMaps = await prisma.imageRoadMap.findMany()
     * 
     * // Get first 10 ImageRoadMaps
     * const imageRoadMaps = await prisma.imageRoadMap.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const imageRoadMapWithIdOnly = await prisma.imageRoadMap.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ImageRoadMapFindManyArgs>(args?: SelectSubset<T, ImageRoadMapFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImageRoadMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ImageRoadMap.
     * @param {ImageRoadMapCreateArgs} args - Arguments to create a ImageRoadMap.
     * @example
     * // Create one ImageRoadMap
     * const ImageRoadMap = await prisma.imageRoadMap.create({
     *   data: {
     *     // ... data to create a ImageRoadMap
     *   }
     * })
     * 
     */
    create<T extends ImageRoadMapCreateArgs>(args: SelectSubset<T, ImageRoadMapCreateArgs<ExtArgs>>): Prisma__ImageRoadMapClient<$Result.GetResult<Prisma.$ImageRoadMapPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ImageRoadMaps.
     * @param {ImageRoadMapCreateManyArgs} args - Arguments to create many ImageRoadMaps.
     * @example
     * // Create many ImageRoadMaps
     * const imageRoadMap = await prisma.imageRoadMap.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ImageRoadMapCreateManyArgs>(args?: SelectSubset<T, ImageRoadMapCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ImageRoadMap.
     * @param {ImageRoadMapDeleteArgs} args - Arguments to delete one ImageRoadMap.
     * @example
     * // Delete one ImageRoadMap
     * const ImageRoadMap = await prisma.imageRoadMap.delete({
     *   where: {
     *     // ... filter to delete one ImageRoadMap
     *   }
     * })
     * 
     */
    delete<T extends ImageRoadMapDeleteArgs>(args: SelectSubset<T, ImageRoadMapDeleteArgs<ExtArgs>>): Prisma__ImageRoadMapClient<$Result.GetResult<Prisma.$ImageRoadMapPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ImageRoadMap.
     * @param {ImageRoadMapUpdateArgs} args - Arguments to update one ImageRoadMap.
     * @example
     * // Update one ImageRoadMap
     * const imageRoadMap = await prisma.imageRoadMap.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ImageRoadMapUpdateArgs>(args: SelectSubset<T, ImageRoadMapUpdateArgs<ExtArgs>>): Prisma__ImageRoadMapClient<$Result.GetResult<Prisma.$ImageRoadMapPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ImageRoadMaps.
     * @param {ImageRoadMapDeleteManyArgs} args - Arguments to filter ImageRoadMaps to delete.
     * @example
     * // Delete a few ImageRoadMaps
     * const { count } = await prisma.imageRoadMap.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ImageRoadMapDeleteManyArgs>(args?: SelectSubset<T, ImageRoadMapDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ImageRoadMaps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageRoadMapUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ImageRoadMaps
     * const imageRoadMap = await prisma.imageRoadMap.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ImageRoadMapUpdateManyArgs>(args: SelectSubset<T, ImageRoadMapUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ImageRoadMap.
     * @param {ImageRoadMapUpsertArgs} args - Arguments to update or create a ImageRoadMap.
     * @example
     * // Update or create a ImageRoadMap
     * const imageRoadMap = await prisma.imageRoadMap.upsert({
     *   create: {
     *     // ... data to create a ImageRoadMap
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ImageRoadMap we want to update
     *   }
     * })
     */
    upsert<T extends ImageRoadMapUpsertArgs>(args: SelectSubset<T, ImageRoadMapUpsertArgs<ExtArgs>>): Prisma__ImageRoadMapClient<$Result.GetResult<Prisma.$ImageRoadMapPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ImageRoadMaps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageRoadMapCountArgs} args - Arguments to filter ImageRoadMaps to count.
     * @example
     * // Count the number of ImageRoadMaps
     * const count = await prisma.imageRoadMap.count({
     *   where: {
     *     // ... the filter for the ImageRoadMaps we want to count
     *   }
     * })
    **/
    count<T extends ImageRoadMapCountArgs>(
      args?: Subset<T, ImageRoadMapCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ImageRoadMapCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ImageRoadMap.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageRoadMapAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ImageRoadMapAggregateArgs>(args: Subset<T, ImageRoadMapAggregateArgs>): Prisma.PrismaPromise<GetImageRoadMapAggregateType<T>>

    /**
     * Group by ImageRoadMap.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageRoadMapGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ImageRoadMapGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ImageRoadMapGroupByArgs['orderBy'] }
        : { orderBy?: ImageRoadMapGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ImageRoadMapGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImageRoadMapGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ImageRoadMap model
   */
  readonly fields: ImageRoadMapFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ImageRoadMap.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ImageRoadMapClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userRoadMapByRoadMapId<T extends Travel_Road_MapDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Travel_Road_MapDefaultArgs<ExtArgs>>): Prisma__Travel_Road_MapClient<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ImageRoadMap model
   */
  interface ImageRoadMapFieldRefs {
    readonly id: FieldRef<"ImageRoadMap", 'String'>
    readonly image: FieldRef<"ImageRoadMap", 'String'>
    readonly idRoadMap: FieldRef<"ImageRoadMap", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ImageRoadMap findUnique
   */
  export type ImageRoadMapFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageRoadMap
     */
    select?: ImageRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageRoadMap
     */
    omit?: ImageRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which ImageRoadMap to fetch.
     */
    where: ImageRoadMapWhereUniqueInput
  }

  /**
   * ImageRoadMap findUniqueOrThrow
   */
  export type ImageRoadMapFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageRoadMap
     */
    select?: ImageRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageRoadMap
     */
    omit?: ImageRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which ImageRoadMap to fetch.
     */
    where: ImageRoadMapWhereUniqueInput
  }

  /**
   * ImageRoadMap findFirst
   */
  export type ImageRoadMapFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageRoadMap
     */
    select?: ImageRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageRoadMap
     */
    omit?: ImageRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which ImageRoadMap to fetch.
     */
    where?: ImageRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImageRoadMaps to fetch.
     */
    orderBy?: ImageRoadMapOrderByWithRelationInput | ImageRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ImageRoadMaps.
     */
    cursor?: ImageRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImageRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImageRoadMaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ImageRoadMaps.
     */
    distinct?: ImageRoadMapScalarFieldEnum | ImageRoadMapScalarFieldEnum[]
  }

  /**
   * ImageRoadMap findFirstOrThrow
   */
  export type ImageRoadMapFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageRoadMap
     */
    select?: ImageRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageRoadMap
     */
    omit?: ImageRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which ImageRoadMap to fetch.
     */
    where?: ImageRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImageRoadMaps to fetch.
     */
    orderBy?: ImageRoadMapOrderByWithRelationInput | ImageRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ImageRoadMaps.
     */
    cursor?: ImageRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImageRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImageRoadMaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ImageRoadMaps.
     */
    distinct?: ImageRoadMapScalarFieldEnum | ImageRoadMapScalarFieldEnum[]
  }

  /**
   * ImageRoadMap findMany
   */
  export type ImageRoadMapFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageRoadMap
     */
    select?: ImageRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageRoadMap
     */
    omit?: ImageRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which ImageRoadMaps to fetch.
     */
    where?: ImageRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImageRoadMaps to fetch.
     */
    orderBy?: ImageRoadMapOrderByWithRelationInput | ImageRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ImageRoadMaps.
     */
    cursor?: ImageRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImageRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImageRoadMaps.
     */
    skip?: number
    distinct?: ImageRoadMapScalarFieldEnum | ImageRoadMapScalarFieldEnum[]
  }

  /**
   * ImageRoadMap create
   */
  export type ImageRoadMapCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageRoadMap
     */
    select?: ImageRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageRoadMap
     */
    omit?: ImageRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageRoadMapInclude<ExtArgs> | null
    /**
     * The data needed to create a ImageRoadMap.
     */
    data: XOR<ImageRoadMapCreateInput, ImageRoadMapUncheckedCreateInput>
  }

  /**
   * ImageRoadMap createMany
   */
  export type ImageRoadMapCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ImageRoadMaps.
     */
    data: ImageRoadMapCreateManyInput | ImageRoadMapCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ImageRoadMap update
   */
  export type ImageRoadMapUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageRoadMap
     */
    select?: ImageRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageRoadMap
     */
    omit?: ImageRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageRoadMapInclude<ExtArgs> | null
    /**
     * The data needed to update a ImageRoadMap.
     */
    data: XOR<ImageRoadMapUpdateInput, ImageRoadMapUncheckedUpdateInput>
    /**
     * Choose, which ImageRoadMap to update.
     */
    where: ImageRoadMapWhereUniqueInput
  }

  /**
   * ImageRoadMap updateMany
   */
  export type ImageRoadMapUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ImageRoadMaps.
     */
    data: XOR<ImageRoadMapUpdateManyMutationInput, ImageRoadMapUncheckedUpdateManyInput>
    /**
     * Filter which ImageRoadMaps to update
     */
    where?: ImageRoadMapWhereInput
    /**
     * Limit how many ImageRoadMaps to update.
     */
    limit?: number
  }

  /**
   * ImageRoadMap upsert
   */
  export type ImageRoadMapUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageRoadMap
     */
    select?: ImageRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageRoadMap
     */
    omit?: ImageRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageRoadMapInclude<ExtArgs> | null
    /**
     * The filter to search for the ImageRoadMap to update in case it exists.
     */
    where: ImageRoadMapWhereUniqueInput
    /**
     * In case the ImageRoadMap found by the `where` argument doesn't exist, create a new ImageRoadMap with this data.
     */
    create: XOR<ImageRoadMapCreateInput, ImageRoadMapUncheckedCreateInput>
    /**
     * In case the ImageRoadMap was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ImageRoadMapUpdateInput, ImageRoadMapUncheckedUpdateInput>
  }

  /**
   * ImageRoadMap delete
   */
  export type ImageRoadMapDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageRoadMap
     */
    select?: ImageRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageRoadMap
     */
    omit?: ImageRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageRoadMapInclude<ExtArgs> | null
    /**
     * Filter which ImageRoadMap to delete.
     */
    where: ImageRoadMapWhereUniqueInput
  }

  /**
   * ImageRoadMap deleteMany
   */
  export type ImageRoadMapDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ImageRoadMaps to delete
     */
    where?: ImageRoadMapWhereInput
    /**
     * Limit how many ImageRoadMaps to delete.
     */
    limit?: number
  }

  /**
   * ImageRoadMap without action
   */
  export type ImageRoadMapDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageRoadMap
     */
    select?: ImageRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImageRoadMap
     */
    omit?: ImageRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageRoadMapInclude<ExtArgs> | null
  }


  /**
   * Model CommentRoadMap
   */

  export type AggregateCommentRoadMap = {
    _count: CommentRoadMapCountAggregateOutputType | null
    _min: CommentRoadMapMinAggregateOutputType | null
    _max: CommentRoadMapMaxAggregateOutputType | null
  }

  export type CommentRoadMapMinAggregateOutputType = {
    id: string | null
    dataPublication: Date | null
    content: string | null
    userClientEmail: string | null
    idUserClient: string | null
    idTravelRoadMap: string | null
  }

  export type CommentRoadMapMaxAggregateOutputType = {
    id: string | null
    dataPublication: Date | null
    content: string | null
    userClientEmail: string | null
    idUserClient: string | null
    idTravelRoadMap: string | null
  }

  export type CommentRoadMapCountAggregateOutputType = {
    id: number
    dataPublication: number
    content: number
    userClientEmail: number
    idUserClient: number
    idTravelRoadMap: number
    _all: number
  }


  export type CommentRoadMapMinAggregateInputType = {
    id?: true
    dataPublication?: true
    content?: true
    userClientEmail?: true
    idUserClient?: true
    idTravelRoadMap?: true
  }

  export type CommentRoadMapMaxAggregateInputType = {
    id?: true
    dataPublication?: true
    content?: true
    userClientEmail?: true
    idUserClient?: true
    idTravelRoadMap?: true
  }

  export type CommentRoadMapCountAggregateInputType = {
    id?: true
    dataPublication?: true
    content?: true
    userClientEmail?: true
    idUserClient?: true
    idTravelRoadMap?: true
    _all?: true
  }

  export type CommentRoadMapAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CommentRoadMap to aggregate.
     */
    where?: CommentRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommentRoadMaps to fetch.
     */
    orderBy?: CommentRoadMapOrderByWithRelationInput | CommentRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CommentRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommentRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommentRoadMaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CommentRoadMaps
    **/
    _count?: true | CommentRoadMapCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommentRoadMapMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommentRoadMapMaxAggregateInputType
  }

  export type GetCommentRoadMapAggregateType<T extends CommentRoadMapAggregateArgs> = {
        [P in keyof T & keyof AggregateCommentRoadMap]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommentRoadMap[P]>
      : GetScalarType<T[P], AggregateCommentRoadMap[P]>
  }




  export type CommentRoadMapGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentRoadMapWhereInput
    orderBy?: CommentRoadMapOrderByWithAggregationInput | CommentRoadMapOrderByWithAggregationInput[]
    by: CommentRoadMapScalarFieldEnum[] | CommentRoadMapScalarFieldEnum
    having?: CommentRoadMapScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommentRoadMapCountAggregateInputType | true
    _min?: CommentRoadMapMinAggregateInputType
    _max?: CommentRoadMapMaxAggregateInputType
  }

  export type CommentRoadMapGroupByOutputType = {
    id: string
    dataPublication: Date
    content: string
    userClientEmail: string
    idUserClient: string
    idTravelRoadMap: string
    _count: CommentRoadMapCountAggregateOutputType | null
    _min: CommentRoadMapMinAggregateOutputType | null
    _max: CommentRoadMapMaxAggregateOutputType | null
  }

  type GetCommentRoadMapGroupByPayload<T extends CommentRoadMapGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommentRoadMapGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommentRoadMapGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommentRoadMapGroupByOutputType[P]>
            : GetScalarType<T[P], CommentRoadMapGroupByOutputType[P]>
        }
      >
    >


  export type CommentRoadMapSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dataPublication?: boolean
    content?: boolean
    userClientEmail?: boolean
    idUserClient?: boolean
    idTravelRoadMap?: boolean
    userClientByClientEmail?: boolean | User_ClientDefaultArgs<ExtArgs>
    userClientByClientId?: boolean | User_ClientDefaultArgs<ExtArgs>
    userRoadMapByRoadMapId?: boolean | Travel_Road_MapDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["commentRoadMap"]>



  export type CommentRoadMapSelectScalar = {
    id?: boolean
    dataPublication?: boolean
    content?: boolean
    userClientEmail?: boolean
    idUserClient?: boolean
    idTravelRoadMap?: boolean
  }

  export type CommentRoadMapOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "dataPublication" | "content" | "userClientEmail" | "idUserClient" | "idTravelRoadMap", ExtArgs["result"]["commentRoadMap"]>
  export type CommentRoadMapInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userClientByClientEmail?: boolean | User_ClientDefaultArgs<ExtArgs>
    userClientByClientId?: boolean | User_ClientDefaultArgs<ExtArgs>
    userRoadMapByRoadMapId?: boolean | Travel_Road_MapDefaultArgs<ExtArgs>
  }

  export type $CommentRoadMapPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CommentRoadMap"
    objects: {
      userClientByClientEmail: Prisma.$User_ClientPayload<ExtArgs>
      userClientByClientId: Prisma.$User_ClientPayload<ExtArgs>
      userRoadMapByRoadMapId: Prisma.$Travel_Road_MapPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      dataPublication: Date
      content: string
      userClientEmail: string
      idUserClient: string
      idTravelRoadMap: string
    }, ExtArgs["result"]["commentRoadMap"]>
    composites: {}
  }

  type CommentRoadMapGetPayload<S extends boolean | null | undefined | CommentRoadMapDefaultArgs> = $Result.GetResult<Prisma.$CommentRoadMapPayload, S>

  type CommentRoadMapCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CommentRoadMapFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CommentRoadMapCountAggregateInputType | true
    }

  export interface CommentRoadMapDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CommentRoadMap'], meta: { name: 'CommentRoadMap' } }
    /**
     * Find zero or one CommentRoadMap that matches the filter.
     * @param {CommentRoadMapFindUniqueArgs} args - Arguments to find a CommentRoadMap
     * @example
     * // Get one CommentRoadMap
     * const commentRoadMap = await prisma.commentRoadMap.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CommentRoadMapFindUniqueArgs>(args: SelectSubset<T, CommentRoadMapFindUniqueArgs<ExtArgs>>): Prisma__CommentRoadMapClient<$Result.GetResult<Prisma.$CommentRoadMapPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CommentRoadMap that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CommentRoadMapFindUniqueOrThrowArgs} args - Arguments to find a CommentRoadMap
     * @example
     * // Get one CommentRoadMap
     * const commentRoadMap = await prisma.commentRoadMap.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CommentRoadMapFindUniqueOrThrowArgs>(args: SelectSubset<T, CommentRoadMapFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CommentRoadMapClient<$Result.GetResult<Prisma.$CommentRoadMapPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CommentRoadMap that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentRoadMapFindFirstArgs} args - Arguments to find a CommentRoadMap
     * @example
     * // Get one CommentRoadMap
     * const commentRoadMap = await prisma.commentRoadMap.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CommentRoadMapFindFirstArgs>(args?: SelectSubset<T, CommentRoadMapFindFirstArgs<ExtArgs>>): Prisma__CommentRoadMapClient<$Result.GetResult<Prisma.$CommentRoadMapPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CommentRoadMap that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentRoadMapFindFirstOrThrowArgs} args - Arguments to find a CommentRoadMap
     * @example
     * // Get one CommentRoadMap
     * const commentRoadMap = await prisma.commentRoadMap.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CommentRoadMapFindFirstOrThrowArgs>(args?: SelectSubset<T, CommentRoadMapFindFirstOrThrowArgs<ExtArgs>>): Prisma__CommentRoadMapClient<$Result.GetResult<Prisma.$CommentRoadMapPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CommentRoadMaps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentRoadMapFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CommentRoadMaps
     * const commentRoadMaps = await prisma.commentRoadMap.findMany()
     * 
     * // Get first 10 CommentRoadMaps
     * const commentRoadMaps = await prisma.commentRoadMap.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const commentRoadMapWithIdOnly = await prisma.commentRoadMap.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CommentRoadMapFindManyArgs>(args?: SelectSubset<T, CommentRoadMapFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentRoadMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CommentRoadMap.
     * @param {CommentRoadMapCreateArgs} args - Arguments to create a CommentRoadMap.
     * @example
     * // Create one CommentRoadMap
     * const CommentRoadMap = await prisma.commentRoadMap.create({
     *   data: {
     *     // ... data to create a CommentRoadMap
     *   }
     * })
     * 
     */
    create<T extends CommentRoadMapCreateArgs>(args: SelectSubset<T, CommentRoadMapCreateArgs<ExtArgs>>): Prisma__CommentRoadMapClient<$Result.GetResult<Prisma.$CommentRoadMapPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CommentRoadMaps.
     * @param {CommentRoadMapCreateManyArgs} args - Arguments to create many CommentRoadMaps.
     * @example
     * // Create many CommentRoadMaps
     * const commentRoadMap = await prisma.commentRoadMap.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CommentRoadMapCreateManyArgs>(args?: SelectSubset<T, CommentRoadMapCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CommentRoadMap.
     * @param {CommentRoadMapDeleteArgs} args - Arguments to delete one CommentRoadMap.
     * @example
     * // Delete one CommentRoadMap
     * const CommentRoadMap = await prisma.commentRoadMap.delete({
     *   where: {
     *     // ... filter to delete one CommentRoadMap
     *   }
     * })
     * 
     */
    delete<T extends CommentRoadMapDeleteArgs>(args: SelectSubset<T, CommentRoadMapDeleteArgs<ExtArgs>>): Prisma__CommentRoadMapClient<$Result.GetResult<Prisma.$CommentRoadMapPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CommentRoadMap.
     * @param {CommentRoadMapUpdateArgs} args - Arguments to update one CommentRoadMap.
     * @example
     * // Update one CommentRoadMap
     * const commentRoadMap = await prisma.commentRoadMap.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CommentRoadMapUpdateArgs>(args: SelectSubset<T, CommentRoadMapUpdateArgs<ExtArgs>>): Prisma__CommentRoadMapClient<$Result.GetResult<Prisma.$CommentRoadMapPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CommentRoadMaps.
     * @param {CommentRoadMapDeleteManyArgs} args - Arguments to filter CommentRoadMaps to delete.
     * @example
     * // Delete a few CommentRoadMaps
     * const { count } = await prisma.commentRoadMap.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CommentRoadMapDeleteManyArgs>(args?: SelectSubset<T, CommentRoadMapDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CommentRoadMaps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentRoadMapUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CommentRoadMaps
     * const commentRoadMap = await prisma.commentRoadMap.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CommentRoadMapUpdateManyArgs>(args: SelectSubset<T, CommentRoadMapUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CommentRoadMap.
     * @param {CommentRoadMapUpsertArgs} args - Arguments to update or create a CommentRoadMap.
     * @example
     * // Update or create a CommentRoadMap
     * const commentRoadMap = await prisma.commentRoadMap.upsert({
     *   create: {
     *     // ... data to create a CommentRoadMap
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CommentRoadMap we want to update
     *   }
     * })
     */
    upsert<T extends CommentRoadMapUpsertArgs>(args: SelectSubset<T, CommentRoadMapUpsertArgs<ExtArgs>>): Prisma__CommentRoadMapClient<$Result.GetResult<Prisma.$CommentRoadMapPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CommentRoadMaps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentRoadMapCountArgs} args - Arguments to filter CommentRoadMaps to count.
     * @example
     * // Count the number of CommentRoadMaps
     * const count = await prisma.commentRoadMap.count({
     *   where: {
     *     // ... the filter for the CommentRoadMaps we want to count
     *   }
     * })
    **/
    count<T extends CommentRoadMapCountArgs>(
      args?: Subset<T, CommentRoadMapCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommentRoadMapCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CommentRoadMap.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentRoadMapAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommentRoadMapAggregateArgs>(args: Subset<T, CommentRoadMapAggregateArgs>): Prisma.PrismaPromise<GetCommentRoadMapAggregateType<T>>

    /**
     * Group by CommentRoadMap.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentRoadMapGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CommentRoadMapGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CommentRoadMapGroupByArgs['orderBy'] }
        : { orderBy?: CommentRoadMapGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CommentRoadMapGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommentRoadMapGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CommentRoadMap model
   */
  readonly fields: CommentRoadMapFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CommentRoadMap.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CommentRoadMapClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userClientByClientEmail<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userClientByClientId<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userRoadMapByRoadMapId<T extends Travel_Road_MapDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Travel_Road_MapDefaultArgs<ExtArgs>>): Prisma__Travel_Road_MapClient<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CommentRoadMap model
   */
  interface CommentRoadMapFieldRefs {
    readonly id: FieldRef<"CommentRoadMap", 'String'>
    readonly dataPublication: FieldRef<"CommentRoadMap", 'DateTime'>
    readonly content: FieldRef<"CommentRoadMap", 'String'>
    readonly userClientEmail: FieldRef<"CommentRoadMap", 'String'>
    readonly idUserClient: FieldRef<"CommentRoadMap", 'String'>
    readonly idTravelRoadMap: FieldRef<"CommentRoadMap", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CommentRoadMap findUnique
   */
  export type CommentRoadMapFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentRoadMap
     */
    select?: CommentRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentRoadMap
     */
    omit?: CommentRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which CommentRoadMap to fetch.
     */
    where: CommentRoadMapWhereUniqueInput
  }

  /**
   * CommentRoadMap findUniqueOrThrow
   */
  export type CommentRoadMapFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentRoadMap
     */
    select?: CommentRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentRoadMap
     */
    omit?: CommentRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which CommentRoadMap to fetch.
     */
    where: CommentRoadMapWhereUniqueInput
  }

  /**
   * CommentRoadMap findFirst
   */
  export type CommentRoadMapFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentRoadMap
     */
    select?: CommentRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentRoadMap
     */
    omit?: CommentRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which CommentRoadMap to fetch.
     */
    where?: CommentRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommentRoadMaps to fetch.
     */
    orderBy?: CommentRoadMapOrderByWithRelationInput | CommentRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CommentRoadMaps.
     */
    cursor?: CommentRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommentRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommentRoadMaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CommentRoadMaps.
     */
    distinct?: CommentRoadMapScalarFieldEnum | CommentRoadMapScalarFieldEnum[]
  }

  /**
   * CommentRoadMap findFirstOrThrow
   */
  export type CommentRoadMapFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentRoadMap
     */
    select?: CommentRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentRoadMap
     */
    omit?: CommentRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which CommentRoadMap to fetch.
     */
    where?: CommentRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommentRoadMaps to fetch.
     */
    orderBy?: CommentRoadMapOrderByWithRelationInput | CommentRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CommentRoadMaps.
     */
    cursor?: CommentRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommentRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommentRoadMaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CommentRoadMaps.
     */
    distinct?: CommentRoadMapScalarFieldEnum | CommentRoadMapScalarFieldEnum[]
  }

  /**
   * CommentRoadMap findMany
   */
  export type CommentRoadMapFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentRoadMap
     */
    select?: CommentRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentRoadMap
     */
    omit?: CommentRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which CommentRoadMaps to fetch.
     */
    where?: CommentRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommentRoadMaps to fetch.
     */
    orderBy?: CommentRoadMapOrderByWithRelationInput | CommentRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CommentRoadMaps.
     */
    cursor?: CommentRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommentRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommentRoadMaps.
     */
    skip?: number
    distinct?: CommentRoadMapScalarFieldEnum | CommentRoadMapScalarFieldEnum[]
  }

  /**
   * CommentRoadMap create
   */
  export type CommentRoadMapCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentRoadMap
     */
    select?: CommentRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentRoadMap
     */
    omit?: CommentRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentRoadMapInclude<ExtArgs> | null
    /**
     * The data needed to create a CommentRoadMap.
     */
    data: XOR<CommentRoadMapCreateInput, CommentRoadMapUncheckedCreateInput>
  }

  /**
   * CommentRoadMap createMany
   */
  export type CommentRoadMapCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CommentRoadMaps.
     */
    data: CommentRoadMapCreateManyInput | CommentRoadMapCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CommentRoadMap update
   */
  export type CommentRoadMapUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentRoadMap
     */
    select?: CommentRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentRoadMap
     */
    omit?: CommentRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentRoadMapInclude<ExtArgs> | null
    /**
     * The data needed to update a CommentRoadMap.
     */
    data: XOR<CommentRoadMapUpdateInput, CommentRoadMapUncheckedUpdateInput>
    /**
     * Choose, which CommentRoadMap to update.
     */
    where: CommentRoadMapWhereUniqueInput
  }

  /**
   * CommentRoadMap updateMany
   */
  export type CommentRoadMapUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CommentRoadMaps.
     */
    data: XOR<CommentRoadMapUpdateManyMutationInput, CommentRoadMapUncheckedUpdateManyInput>
    /**
     * Filter which CommentRoadMaps to update
     */
    where?: CommentRoadMapWhereInput
    /**
     * Limit how many CommentRoadMaps to update.
     */
    limit?: number
  }

  /**
   * CommentRoadMap upsert
   */
  export type CommentRoadMapUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentRoadMap
     */
    select?: CommentRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentRoadMap
     */
    omit?: CommentRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentRoadMapInclude<ExtArgs> | null
    /**
     * The filter to search for the CommentRoadMap to update in case it exists.
     */
    where: CommentRoadMapWhereUniqueInput
    /**
     * In case the CommentRoadMap found by the `where` argument doesn't exist, create a new CommentRoadMap with this data.
     */
    create: XOR<CommentRoadMapCreateInput, CommentRoadMapUncheckedCreateInput>
    /**
     * In case the CommentRoadMap was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CommentRoadMapUpdateInput, CommentRoadMapUncheckedUpdateInput>
  }

  /**
   * CommentRoadMap delete
   */
  export type CommentRoadMapDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentRoadMap
     */
    select?: CommentRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentRoadMap
     */
    omit?: CommentRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentRoadMapInclude<ExtArgs> | null
    /**
     * Filter which CommentRoadMap to delete.
     */
    where: CommentRoadMapWhereUniqueInput
  }

  /**
   * CommentRoadMap deleteMany
   */
  export type CommentRoadMapDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CommentRoadMaps to delete
     */
    where?: CommentRoadMapWhereInput
    /**
     * Limit how many CommentRoadMaps to delete.
     */
    limit?: number
  }

  /**
   * CommentRoadMap without action
   */
  export type CommentRoadMapDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentRoadMap
     */
    select?: CommentRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentRoadMap
     */
    omit?: CommentRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentRoadMapInclude<ExtArgs> | null
  }


  /**
   * Model CommentTouristPoint
   */

  export type AggregateCommentTouristPoint = {
    _count: CommentTouristPointCountAggregateOutputType | null
    _min: CommentTouristPointMinAggregateOutputType | null
    _max: CommentTouristPointMaxAggregateOutputType | null
  }

  export type CommentTouristPointMinAggregateOutputType = {
    id: string | null
    dataPublication: Date | null
    content: string | null
    userClientEmail: string | null
    idUserClient: string | null
    idTouristPoint: string | null
  }

  export type CommentTouristPointMaxAggregateOutputType = {
    id: string | null
    dataPublication: Date | null
    content: string | null
    userClientEmail: string | null
    idUserClient: string | null
    idTouristPoint: string | null
  }

  export type CommentTouristPointCountAggregateOutputType = {
    id: number
    dataPublication: number
    content: number
    userClientEmail: number
    idUserClient: number
    idTouristPoint: number
    _all: number
  }


  export type CommentTouristPointMinAggregateInputType = {
    id?: true
    dataPublication?: true
    content?: true
    userClientEmail?: true
    idUserClient?: true
    idTouristPoint?: true
  }

  export type CommentTouristPointMaxAggregateInputType = {
    id?: true
    dataPublication?: true
    content?: true
    userClientEmail?: true
    idUserClient?: true
    idTouristPoint?: true
  }

  export type CommentTouristPointCountAggregateInputType = {
    id?: true
    dataPublication?: true
    content?: true
    userClientEmail?: true
    idUserClient?: true
    idTouristPoint?: true
    _all?: true
  }

  export type CommentTouristPointAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CommentTouristPoint to aggregate.
     */
    where?: CommentTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommentTouristPoints to fetch.
     */
    orderBy?: CommentTouristPointOrderByWithRelationInput | CommentTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CommentTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommentTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommentTouristPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CommentTouristPoints
    **/
    _count?: true | CommentTouristPointCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommentTouristPointMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommentTouristPointMaxAggregateInputType
  }

  export type GetCommentTouristPointAggregateType<T extends CommentTouristPointAggregateArgs> = {
        [P in keyof T & keyof AggregateCommentTouristPoint]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommentTouristPoint[P]>
      : GetScalarType<T[P], AggregateCommentTouristPoint[P]>
  }




  export type CommentTouristPointGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentTouristPointWhereInput
    orderBy?: CommentTouristPointOrderByWithAggregationInput | CommentTouristPointOrderByWithAggregationInput[]
    by: CommentTouristPointScalarFieldEnum[] | CommentTouristPointScalarFieldEnum
    having?: CommentTouristPointScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommentTouristPointCountAggregateInputType | true
    _min?: CommentTouristPointMinAggregateInputType
    _max?: CommentTouristPointMaxAggregateInputType
  }

  export type CommentTouristPointGroupByOutputType = {
    id: string
    dataPublication: Date
    content: string
    userClientEmail: string
    idUserClient: string
    idTouristPoint: string
    _count: CommentTouristPointCountAggregateOutputType | null
    _min: CommentTouristPointMinAggregateOutputType | null
    _max: CommentTouristPointMaxAggregateOutputType | null
  }

  type GetCommentTouristPointGroupByPayload<T extends CommentTouristPointGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommentTouristPointGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommentTouristPointGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommentTouristPointGroupByOutputType[P]>
            : GetScalarType<T[P], CommentTouristPointGroupByOutputType[P]>
        }
      >
    >


  export type CommentTouristPointSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dataPublication?: boolean
    content?: boolean
    userClientEmail?: boolean
    idUserClient?: boolean
    idTouristPoint?: boolean
    userClientByClientEmail?: boolean | User_ClientDefaultArgs<ExtArgs>
    userClientByClientId?: boolean | User_ClientDefaultArgs<ExtArgs>
    userTouristPointByTouristPointId?: boolean | Ponto_TuristicoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["commentTouristPoint"]>



  export type CommentTouristPointSelectScalar = {
    id?: boolean
    dataPublication?: boolean
    content?: boolean
    userClientEmail?: boolean
    idUserClient?: boolean
    idTouristPoint?: boolean
  }

  export type CommentTouristPointOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "dataPublication" | "content" | "userClientEmail" | "idUserClient" | "idTouristPoint", ExtArgs["result"]["commentTouristPoint"]>
  export type CommentTouristPointInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userClientByClientEmail?: boolean | User_ClientDefaultArgs<ExtArgs>
    userClientByClientId?: boolean | User_ClientDefaultArgs<ExtArgs>
    userTouristPointByTouristPointId?: boolean | Ponto_TuristicoDefaultArgs<ExtArgs>
  }

  export type $CommentTouristPointPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CommentTouristPoint"
    objects: {
      userClientByClientEmail: Prisma.$User_ClientPayload<ExtArgs>
      userClientByClientId: Prisma.$User_ClientPayload<ExtArgs>
      userTouristPointByTouristPointId: Prisma.$Ponto_TuristicoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      dataPublication: Date
      content: string
      userClientEmail: string
      idUserClient: string
      idTouristPoint: string
    }, ExtArgs["result"]["commentTouristPoint"]>
    composites: {}
  }

  type CommentTouristPointGetPayload<S extends boolean | null | undefined | CommentTouristPointDefaultArgs> = $Result.GetResult<Prisma.$CommentTouristPointPayload, S>

  type CommentTouristPointCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CommentTouristPointFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CommentTouristPointCountAggregateInputType | true
    }

  export interface CommentTouristPointDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CommentTouristPoint'], meta: { name: 'CommentTouristPoint' } }
    /**
     * Find zero or one CommentTouristPoint that matches the filter.
     * @param {CommentTouristPointFindUniqueArgs} args - Arguments to find a CommentTouristPoint
     * @example
     * // Get one CommentTouristPoint
     * const commentTouristPoint = await prisma.commentTouristPoint.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CommentTouristPointFindUniqueArgs>(args: SelectSubset<T, CommentTouristPointFindUniqueArgs<ExtArgs>>): Prisma__CommentTouristPointClient<$Result.GetResult<Prisma.$CommentTouristPointPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CommentTouristPoint that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CommentTouristPointFindUniqueOrThrowArgs} args - Arguments to find a CommentTouristPoint
     * @example
     * // Get one CommentTouristPoint
     * const commentTouristPoint = await prisma.commentTouristPoint.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CommentTouristPointFindUniqueOrThrowArgs>(args: SelectSubset<T, CommentTouristPointFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CommentTouristPointClient<$Result.GetResult<Prisma.$CommentTouristPointPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CommentTouristPoint that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentTouristPointFindFirstArgs} args - Arguments to find a CommentTouristPoint
     * @example
     * // Get one CommentTouristPoint
     * const commentTouristPoint = await prisma.commentTouristPoint.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CommentTouristPointFindFirstArgs>(args?: SelectSubset<T, CommentTouristPointFindFirstArgs<ExtArgs>>): Prisma__CommentTouristPointClient<$Result.GetResult<Prisma.$CommentTouristPointPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CommentTouristPoint that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentTouristPointFindFirstOrThrowArgs} args - Arguments to find a CommentTouristPoint
     * @example
     * // Get one CommentTouristPoint
     * const commentTouristPoint = await prisma.commentTouristPoint.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CommentTouristPointFindFirstOrThrowArgs>(args?: SelectSubset<T, CommentTouristPointFindFirstOrThrowArgs<ExtArgs>>): Prisma__CommentTouristPointClient<$Result.GetResult<Prisma.$CommentTouristPointPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CommentTouristPoints that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentTouristPointFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CommentTouristPoints
     * const commentTouristPoints = await prisma.commentTouristPoint.findMany()
     * 
     * // Get first 10 CommentTouristPoints
     * const commentTouristPoints = await prisma.commentTouristPoint.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const commentTouristPointWithIdOnly = await prisma.commentTouristPoint.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CommentTouristPointFindManyArgs>(args?: SelectSubset<T, CommentTouristPointFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentTouristPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CommentTouristPoint.
     * @param {CommentTouristPointCreateArgs} args - Arguments to create a CommentTouristPoint.
     * @example
     * // Create one CommentTouristPoint
     * const CommentTouristPoint = await prisma.commentTouristPoint.create({
     *   data: {
     *     // ... data to create a CommentTouristPoint
     *   }
     * })
     * 
     */
    create<T extends CommentTouristPointCreateArgs>(args: SelectSubset<T, CommentTouristPointCreateArgs<ExtArgs>>): Prisma__CommentTouristPointClient<$Result.GetResult<Prisma.$CommentTouristPointPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CommentTouristPoints.
     * @param {CommentTouristPointCreateManyArgs} args - Arguments to create many CommentTouristPoints.
     * @example
     * // Create many CommentTouristPoints
     * const commentTouristPoint = await prisma.commentTouristPoint.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CommentTouristPointCreateManyArgs>(args?: SelectSubset<T, CommentTouristPointCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CommentTouristPoint.
     * @param {CommentTouristPointDeleteArgs} args - Arguments to delete one CommentTouristPoint.
     * @example
     * // Delete one CommentTouristPoint
     * const CommentTouristPoint = await prisma.commentTouristPoint.delete({
     *   where: {
     *     // ... filter to delete one CommentTouristPoint
     *   }
     * })
     * 
     */
    delete<T extends CommentTouristPointDeleteArgs>(args: SelectSubset<T, CommentTouristPointDeleteArgs<ExtArgs>>): Prisma__CommentTouristPointClient<$Result.GetResult<Prisma.$CommentTouristPointPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CommentTouristPoint.
     * @param {CommentTouristPointUpdateArgs} args - Arguments to update one CommentTouristPoint.
     * @example
     * // Update one CommentTouristPoint
     * const commentTouristPoint = await prisma.commentTouristPoint.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CommentTouristPointUpdateArgs>(args: SelectSubset<T, CommentTouristPointUpdateArgs<ExtArgs>>): Prisma__CommentTouristPointClient<$Result.GetResult<Prisma.$CommentTouristPointPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CommentTouristPoints.
     * @param {CommentTouristPointDeleteManyArgs} args - Arguments to filter CommentTouristPoints to delete.
     * @example
     * // Delete a few CommentTouristPoints
     * const { count } = await prisma.commentTouristPoint.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CommentTouristPointDeleteManyArgs>(args?: SelectSubset<T, CommentTouristPointDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CommentTouristPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentTouristPointUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CommentTouristPoints
     * const commentTouristPoint = await prisma.commentTouristPoint.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CommentTouristPointUpdateManyArgs>(args: SelectSubset<T, CommentTouristPointUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CommentTouristPoint.
     * @param {CommentTouristPointUpsertArgs} args - Arguments to update or create a CommentTouristPoint.
     * @example
     * // Update or create a CommentTouristPoint
     * const commentTouristPoint = await prisma.commentTouristPoint.upsert({
     *   create: {
     *     // ... data to create a CommentTouristPoint
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CommentTouristPoint we want to update
     *   }
     * })
     */
    upsert<T extends CommentTouristPointUpsertArgs>(args: SelectSubset<T, CommentTouristPointUpsertArgs<ExtArgs>>): Prisma__CommentTouristPointClient<$Result.GetResult<Prisma.$CommentTouristPointPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CommentTouristPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentTouristPointCountArgs} args - Arguments to filter CommentTouristPoints to count.
     * @example
     * // Count the number of CommentTouristPoints
     * const count = await prisma.commentTouristPoint.count({
     *   where: {
     *     // ... the filter for the CommentTouristPoints we want to count
     *   }
     * })
    **/
    count<T extends CommentTouristPointCountArgs>(
      args?: Subset<T, CommentTouristPointCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommentTouristPointCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CommentTouristPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentTouristPointAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommentTouristPointAggregateArgs>(args: Subset<T, CommentTouristPointAggregateArgs>): Prisma.PrismaPromise<GetCommentTouristPointAggregateType<T>>

    /**
     * Group by CommentTouristPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentTouristPointGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CommentTouristPointGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CommentTouristPointGroupByArgs['orderBy'] }
        : { orderBy?: CommentTouristPointGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CommentTouristPointGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommentTouristPointGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CommentTouristPoint model
   */
  readonly fields: CommentTouristPointFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CommentTouristPoint.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CommentTouristPointClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userClientByClientEmail<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userClientByClientId<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userTouristPointByTouristPointId<T extends Ponto_TuristicoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_TuristicoDefaultArgs<ExtArgs>>): Prisma__Ponto_TuristicoClient<$Result.GetResult<Prisma.$Ponto_TuristicoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CommentTouristPoint model
   */
  interface CommentTouristPointFieldRefs {
    readonly id: FieldRef<"CommentTouristPoint", 'String'>
    readonly dataPublication: FieldRef<"CommentTouristPoint", 'DateTime'>
    readonly content: FieldRef<"CommentTouristPoint", 'String'>
    readonly userClientEmail: FieldRef<"CommentTouristPoint", 'String'>
    readonly idUserClient: FieldRef<"CommentTouristPoint", 'String'>
    readonly idTouristPoint: FieldRef<"CommentTouristPoint", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CommentTouristPoint findUnique
   */
  export type CommentTouristPointFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentTouristPoint
     */
    select?: CommentTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentTouristPoint
     */
    omit?: CommentTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which CommentTouristPoint to fetch.
     */
    where: CommentTouristPointWhereUniqueInput
  }

  /**
   * CommentTouristPoint findUniqueOrThrow
   */
  export type CommentTouristPointFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentTouristPoint
     */
    select?: CommentTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentTouristPoint
     */
    omit?: CommentTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which CommentTouristPoint to fetch.
     */
    where: CommentTouristPointWhereUniqueInput
  }

  /**
   * CommentTouristPoint findFirst
   */
  export type CommentTouristPointFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentTouristPoint
     */
    select?: CommentTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentTouristPoint
     */
    omit?: CommentTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which CommentTouristPoint to fetch.
     */
    where?: CommentTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommentTouristPoints to fetch.
     */
    orderBy?: CommentTouristPointOrderByWithRelationInput | CommentTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CommentTouristPoints.
     */
    cursor?: CommentTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommentTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommentTouristPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CommentTouristPoints.
     */
    distinct?: CommentTouristPointScalarFieldEnum | CommentTouristPointScalarFieldEnum[]
  }

  /**
   * CommentTouristPoint findFirstOrThrow
   */
  export type CommentTouristPointFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentTouristPoint
     */
    select?: CommentTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentTouristPoint
     */
    omit?: CommentTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which CommentTouristPoint to fetch.
     */
    where?: CommentTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommentTouristPoints to fetch.
     */
    orderBy?: CommentTouristPointOrderByWithRelationInput | CommentTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CommentTouristPoints.
     */
    cursor?: CommentTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommentTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommentTouristPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CommentTouristPoints.
     */
    distinct?: CommentTouristPointScalarFieldEnum | CommentTouristPointScalarFieldEnum[]
  }

  /**
   * CommentTouristPoint findMany
   */
  export type CommentTouristPointFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentTouristPoint
     */
    select?: CommentTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentTouristPoint
     */
    omit?: CommentTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which CommentTouristPoints to fetch.
     */
    where?: CommentTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommentTouristPoints to fetch.
     */
    orderBy?: CommentTouristPointOrderByWithRelationInput | CommentTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CommentTouristPoints.
     */
    cursor?: CommentTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommentTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommentTouristPoints.
     */
    skip?: number
    distinct?: CommentTouristPointScalarFieldEnum | CommentTouristPointScalarFieldEnum[]
  }

  /**
   * CommentTouristPoint create
   */
  export type CommentTouristPointCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentTouristPoint
     */
    select?: CommentTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentTouristPoint
     */
    omit?: CommentTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentTouristPointInclude<ExtArgs> | null
    /**
     * The data needed to create a CommentTouristPoint.
     */
    data: XOR<CommentTouristPointCreateInput, CommentTouristPointUncheckedCreateInput>
  }

  /**
   * CommentTouristPoint createMany
   */
  export type CommentTouristPointCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CommentTouristPoints.
     */
    data: CommentTouristPointCreateManyInput | CommentTouristPointCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CommentTouristPoint update
   */
  export type CommentTouristPointUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentTouristPoint
     */
    select?: CommentTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentTouristPoint
     */
    omit?: CommentTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentTouristPointInclude<ExtArgs> | null
    /**
     * The data needed to update a CommentTouristPoint.
     */
    data: XOR<CommentTouristPointUpdateInput, CommentTouristPointUncheckedUpdateInput>
    /**
     * Choose, which CommentTouristPoint to update.
     */
    where: CommentTouristPointWhereUniqueInput
  }

  /**
   * CommentTouristPoint updateMany
   */
  export type CommentTouristPointUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CommentTouristPoints.
     */
    data: XOR<CommentTouristPointUpdateManyMutationInput, CommentTouristPointUncheckedUpdateManyInput>
    /**
     * Filter which CommentTouristPoints to update
     */
    where?: CommentTouristPointWhereInput
    /**
     * Limit how many CommentTouristPoints to update.
     */
    limit?: number
  }

  /**
   * CommentTouristPoint upsert
   */
  export type CommentTouristPointUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentTouristPoint
     */
    select?: CommentTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentTouristPoint
     */
    omit?: CommentTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentTouristPointInclude<ExtArgs> | null
    /**
     * The filter to search for the CommentTouristPoint to update in case it exists.
     */
    where: CommentTouristPointWhereUniqueInput
    /**
     * In case the CommentTouristPoint found by the `where` argument doesn't exist, create a new CommentTouristPoint with this data.
     */
    create: XOR<CommentTouristPointCreateInput, CommentTouristPointUncheckedCreateInput>
    /**
     * In case the CommentTouristPoint was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CommentTouristPointUpdateInput, CommentTouristPointUncheckedUpdateInput>
  }

  /**
   * CommentTouristPoint delete
   */
  export type CommentTouristPointDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentTouristPoint
     */
    select?: CommentTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentTouristPoint
     */
    omit?: CommentTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentTouristPointInclude<ExtArgs> | null
    /**
     * Filter which CommentTouristPoint to delete.
     */
    where: CommentTouristPointWhereUniqueInput
  }

  /**
   * CommentTouristPoint deleteMany
   */
  export type CommentTouristPointDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CommentTouristPoints to delete
     */
    where?: CommentTouristPointWhereInput
    /**
     * Limit how many CommentTouristPoints to delete.
     */
    limit?: number
  }

  /**
   * CommentTouristPoint without action
   */
  export type CommentTouristPointDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentTouristPoint
     */
    select?: CommentTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentTouristPoint
     */
    omit?: CommentTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentTouristPointInclude<ExtArgs> | null
  }


  /**
   * Model CommentCommercialPoint
   */

  export type AggregateCommentCommercialPoint = {
    _count: CommentCommercialPointCountAggregateOutputType | null
    _min: CommentCommercialPointMinAggregateOutputType | null
    _max: CommentCommercialPointMaxAggregateOutputType | null
  }

  export type CommentCommercialPointMinAggregateOutputType = {
    id: string | null
    dataPublication: Date | null
    content: string | null
    userClientEmail: string | null
    idUserClient: string | null
    idCommercialPoint: string | null
  }

  export type CommentCommercialPointMaxAggregateOutputType = {
    id: string | null
    dataPublication: Date | null
    content: string | null
    userClientEmail: string | null
    idUserClient: string | null
    idCommercialPoint: string | null
  }

  export type CommentCommercialPointCountAggregateOutputType = {
    id: number
    dataPublication: number
    content: number
    userClientEmail: number
    idUserClient: number
    idCommercialPoint: number
    _all: number
  }


  export type CommentCommercialPointMinAggregateInputType = {
    id?: true
    dataPublication?: true
    content?: true
    userClientEmail?: true
    idUserClient?: true
    idCommercialPoint?: true
  }

  export type CommentCommercialPointMaxAggregateInputType = {
    id?: true
    dataPublication?: true
    content?: true
    userClientEmail?: true
    idUserClient?: true
    idCommercialPoint?: true
  }

  export type CommentCommercialPointCountAggregateInputType = {
    id?: true
    dataPublication?: true
    content?: true
    userClientEmail?: true
    idUserClient?: true
    idCommercialPoint?: true
    _all?: true
  }

  export type CommentCommercialPointAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CommentCommercialPoint to aggregate.
     */
    where?: CommentCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommentCommercialPoints to fetch.
     */
    orderBy?: CommentCommercialPointOrderByWithRelationInput | CommentCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CommentCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommentCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommentCommercialPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CommentCommercialPoints
    **/
    _count?: true | CommentCommercialPointCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommentCommercialPointMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommentCommercialPointMaxAggregateInputType
  }

  export type GetCommentCommercialPointAggregateType<T extends CommentCommercialPointAggregateArgs> = {
        [P in keyof T & keyof AggregateCommentCommercialPoint]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommentCommercialPoint[P]>
      : GetScalarType<T[P], AggregateCommentCommercialPoint[P]>
  }




  export type CommentCommercialPointGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentCommercialPointWhereInput
    orderBy?: CommentCommercialPointOrderByWithAggregationInput | CommentCommercialPointOrderByWithAggregationInput[]
    by: CommentCommercialPointScalarFieldEnum[] | CommentCommercialPointScalarFieldEnum
    having?: CommentCommercialPointScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommentCommercialPointCountAggregateInputType | true
    _min?: CommentCommercialPointMinAggregateInputType
    _max?: CommentCommercialPointMaxAggregateInputType
  }

  export type CommentCommercialPointGroupByOutputType = {
    id: string
    dataPublication: Date
    content: string
    userClientEmail: string
    idUserClient: string
    idCommercialPoint: string
    _count: CommentCommercialPointCountAggregateOutputType | null
    _min: CommentCommercialPointMinAggregateOutputType | null
    _max: CommentCommercialPointMaxAggregateOutputType | null
  }

  type GetCommentCommercialPointGroupByPayload<T extends CommentCommercialPointGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommentCommercialPointGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommentCommercialPointGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommentCommercialPointGroupByOutputType[P]>
            : GetScalarType<T[P], CommentCommercialPointGroupByOutputType[P]>
        }
      >
    >


  export type CommentCommercialPointSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dataPublication?: boolean
    content?: boolean
    userClientEmail?: boolean
    idUserClient?: boolean
    idCommercialPoint?: boolean
    userClientByClientEmail?: boolean | User_ClientDefaultArgs<ExtArgs>
    userClientByClientId?: boolean | User_ClientDefaultArgs<ExtArgs>
    userCommercialPointByCommercialPointId?: boolean | Ponto_ComercialDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["commentCommercialPoint"]>



  export type CommentCommercialPointSelectScalar = {
    id?: boolean
    dataPublication?: boolean
    content?: boolean
    userClientEmail?: boolean
    idUserClient?: boolean
    idCommercialPoint?: boolean
  }

  export type CommentCommercialPointOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "dataPublication" | "content" | "userClientEmail" | "idUserClient" | "idCommercialPoint", ExtArgs["result"]["commentCommercialPoint"]>
  export type CommentCommercialPointInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userClientByClientEmail?: boolean | User_ClientDefaultArgs<ExtArgs>
    userClientByClientId?: boolean | User_ClientDefaultArgs<ExtArgs>
    userCommercialPointByCommercialPointId?: boolean | Ponto_ComercialDefaultArgs<ExtArgs>
  }

  export type $CommentCommercialPointPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CommentCommercialPoint"
    objects: {
      userClientByClientEmail: Prisma.$User_ClientPayload<ExtArgs>
      userClientByClientId: Prisma.$User_ClientPayload<ExtArgs>
      userCommercialPointByCommercialPointId: Prisma.$Ponto_ComercialPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      dataPublication: Date
      content: string
      userClientEmail: string
      idUserClient: string
      idCommercialPoint: string
    }, ExtArgs["result"]["commentCommercialPoint"]>
    composites: {}
  }

  type CommentCommercialPointGetPayload<S extends boolean | null | undefined | CommentCommercialPointDefaultArgs> = $Result.GetResult<Prisma.$CommentCommercialPointPayload, S>

  type CommentCommercialPointCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CommentCommercialPointFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CommentCommercialPointCountAggregateInputType | true
    }

  export interface CommentCommercialPointDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CommentCommercialPoint'], meta: { name: 'CommentCommercialPoint' } }
    /**
     * Find zero or one CommentCommercialPoint that matches the filter.
     * @param {CommentCommercialPointFindUniqueArgs} args - Arguments to find a CommentCommercialPoint
     * @example
     * // Get one CommentCommercialPoint
     * const commentCommercialPoint = await prisma.commentCommercialPoint.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CommentCommercialPointFindUniqueArgs>(args: SelectSubset<T, CommentCommercialPointFindUniqueArgs<ExtArgs>>): Prisma__CommentCommercialPointClient<$Result.GetResult<Prisma.$CommentCommercialPointPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CommentCommercialPoint that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CommentCommercialPointFindUniqueOrThrowArgs} args - Arguments to find a CommentCommercialPoint
     * @example
     * // Get one CommentCommercialPoint
     * const commentCommercialPoint = await prisma.commentCommercialPoint.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CommentCommercialPointFindUniqueOrThrowArgs>(args: SelectSubset<T, CommentCommercialPointFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CommentCommercialPointClient<$Result.GetResult<Prisma.$CommentCommercialPointPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CommentCommercialPoint that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentCommercialPointFindFirstArgs} args - Arguments to find a CommentCommercialPoint
     * @example
     * // Get one CommentCommercialPoint
     * const commentCommercialPoint = await prisma.commentCommercialPoint.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CommentCommercialPointFindFirstArgs>(args?: SelectSubset<T, CommentCommercialPointFindFirstArgs<ExtArgs>>): Prisma__CommentCommercialPointClient<$Result.GetResult<Prisma.$CommentCommercialPointPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CommentCommercialPoint that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentCommercialPointFindFirstOrThrowArgs} args - Arguments to find a CommentCommercialPoint
     * @example
     * // Get one CommentCommercialPoint
     * const commentCommercialPoint = await prisma.commentCommercialPoint.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CommentCommercialPointFindFirstOrThrowArgs>(args?: SelectSubset<T, CommentCommercialPointFindFirstOrThrowArgs<ExtArgs>>): Prisma__CommentCommercialPointClient<$Result.GetResult<Prisma.$CommentCommercialPointPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CommentCommercialPoints that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentCommercialPointFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CommentCommercialPoints
     * const commentCommercialPoints = await prisma.commentCommercialPoint.findMany()
     * 
     * // Get first 10 CommentCommercialPoints
     * const commentCommercialPoints = await prisma.commentCommercialPoint.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const commentCommercialPointWithIdOnly = await prisma.commentCommercialPoint.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CommentCommercialPointFindManyArgs>(args?: SelectSubset<T, CommentCommercialPointFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentCommercialPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CommentCommercialPoint.
     * @param {CommentCommercialPointCreateArgs} args - Arguments to create a CommentCommercialPoint.
     * @example
     * // Create one CommentCommercialPoint
     * const CommentCommercialPoint = await prisma.commentCommercialPoint.create({
     *   data: {
     *     // ... data to create a CommentCommercialPoint
     *   }
     * })
     * 
     */
    create<T extends CommentCommercialPointCreateArgs>(args: SelectSubset<T, CommentCommercialPointCreateArgs<ExtArgs>>): Prisma__CommentCommercialPointClient<$Result.GetResult<Prisma.$CommentCommercialPointPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CommentCommercialPoints.
     * @param {CommentCommercialPointCreateManyArgs} args - Arguments to create many CommentCommercialPoints.
     * @example
     * // Create many CommentCommercialPoints
     * const commentCommercialPoint = await prisma.commentCommercialPoint.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CommentCommercialPointCreateManyArgs>(args?: SelectSubset<T, CommentCommercialPointCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CommentCommercialPoint.
     * @param {CommentCommercialPointDeleteArgs} args - Arguments to delete one CommentCommercialPoint.
     * @example
     * // Delete one CommentCommercialPoint
     * const CommentCommercialPoint = await prisma.commentCommercialPoint.delete({
     *   where: {
     *     // ... filter to delete one CommentCommercialPoint
     *   }
     * })
     * 
     */
    delete<T extends CommentCommercialPointDeleteArgs>(args: SelectSubset<T, CommentCommercialPointDeleteArgs<ExtArgs>>): Prisma__CommentCommercialPointClient<$Result.GetResult<Prisma.$CommentCommercialPointPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CommentCommercialPoint.
     * @param {CommentCommercialPointUpdateArgs} args - Arguments to update one CommentCommercialPoint.
     * @example
     * // Update one CommentCommercialPoint
     * const commentCommercialPoint = await prisma.commentCommercialPoint.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CommentCommercialPointUpdateArgs>(args: SelectSubset<T, CommentCommercialPointUpdateArgs<ExtArgs>>): Prisma__CommentCommercialPointClient<$Result.GetResult<Prisma.$CommentCommercialPointPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CommentCommercialPoints.
     * @param {CommentCommercialPointDeleteManyArgs} args - Arguments to filter CommentCommercialPoints to delete.
     * @example
     * // Delete a few CommentCommercialPoints
     * const { count } = await prisma.commentCommercialPoint.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CommentCommercialPointDeleteManyArgs>(args?: SelectSubset<T, CommentCommercialPointDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CommentCommercialPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentCommercialPointUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CommentCommercialPoints
     * const commentCommercialPoint = await prisma.commentCommercialPoint.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CommentCommercialPointUpdateManyArgs>(args: SelectSubset<T, CommentCommercialPointUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CommentCommercialPoint.
     * @param {CommentCommercialPointUpsertArgs} args - Arguments to update or create a CommentCommercialPoint.
     * @example
     * // Update or create a CommentCommercialPoint
     * const commentCommercialPoint = await prisma.commentCommercialPoint.upsert({
     *   create: {
     *     // ... data to create a CommentCommercialPoint
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CommentCommercialPoint we want to update
     *   }
     * })
     */
    upsert<T extends CommentCommercialPointUpsertArgs>(args: SelectSubset<T, CommentCommercialPointUpsertArgs<ExtArgs>>): Prisma__CommentCommercialPointClient<$Result.GetResult<Prisma.$CommentCommercialPointPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CommentCommercialPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentCommercialPointCountArgs} args - Arguments to filter CommentCommercialPoints to count.
     * @example
     * // Count the number of CommentCommercialPoints
     * const count = await prisma.commentCommercialPoint.count({
     *   where: {
     *     // ... the filter for the CommentCommercialPoints we want to count
     *   }
     * })
    **/
    count<T extends CommentCommercialPointCountArgs>(
      args?: Subset<T, CommentCommercialPointCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommentCommercialPointCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CommentCommercialPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentCommercialPointAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommentCommercialPointAggregateArgs>(args: Subset<T, CommentCommercialPointAggregateArgs>): Prisma.PrismaPromise<GetCommentCommercialPointAggregateType<T>>

    /**
     * Group by CommentCommercialPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentCommercialPointGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CommentCommercialPointGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CommentCommercialPointGroupByArgs['orderBy'] }
        : { orderBy?: CommentCommercialPointGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CommentCommercialPointGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommentCommercialPointGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CommentCommercialPoint model
   */
  readonly fields: CommentCommercialPointFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CommentCommercialPoint.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CommentCommercialPointClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userClientByClientEmail<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userClientByClientId<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userCommercialPointByCommercialPointId<T extends Ponto_ComercialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_ComercialDefaultArgs<ExtArgs>>): Prisma__Ponto_ComercialClient<$Result.GetResult<Prisma.$Ponto_ComercialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CommentCommercialPoint model
   */
  interface CommentCommercialPointFieldRefs {
    readonly id: FieldRef<"CommentCommercialPoint", 'String'>
    readonly dataPublication: FieldRef<"CommentCommercialPoint", 'DateTime'>
    readonly content: FieldRef<"CommentCommercialPoint", 'String'>
    readonly userClientEmail: FieldRef<"CommentCommercialPoint", 'String'>
    readonly idUserClient: FieldRef<"CommentCommercialPoint", 'String'>
    readonly idCommercialPoint: FieldRef<"CommentCommercialPoint", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CommentCommercialPoint findUnique
   */
  export type CommentCommercialPointFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentCommercialPoint
     */
    select?: CommentCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentCommercialPoint
     */
    omit?: CommentCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which CommentCommercialPoint to fetch.
     */
    where: CommentCommercialPointWhereUniqueInput
  }

  /**
   * CommentCommercialPoint findUniqueOrThrow
   */
  export type CommentCommercialPointFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentCommercialPoint
     */
    select?: CommentCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentCommercialPoint
     */
    omit?: CommentCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which CommentCommercialPoint to fetch.
     */
    where: CommentCommercialPointWhereUniqueInput
  }

  /**
   * CommentCommercialPoint findFirst
   */
  export type CommentCommercialPointFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentCommercialPoint
     */
    select?: CommentCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentCommercialPoint
     */
    omit?: CommentCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which CommentCommercialPoint to fetch.
     */
    where?: CommentCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommentCommercialPoints to fetch.
     */
    orderBy?: CommentCommercialPointOrderByWithRelationInput | CommentCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CommentCommercialPoints.
     */
    cursor?: CommentCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommentCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommentCommercialPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CommentCommercialPoints.
     */
    distinct?: CommentCommercialPointScalarFieldEnum | CommentCommercialPointScalarFieldEnum[]
  }

  /**
   * CommentCommercialPoint findFirstOrThrow
   */
  export type CommentCommercialPointFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentCommercialPoint
     */
    select?: CommentCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentCommercialPoint
     */
    omit?: CommentCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which CommentCommercialPoint to fetch.
     */
    where?: CommentCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommentCommercialPoints to fetch.
     */
    orderBy?: CommentCommercialPointOrderByWithRelationInput | CommentCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CommentCommercialPoints.
     */
    cursor?: CommentCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommentCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommentCommercialPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CommentCommercialPoints.
     */
    distinct?: CommentCommercialPointScalarFieldEnum | CommentCommercialPointScalarFieldEnum[]
  }

  /**
   * CommentCommercialPoint findMany
   */
  export type CommentCommercialPointFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentCommercialPoint
     */
    select?: CommentCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentCommercialPoint
     */
    omit?: CommentCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which CommentCommercialPoints to fetch.
     */
    where?: CommentCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommentCommercialPoints to fetch.
     */
    orderBy?: CommentCommercialPointOrderByWithRelationInput | CommentCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CommentCommercialPoints.
     */
    cursor?: CommentCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommentCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommentCommercialPoints.
     */
    skip?: number
    distinct?: CommentCommercialPointScalarFieldEnum | CommentCommercialPointScalarFieldEnum[]
  }

  /**
   * CommentCommercialPoint create
   */
  export type CommentCommercialPointCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentCommercialPoint
     */
    select?: CommentCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentCommercialPoint
     */
    omit?: CommentCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentCommercialPointInclude<ExtArgs> | null
    /**
     * The data needed to create a CommentCommercialPoint.
     */
    data: XOR<CommentCommercialPointCreateInput, CommentCommercialPointUncheckedCreateInput>
  }

  /**
   * CommentCommercialPoint createMany
   */
  export type CommentCommercialPointCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CommentCommercialPoints.
     */
    data: CommentCommercialPointCreateManyInput | CommentCommercialPointCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CommentCommercialPoint update
   */
  export type CommentCommercialPointUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentCommercialPoint
     */
    select?: CommentCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentCommercialPoint
     */
    omit?: CommentCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentCommercialPointInclude<ExtArgs> | null
    /**
     * The data needed to update a CommentCommercialPoint.
     */
    data: XOR<CommentCommercialPointUpdateInput, CommentCommercialPointUncheckedUpdateInput>
    /**
     * Choose, which CommentCommercialPoint to update.
     */
    where: CommentCommercialPointWhereUniqueInput
  }

  /**
   * CommentCommercialPoint updateMany
   */
  export type CommentCommercialPointUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CommentCommercialPoints.
     */
    data: XOR<CommentCommercialPointUpdateManyMutationInput, CommentCommercialPointUncheckedUpdateManyInput>
    /**
     * Filter which CommentCommercialPoints to update
     */
    where?: CommentCommercialPointWhereInput
    /**
     * Limit how many CommentCommercialPoints to update.
     */
    limit?: number
  }

  /**
   * CommentCommercialPoint upsert
   */
  export type CommentCommercialPointUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentCommercialPoint
     */
    select?: CommentCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentCommercialPoint
     */
    omit?: CommentCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentCommercialPointInclude<ExtArgs> | null
    /**
     * The filter to search for the CommentCommercialPoint to update in case it exists.
     */
    where: CommentCommercialPointWhereUniqueInput
    /**
     * In case the CommentCommercialPoint found by the `where` argument doesn't exist, create a new CommentCommercialPoint with this data.
     */
    create: XOR<CommentCommercialPointCreateInput, CommentCommercialPointUncheckedCreateInput>
    /**
     * In case the CommentCommercialPoint was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CommentCommercialPointUpdateInput, CommentCommercialPointUncheckedUpdateInput>
  }

  /**
   * CommentCommercialPoint delete
   */
  export type CommentCommercialPointDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentCommercialPoint
     */
    select?: CommentCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentCommercialPoint
     */
    omit?: CommentCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentCommercialPointInclude<ExtArgs> | null
    /**
     * Filter which CommentCommercialPoint to delete.
     */
    where: CommentCommercialPointWhereUniqueInput
  }

  /**
   * CommentCommercialPoint deleteMany
   */
  export type CommentCommercialPointDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CommentCommercialPoints to delete
     */
    where?: CommentCommercialPointWhereInput
    /**
     * Limit how many CommentCommercialPoints to delete.
     */
    limit?: number
  }

  /**
   * CommentCommercialPoint without action
   */
  export type CommentCommercialPointDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentCommercialPoint
     */
    select?: CommentCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommentCommercialPoint
     */
    omit?: CommentCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentCommercialPointInclude<ExtArgs> | null
  }


  /**
   * Model AvaliationRoadMap
   */

  export type AggregateAvaliationRoadMap = {
    _count: AvaliationRoadMapCountAggregateOutputType | null
    _avg: AvaliationRoadMapAvgAggregateOutputType | null
    _sum: AvaliationRoadMapSumAggregateOutputType | null
    _min: AvaliationRoadMapMinAggregateOutputType | null
    _max: AvaliationRoadMapMaxAggregateOutputType | null
  }

  export type AvaliationRoadMapAvgAggregateOutputType = {
    avaliation: number | null
  }

  export type AvaliationRoadMapSumAggregateOutputType = {
    avaliation: number | null
  }

  export type AvaliationRoadMapMinAggregateOutputType = {
    id: string | null
    dataPublication: Date | null
    avaliation: number | null
    userClientEmail: string | null
    idUserClient: string | null
    idTravelRoadMap: string | null
  }

  export type AvaliationRoadMapMaxAggregateOutputType = {
    id: string | null
    dataPublication: Date | null
    avaliation: number | null
    userClientEmail: string | null
    idUserClient: string | null
    idTravelRoadMap: string | null
  }

  export type AvaliationRoadMapCountAggregateOutputType = {
    id: number
    dataPublication: number
    avaliation: number
    userClientEmail: number
    idUserClient: number
    idTravelRoadMap: number
    _all: number
  }


  export type AvaliationRoadMapAvgAggregateInputType = {
    avaliation?: true
  }

  export type AvaliationRoadMapSumAggregateInputType = {
    avaliation?: true
  }

  export type AvaliationRoadMapMinAggregateInputType = {
    id?: true
    dataPublication?: true
    avaliation?: true
    userClientEmail?: true
    idUserClient?: true
    idTravelRoadMap?: true
  }

  export type AvaliationRoadMapMaxAggregateInputType = {
    id?: true
    dataPublication?: true
    avaliation?: true
    userClientEmail?: true
    idUserClient?: true
    idTravelRoadMap?: true
  }

  export type AvaliationRoadMapCountAggregateInputType = {
    id?: true
    dataPublication?: true
    avaliation?: true
    userClientEmail?: true
    idUserClient?: true
    idTravelRoadMap?: true
    _all?: true
  }

  export type AvaliationRoadMapAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AvaliationRoadMap to aggregate.
     */
    where?: AvaliationRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AvaliationRoadMaps to fetch.
     */
    orderBy?: AvaliationRoadMapOrderByWithRelationInput | AvaliationRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AvaliationRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AvaliationRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AvaliationRoadMaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AvaliationRoadMaps
    **/
    _count?: true | AvaliationRoadMapCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AvaliationRoadMapAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AvaliationRoadMapSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AvaliationRoadMapMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AvaliationRoadMapMaxAggregateInputType
  }

  export type GetAvaliationRoadMapAggregateType<T extends AvaliationRoadMapAggregateArgs> = {
        [P in keyof T & keyof AggregateAvaliationRoadMap]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAvaliationRoadMap[P]>
      : GetScalarType<T[P], AggregateAvaliationRoadMap[P]>
  }




  export type AvaliationRoadMapGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliationRoadMapWhereInput
    orderBy?: AvaliationRoadMapOrderByWithAggregationInput | AvaliationRoadMapOrderByWithAggregationInput[]
    by: AvaliationRoadMapScalarFieldEnum[] | AvaliationRoadMapScalarFieldEnum
    having?: AvaliationRoadMapScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AvaliationRoadMapCountAggregateInputType | true
    _avg?: AvaliationRoadMapAvgAggregateInputType
    _sum?: AvaliationRoadMapSumAggregateInputType
    _min?: AvaliationRoadMapMinAggregateInputType
    _max?: AvaliationRoadMapMaxAggregateInputType
  }

  export type AvaliationRoadMapGroupByOutputType = {
    id: string
    dataPublication: Date
    avaliation: number
    userClientEmail: string
    idUserClient: string
    idTravelRoadMap: string
    _count: AvaliationRoadMapCountAggregateOutputType | null
    _avg: AvaliationRoadMapAvgAggregateOutputType | null
    _sum: AvaliationRoadMapSumAggregateOutputType | null
    _min: AvaliationRoadMapMinAggregateOutputType | null
    _max: AvaliationRoadMapMaxAggregateOutputType | null
  }

  type GetAvaliationRoadMapGroupByPayload<T extends AvaliationRoadMapGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AvaliationRoadMapGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AvaliationRoadMapGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AvaliationRoadMapGroupByOutputType[P]>
            : GetScalarType<T[P], AvaliationRoadMapGroupByOutputType[P]>
        }
      >
    >


  export type AvaliationRoadMapSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dataPublication?: boolean
    avaliation?: boolean
    userClientEmail?: boolean
    idUserClient?: boolean
    idTravelRoadMap?: boolean
    userClientByEmail?: boolean | User_ClientDefaultArgs<ExtArgs>
    userClientByIdClient?: boolean | User_ClientDefaultArgs<ExtArgs>
    userRoadMapByIdRoadMap?: boolean | Travel_Road_MapDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["avaliationRoadMap"]>



  export type AvaliationRoadMapSelectScalar = {
    id?: boolean
    dataPublication?: boolean
    avaliation?: boolean
    userClientEmail?: boolean
    idUserClient?: boolean
    idTravelRoadMap?: boolean
  }

  export type AvaliationRoadMapOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "dataPublication" | "avaliation" | "userClientEmail" | "idUserClient" | "idTravelRoadMap", ExtArgs["result"]["avaliationRoadMap"]>
  export type AvaliationRoadMapInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userClientByEmail?: boolean | User_ClientDefaultArgs<ExtArgs>
    userClientByIdClient?: boolean | User_ClientDefaultArgs<ExtArgs>
    userRoadMapByIdRoadMap?: boolean | Travel_Road_MapDefaultArgs<ExtArgs>
  }

  export type $AvaliationRoadMapPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AvaliationRoadMap"
    objects: {
      userClientByEmail: Prisma.$User_ClientPayload<ExtArgs>
      userClientByIdClient: Prisma.$User_ClientPayload<ExtArgs>
      userRoadMapByIdRoadMap: Prisma.$Travel_Road_MapPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      dataPublication: Date
      avaliation: number
      userClientEmail: string
      idUserClient: string
      idTravelRoadMap: string
    }, ExtArgs["result"]["avaliationRoadMap"]>
    composites: {}
  }

  type AvaliationRoadMapGetPayload<S extends boolean | null | undefined | AvaliationRoadMapDefaultArgs> = $Result.GetResult<Prisma.$AvaliationRoadMapPayload, S>

  type AvaliationRoadMapCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AvaliationRoadMapFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AvaliationRoadMapCountAggregateInputType | true
    }

  export interface AvaliationRoadMapDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AvaliationRoadMap'], meta: { name: 'AvaliationRoadMap' } }
    /**
     * Find zero or one AvaliationRoadMap that matches the filter.
     * @param {AvaliationRoadMapFindUniqueArgs} args - Arguments to find a AvaliationRoadMap
     * @example
     * // Get one AvaliationRoadMap
     * const avaliationRoadMap = await prisma.avaliationRoadMap.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AvaliationRoadMapFindUniqueArgs>(args: SelectSubset<T, AvaliationRoadMapFindUniqueArgs<ExtArgs>>): Prisma__AvaliationRoadMapClient<$Result.GetResult<Prisma.$AvaliationRoadMapPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AvaliationRoadMap that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AvaliationRoadMapFindUniqueOrThrowArgs} args - Arguments to find a AvaliationRoadMap
     * @example
     * // Get one AvaliationRoadMap
     * const avaliationRoadMap = await prisma.avaliationRoadMap.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AvaliationRoadMapFindUniqueOrThrowArgs>(args: SelectSubset<T, AvaliationRoadMapFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AvaliationRoadMapClient<$Result.GetResult<Prisma.$AvaliationRoadMapPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AvaliationRoadMap that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationRoadMapFindFirstArgs} args - Arguments to find a AvaliationRoadMap
     * @example
     * // Get one AvaliationRoadMap
     * const avaliationRoadMap = await prisma.avaliationRoadMap.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AvaliationRoadMapFindFirstArgs>(args?: SelectSubset<T, AvaliationRoadMapFindFirstArgs<ExtArgs>>): Prisma__AvaliationRoadMapClient<$Result.GetResult<Prisma.$AvaliationRoadMapPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AvaliationRoadMap that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationRoadMapFindFirstOrThrowArgs} args - Arguments to find a AvaliationRoadMap
     * @example
     * // Get one AvaliationRoadMap
     * const avaliationRoadMap = await prisma.avaliationRoadMap.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AvaliationRoadMapFindFirstOrThrowArgs>(args?: SelectSubset<T, AvaliationRoadMapFindFirstOrThrowArgs<ExtArgs>>): Prisma__AvaliationRoadMapClient<$Result.GetResult<Prisma.$AvaliationRoadMapPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AvaliationRoadMaps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationRoadMapFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AvaliationRoadMaps
     * const avaliationRoadMaps = await prisma.avaliationRoadMap.findMany()
     * 
     * // Get first 10 AvaliationRoadMaps
     * const avaliationRoadMaps = await prisma.avaliationRoadMap.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const avaliationRoadMapWithIdOnly = await prisma.avaliationRoadMap.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AvaliationRoadMapFindManyArgs>(args?: SelectSubset<T, AvaliationRoadMapFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliationRoadMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AvaliationRoadMap.
     * @param {AvaliationRoadMapCreateArgs} args - Arguments to create a AvaliationRoadMap.
     * @example
     * // Create one AvaliationRoadMap
     * const AvaliationRoadMap = await prisma.avaliationRoadMap.create({
     *   data: {
     *     // ... data to create a AvaliationRoadMap
     *   }
     * })
     * 
     */
    create<T extends AvaliationRoadMapCreateArgs>(args: SelectSubset<T, AvaliationRoadMapCreateArgs<ExtArgs>>): Prisma__AvaliationRoadMapClient<$Result.GetResult<Prisma.$AvaliationRoadMapPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AvaliationRoadMaps.
     * @param {AvaliationRoadMapCreateManyArgs} args - Arguments to create many AvaliationRoadMaps.
     * @example
     * // Create many AvaliationRoadMaps
     * const avaliationRoadMap = await prisma.avaliationRoadMap.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AvaliationRoadMapCreateManyArgs>(args?: SelectSubset<T, AvaliationRoadMapCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a AvaliationRoadMap.
     * @param {AvaliationRoadMapDeleteArgs} args - Arguments to delete one AvaliationRoadMap.
     * @example
     * // Delete one AvaliationRoadMap
     * const AvaliationRoadMap = await prisma.avaliationRoadMap.delete({
     *   where: {
     *     // ... filter to delete one AvaliationRoadMap
     *   }
     * })
     * 
     */
    delete<T extends AvaliationRoadMapDeleteArgs>(args: SelectSubset<T, AvaliationRoadMapDeleteArgs<ExtArgs>>): Prisma__AvaliationRoadMapClient<$Result.GetResult<Prisma.$AvaliationRoadMapPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AvaliationRoadMap.
     * @param {AvaliationRoadMapUpdateArgs} args - Arguments to update one AvaliationRoadMap.
     * @example
     * // Update one AvaliationRoadMap
     * const avaliationRoadMap = await prisma.avaliationRoadMap.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AvaliationRoadMapUpdateArgs>(args: SelectSubset<T, AvaliationRoadMapUpdateArgs<ExtArgs>>): Prisma__AvaliationRoadMapClient<$Result.GetResult<Prisma.$AvaliationRoadMapPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AvaliationRoadMaps.
     * @param {AvaliationRoadMapDeleteManyArgs} args - Arguments to filter AvaliationRoadMaps to delete.
     * @example
     * // Delete a few AvaliationRoadMaps
     * const { count } = await prisma.avaliationRoadMap.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AvaliationRoadMapDeleteManyArgs>(args?: SelectSubset<T, AvaliationRoadMapDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AvaliationRoadMaps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationRoadMapUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AvaliationRoadMaps
     * const avaliationRoadMap = await prisma.avaliationRoadMap.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AvaliationRoadMapUpdateManyArgs>(args: SelectSubset<T, AvaliationRoadMapUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AvaliationRoadMap.
     * @param {AvaliationRoadMapUpsertArgs} args - Arguments to update or create a AvaliationRoadMap.
     * @example
     * // Update or create a AvaliationRoadMap
     * const avaliationRoadMap = await prisma.avaliationRoadMap.upsert({
     *   create: {
     *     // ... data to create a AvaliationRoadMap
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AvaliationRoadMap we want to update
     *   }
     * })
     */
    upsert<T extends AvaliationRoadMapUpsertArgs>(args: SelectSubset<T, AvaliationRoadMapUpsertArgs<ExtArgs>>): Prisma__AvaliationRoadMapClient<$Result.GetResult<Prisma.$AvaliationRoadMapPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AvaliationRoadMaps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationRoadMapCountArgs} args - Arguments to filter AvaliationRoadMaps to count.
     * @example
     * // Count the number of AvaliationRoadMaps
     * const count = await prisma.avaliationRoadMap.count({
     *   where: {
     *     // ... the filter for the AvaliationRoadMaps we want to count
     *   }
     * })
    **/
    count<T extends AvaliationRoadMapCountArgs>(
      args?: Subset<T, AvaliationRoadMapCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AvaliationRoadMapCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AvaliationRoadMap.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationRoadMapAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AvaliationRoadMapAggregateArgs>(args: Subset<T, AvaliationRoadMapAggregateArgs>): Prisma.PrismaPromise<GetAvaliationRoadMapAggregateType<T>>

    /**
     * Group by AvaliationRoadMap.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationRoadMapGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AvaliationRoadMapGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AvaliationRoadMapGroupByArgs['orderBy'] }
        : { orderBy?: AvaliationRoadMapGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AvaliationRoadMapGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAvaliationRoadMapGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AvaliationRoadMap model
   */
  readonly fields: AvaliationRoadMapFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AvaliationRoadMap.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AvaliationRoadMapClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userClientByEmail<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userClientByIdClient<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userRoadMapByIdRoadMap<T extends Travel_Road_MapDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Travel_Road_MapDefaultArgs<ExtArgs>>): Prisma__Travel_Road_MapClient<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AvaliationRoadMap model
   */
  interface AvaliationRoadMapFieldRefs {
    readonly id: FieldRef<"AvaliationRoadMap", 'String'>
    readonly dataPublication: FieldRef<"AvaliationRoadMap", 'DateTime'>
    readonly avaliation: FieldRef<"AvaliationRoadMap", 'Int'>
    readonly userClientEmail: FieldRef<"AvaliationRoadMap", 'String'>
    readonly idUserClient: FieldRef<"AvaliationRoadMap", 'String'>
    readonly idTravelRoadMap: FieldRef<"AvaliationRoadMap", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AvaliationRoadMap findUnique
   */
  export type AvaliationRoadMapFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationRoadMap
     */
    select?: AvaliationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationRoadMap
     */
    omit?: AvaliationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which AvaliationRoadMap to fetch.
     */
    where: AvaliationRoadMapWhereUniqueInput
  }

  /**
   * AvaliationRoadMap findUniqueOrThrow
   */
  export type AvaliationRoadMapFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationRoadMap
     */
    select?: AvaliationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationRoadMap
     */
    omit?: AvaliationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which AvaliationRoadMap to fetch.
     */
    where: AvaliationRoadMapWhereUniqueInput
  }

  /**
   * AvaliationRoadMap findFirst
   */
  export type AvaliationRoadMapFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationRoadMap
     */
    select?: AvaliationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationRoadMap
     */
    omit?: AvaliationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which AvaliationRoadMap to fetch.
     */
    where?: AvaliationRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AvaliationRoadMaps to fetch.
     */
    orderBy?: AvaliationRoadMapOrderByWithRelationInput | AvaliationRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AvaliationRoadMaps.
     */
    cursor?: AvaliationRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AvaliationRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AvaliationRoadMaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AvaliationRoadMaps.
     */
    distinct?: AvaliationRoadMapScalarFieldEnum | AvaliationRoadMapScalarFieldEnum[]
  }

  /**
   * AvaliationRoadMap findFirstOrThrow
   */
  export type AvaliationRoadMapFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationRoadMap
     */
    select?: AvaliationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationRoadMap
     */
    omit?: AvaliationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which AvaliationRoadMap to fetch.
     */
    where?: AvaliationRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AvaliationRoadMaps to fetch.
     */
    orderBy?: AvaliationRoadMapOrderByWithRelationInput | AvaliationRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AvaliationRoadMaps.
     */
    cursor?: AvaliationRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AvaliationRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AvaliationRoadMaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AvaliationRoadMaps.
     */
    distinct?: AvaliationRoadMapScalarFieldEnum | AvaliationRoadMapScalarFieldEnum[]
  }

  /**
   * AvaliationRoadMap findMany
   */
  export type AvaliationRoadMapFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationRoadMap
     */
    select?: AvaliationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationRoadMap
     */
    omit?: AvaliationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which AvaliationRoadMaps to fetch.
     */
    where?: AvaliationRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AvaliationRoadMaps to fetch.
     */
    orderBy?: AvaliationRoadMapOrderByWithRelationInput | AvaliationRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AvaliationRoadMaps.
     */
    cursor?: AvaliationRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AvaliationRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AvaliationRoadMaps.
     */
    skip?: number
    distinct?: AvaliationRoadMapScalarFieldEnum | AvaliationRoadMapScalarFieldEnum[]
  }

  /**
   * AvaliationRoadMap create
   */
  export type AvaliationRoadMapCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationRoadMap
     */
    select?: AvaliationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationRoadMap
     */
    omit?: AvaliationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationRoadMapInclude<ExtArgs> | null
    /**
     * The data needed to create a AvaliationRoadMap.
     */
    data: XOR<AvaliationRoadMapCreateInput, AvaliationRoadMapUncheckedCreateInput>
  }

  /**
   * AvaliationRoadMap createMany
   */
  export type AvaliationRoadMapCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AvaliationRoadMaps.
     */
    data: AvaliationRoadMapCreateManyInput | AvaliationRoadMapCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AvaliationRoadMap update
   */
  export type AvaliationRoadMapUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationRoadMap
     */
    select?: AvaliationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationRoadMap
     */
    omit?: AvaliationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationRoadMapInclude<ExtArgs> | null
    /**
     * The data needed to update a AvaliationRoadMap.
     */
    data: XOR<AvaliationRoadMapUpdateInput, AvaliationRoadMapUncheckedUpdateInput>
    /**
     * Choose, which AvaliationRoadMap to update.
     */
    where: AvaliationRoadMapWhereUniqueInput
  }

  /**
   * AvaliationRoadMap updateMany
   */
  export type AvaliationRoadMapUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AvaliationRoadMaps.
     */
    data: XOR<AvaliationRoadMapUpdateManyMutationInput, AvaliationRoadMapUncheckedUpdateManyInput>
    /**
     * Filter which AvaliationRoadMaps to update
     */
    where?: AvaliationRoadMapWhereInput
    /**
     * Limit how many AvaliationRoadMaps to update.
     */
    limit?: number
  }

  /**
   * AvaliationRoadMap upsert
   */
  export type AvaliationRoadMapUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationRoadMap
     */
    select?: AvaliationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationRoadMap
     */
    omit?: AvaliationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationRoadMapInclude<ExtArgs> | null
    /**
     * The filter to search for the AvaliationRoadMap to update in case it exists.
     */
    where: AvaliationRoadMapWhereUniqueInput
    /**
     * In case the AvaliationRoadMap found by the `where` argument doesn't exist, create a new AvaliationRoadMap with this data.
     */
    create: XOR<AvaliationRoadMapCreateInput, AvaliationRoadMapUncheckedCreateInput>
    /**
     * In case the AvaliationRoadMap was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AvaliationRoadMapUpdateInput, AvaliationRoadMapUncheckedUpdateInput>
  }

  /**
   * AvaliationRoadMap delete
   */
  export type AvaliationRoadMapDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationRoadMap
     */
    select?: AvaliationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationRoadMap
     */
    omit?: AvaliationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationRoadMapInclude<ExtArgs> | null
    /**
     * Filter which AvaliationRoadMap to delete.
     */
    where: AvaliationRoadMapWhereUniqueInput
  }

  /**
   * AvaliationRoadMap deleteMany
   */
  export type AvaliationRoadMapDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AvaliationRoadMaps to delete
     */
    where?: AvaliationRoadMapWhereInput
    /**
     * Limit how many AvaliationRoadMaps to delete.
     */
    limit?: number
  }

  /**
   * AvaliationRoadMap without action
   */
  export type AvaliationRoadMapDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationRoadMap
     */
    select?: AvaliationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationRoadMap
     */
    omit?: AvaliationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationRoadMapInclude<ExtArgs> | null
  }


  /**
   * Model AvaliationTouristPoint
   */

  export type AggregateAvaliationTouristPoint = {
    _count: AvaliationTouristPointCountAggregateOutputType | null
    _avg: AvaliationTouristPointAvgAggregateOutputType | null
    _sum: AvaliationTouristPointSumAggregateOutputType | null
    _min: AvaliationTouristPointMinAggregateOutputType | null
    _max: AvaliationTouristPointMaxAggregateOutputType | null
  }

  export type AvaliationTouristPointAvgAggregateOutputType = {
    avaliation: number | null
  }

  export type AvaliationTouristPointSumAggregateOutputType = {
    avaliation: number | null
  }

  export type AvaliationTouristPointMinAggregateOutputType = {
    id: string | null
    dataPublication: Date | null
    avaliation: number | null
    userClientEmail: string | null
    idUserClient: string | null
    idTouristPoint: string | null
  }

  export type AvaliationTouristPointMaxAggregateOutputType = {
    id: string | null
    dataPublication: Date | null
    avaliation: number | null
    userClientEmail: string | null
    idUserClient: string | null
    idTouristPoint: string | null
  }

  export type AvaliationTouristPointCountAggregateOutputType = {
    id: number
    dataPublication: number
    avaliation: number
    userClientEmail: number
    idUserClient: number
    idTouristPoint: number
    _all: number
  }


  export type AvaliationTouristPointAvgAggregateInputType = {
    avaliation?: true
  }

  export type AvaliationTouristPointSumAggregateInputType = {
    avaliation?: true
  }

  export type AvaliationTouristPointMinAggregateInputType = {
    id?: true
    dataPublication?: true
    avaliation?: true
    userClientEmail?: true
    idUserClient?: true
    idTouristPoint?: true
  }

  export type AvaliationTouristPointMaxAggregateInputType = {
    id?: true
    dataPublication?: true
    avaliation?: true
    userClientEmail?: true
    idUserClient?: true
    idTouristPoint?: true
  }

  export type AvaliationTouristPointCountAggregateInputType = {
    id?: true
    dataPublication?: true
    avaliation?: true
    userClientEmail?: true
    idUserClient?: true
    idTouristPoint?: true
    _all?: true
  }

  export type AvaliationTouristPointAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AvaliationTouristPoint to aggregate.
     */
    where?: AvaliationTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AvaliationTouristPoints to fetch.
     */
    orderBy?: AvaliationTouristPointOrderByWithRelationInput | AvaliationTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AvaliationTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AvaliationTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AvaliationTouristPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AvaliationTouristPoints
    **/
    _count?: true | AvaliationTouristPointCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AvaliationTouristPointAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AvaliationTouristPointSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AvaliationTouristPointMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AvaliationTouristPointMaxAggregateInputType
  }

  export type GetAvaliationTouristPointAggregateType<T extends AvaliationTouristPointAggregateArgs> = {
        [P in keyof T & keyof AggregateAvaliationTouristPoint]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAvaliationTouristPoint[P]>
      : GetScalarType<T[P], AggregateAvaliationTouristPoint[P]>
  }




  export type AvaliationTouristPointGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliationTouristPointWhereInput
    orderBy?: AvaliationTouristPointOrderByWithAggregationInput | AvaliationTouristPointOrderByWithAggregationInput[]
    by: AvaliationTouristPointScalarFieldEnum[] | AvaliationTouristPointScalarFieldEnum
    having?: AvaliationTouristPointScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AvaliationTouristPointCountAggregateInputType | true
    _avg?: AvaliationTouristPointAvgAggregateInputType
    _sum?: AvaliationTouristPointSumAggregateInputType
    _min?: AvaliationTouristPointMinAggregateInputType
    _max?: AvaliationTouristPointMaxAggregateInputType
  }

  export type AvaliationTouristPointGroupByOutputType = {
    id: string
    dataPublication: Date
    avaliation: number
    userClientEmail: string
    idUserClient: string
    idTouristPoint: string
    _count: AvaliationTouristPointCountAggregateOutputType | null
    _avg: AvaliationTouristPointAvgAggregateOutputType | null
    _sum: AvaliationTouristPointSumAggregateOutputType | null
    _min: AvaliationTouristPointMinAggregateOutputType | null
    _max: AvaliationTouristPointMaxAggregateOutputType | null
  }

  type GetAvaliationTouristPointGroupByPayload<T extends AvaliationTouristPointGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AvaliationTouristPointGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AvaliationTouristPointGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AvaliationTouristPointGroupByOutputType[P]>
            : GetScalarType<T[P], AvaliationTouristPointGroupByOutputType[P]>
        }
      >
    >


  export type AvaliationTouristPointSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dataPublication?: boolean
    avaliation?: boolean
    userClientEmail?: boolean
    idUserClient?: boolean
    idTouristPoint?: boolean
    userClientByEmail?: boolean | User_ClientDefaultArgs<ExtArgs>
    userClientByIdClient?: boolean | User_ClientDefaultArgs<ExtArgs>
    userTouristPointByIdTouristPoint?: boolean | Ponto_TuristicoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["avaliationTouristPoint"]>



  export type AvaliationTouristPointSelectScalar = {
    id?: boolean
    dataPublication?: boolean
    avaliation?: boolean
    userClientEmail?: boolean
    idUserClient?: boolean
    idTouristPoint?: boolean
  }

  export type AvaliationTouristPointOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "dataPublication" | "avaliation" | "userClientEmail" | "idUserClient" | "idTouristPoint", ExtArgs["result"]["avaliationTouristPoint"]>
  export type AvaliationTouristPointInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userClientByEmail?: boolean | User_ClientDefaultArgs<ExtArgs>
    userClientByIdClient?: boolean | User_ClientDefaultArgs<ExtArgs>
    userTouristPointByIdTouristPoint?: boolean | Ponto_TuristicoDefaultArgs<ExtArgs>
  }

  export type $AvaliationTouristPointPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AvaliationTouristPoint"
    objects: {
      userClientByEmail: Prisma.$User_ClientPayload<ExtArgs>
      userClientByIdClient: Prisma.$User_ClientPayload<ExtArgs>
      userTouristPointByIdTouristPoint: Prisma.$Ponto_TuristicoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      dataPublication: Date
      avaliation: number
      userClientEmail: string
      idUserClient: string
      idTouristPoint: string
    }, ExtArgs["result"]["avaliationTouristPoint"]>
    composites: {}
  }

  type AvaliationTouristPointGetPayload<S extends boolean | null | undefined | AvaliationTouristPointDefaultArgs> = $Result.GetResult<Prisma.$AvaliationTouristPointPayload, S>

  type AvaliationTouristPointCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AvaliationTouristPointFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AvaliationTouristPointCountAggregateInputType | true
    }

  export interface AvaliationTouristPointDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AvaliationTouristPoint'], meta: { name: 'AvaliationTouristPoint' } }
    /**
     * Find zero or one AvaliationTouristPoint that matches the filter.
     * @param {AvaliationTouristPointFindUniqueArgs} args - Arguments to find a AvaliationTouristPoint
     * @example
     * // Get one AvaliationTouristPoint
     * const avaliationTouristPoint = await prisma.avaliationTouristPoint.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AvaliationTouristPointFindUniqueArgs>(args: SelectSubset<T, AvaliationTouristPointFindUniqueArgs<ExtArgs>>): Prisma__AvaliationTouristPointClient<$Result.GetResult<Prisma.$AvaliationTouristPointPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AvaliationTouristPoint that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AvaliationTouristPointFindUniqueOrThrowArgs} args - Arguments to find a AvaliationTouristPoint
     * @example
     * // Get one AvaliationTouristPoint
     * const avaliationTouristPoint = await prisma.avaliationTouristPoint.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AvaliationTouristPointFindUniqueOrThrowArgs>(args: SelectSubset<T, AvaliationTouristPointFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AvaliationTouristPointClient<$Result.GetResult<Prisma.$AvaliationTouristPointPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AvaliationTouristPoint that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationTouristPointFindFirstArgs} args - Arguments to find a AvaliationTouristPoint
     * @example
     * // Get one AvaliationTouristPoint
     * const avaliationTouristPoint = await prisma.avaliationTouristPoint.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AvaliationTouristPointFindFirstArgs>(args?: SelectSubset<T, AvaliationTouristPointFindFirstArgs<ExtArgs>>): Prisma__AvaliationTouristPointClient<$Result.GetResult<Prisma.$AvaliationTouristPointPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AvaliationTouristPoint that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationTouristPointFindFirstOrThrowArgs} args - Arguments to find a AvaliationTouristPoint
     * @example
     * // Get one AvaliationTouristPoint
     * const avaliationTouristPoint = await prisma.avaliationTouristPoint.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AvaliationTouristPointFindFirstOrThrowArgs>(args?: SelectSubset<T, AvaliationTouristPointFindFirstOrThrowArgs<ExtArgs>>): Prisma__AvaliationTouristPointClient<$Result.GetResult<Prisma.$AvaliationTouristPointPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AvaliationTouristPoints that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationTouristPointFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AvaliationTouristPoints
     * const avaliationTouristPoints = await prisma.avaliationTouristPoint.findMany()
     * 
     * // Get first 10 AvaliationTouristPoints
     * const avaliationTouristPoints = await prisma.avaliationTouristPoint.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const avaliationTouristPointWithIdOnly = await prisma.avaliationTouristPoint.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AvaliationTouristPointFindManyArgs>(args?: SelectSubset<T, AvaliationTouristPointFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliationTouristPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AvaliationTouristPoint.
     * @param {AvaliationTouristPointCreateArgs} args - Arguments to create a AvaliationTouristPoint.
     * @example
     * // Create one AvaliationTouristPoint
     * const AvaliationTouristPoint = await prisma.avaliationTouristPoint.create({
     *   data: {
     *     // ... data to create a AvaliationTouristPoint
     *   }
     * })
     * 
     */
    create<T extends AvaliationTouristPointCreateArgs>(args: SelectSubset<T, AvaliationTouristPointCreateArgs<ExtArgs>>): Prisma__AvaliationTouristPointClient<$Result.GetResult<Prisma.$AvaliationTouristPointPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AvaliationTouristPoints.
     * @param {AvaliationTouristPointCreateManyArgs} args - Arguments to create many AvaliationTouristPoints.
     * @example
     * // Create many AvaliationTouristPoints
     * const avaliationTouristPoint = await prisma.avaliationTouristPoint.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AvaliationTouristPointCreateManyArgs>(args?: SelectSubset<T, AvaliationTouristPointCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a AvaliationTouristPoint.
     * @param {AvaliationTouristPointDeleteArgs} args - Arguments to delete one AvaliationTouristPoint.
     * @example
     * // Delete one AvaliationTouristPoint
     * const AvaliationTouristPoint = await prisma.avaliationTouristPoint.delete({
     *   where: {
     *     // ... filter to delete one AvaliationTouristPoint
     *   }
     * })
     * 
     */
    delete<T extends AvaliationTouristPointDeleteArgs>(args: SelectSubset<T, AvaliationTouristPointDeleteArgs<ExtArgs>>): Prisma__AvaliationTouristPointClient<$Result.GetResult<Prisma.$AvaliationTouristPointPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AvaliationTouristPoint.
     * @param {AvaliationTouristPointUpdateArgs} args - Arguments to update one AvaliationTouristPoint.
     * @example
     * // Update one AvaliationTouristPoint
     * const avaliationTouristPoint = await prisma.avaliationTouristPoint.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AvaliationTouristPointUpdateArgs>(args: SelectSubset<T, AvaliationTouristPointUpdateArgs<ExtArgs>>): Prisma__AvaliationTouristPointClient<$Result.GetResult<Prisma.$AvaliationTouristPointPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AvaliationTouristPoints.
     * @param {AvaliationTouristPointDeleteManyArgs} args - Arguments to filter AvaliationTouristPoints to delete.
     * @example
     * // Delete a few AvaliationTouristPoints
     * const { count } = await prisma.avaliationTouristPoint.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AvaliationTouristPointDeleteManyArgs>(args?: SelectSubset<T, AvaliationTouristPointDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AvaliationTouristPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationTouristPointUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AvaliationTouristPoints
     * const avaliationTouristPoint = await prisma.avaliationTouristPoint.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AvaliationTouristPointUpdateManyArgs>(args: SelectSubset<T, AvaliationTouristPointUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AvaliationTouristPoint.
     * @param {AvaliationTouristPointUpsertArgs} args - Arguments to update or create a AvaliationTouristPoint.
     * @example
     * // Update or create a AvaliationTouristPoint
     * const avaliationTouristPoint = await prisma.avaliationTouristPoint.upsert({
     *   create: {
     *     // ... data to create a AvaliationTouristPoint
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AvaliationTouristPoint we want to update
     *   }
     * })
     */
    upsert<T extends AvaliationTouristPointUpsertArgs>(args: SelectSubset<T, AvaliationTouristPointUpsertArgs<ExtArgs>>): Prisma__AvaliationTouristPointClient<$Result.GetResult<Prisma.$AvaliationTouristPointPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AvaliationTouristPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationTouristPointCountArgs} args - Arguments to filter AvaliationTouristPoints to count.
     * @example
     * // Count the number of AvaliationTouristPoints
     * const count = await prisma.avaliationTouristPoint.count({
     *   where: {
     *     // ... the filter for the AvaliationTouristPoints we want to count
     *   }
     * })
    **/
    count<T extends AvaliationTouristPointCountArgs>(
      args?: Subset<T, AvaliationTouristPointCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AvaliationTouristPointCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AvaliationTouristPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationTouristPointAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AvaliationTouristPointAggregateArgs>(args: Subset<T, AvaliationTouristPointAggregateArgs>): Prisma.PrismaPromise<GetAvaliationTouristPointAggregateType<T>>

    /**
     * Group by AvaliationTouristPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationTouristPointGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AvaliationTouristPointGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AvaliationTouristPointGroupByArgs['orderBy'] }
        : { orderBy?: AvaliationTouristPointGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AvaliationTouristPointGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAvaliationTouristPointGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AvaliationTouristPoint model
   */
  readonly fields: AvaliationTouristPointFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AvaliationTouristPoint.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AvaliationTouristPointClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userClientByEmail<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userClientByIdClient<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userTouristPointByIdTouristPoint<T extends Ponto_TuristicoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_TuristicoDefaultArgs<ExtArgs>>): Prisma__Ponto_TuristicoClient<$Result.GetResult<Prisma.$Ponto_TuristicoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AvaliationTouristPoint model
   */
  interface AvaliationTouristPointFieldRefs {
    readonly id: FieldRef<"AvaliationTouristPoint", 'String'>
    readonly dataPublication: FieldRef<"AvaliationTouristPoint", 'DateTime'>
    readonly avaliation: FieldRef<"AvaliationTouristPoint", 'Int'>
    readonly userClientEmail: FieldRef<"AvaliationTouristPoint", 'String'>
    readonly idUserClient: FieldRef<"AvaliationTouristPoint", 'String'>
    readonly idTouristPoint: FieldRef<"AvaliationTouristPoint", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AvaliationTouristPoint findUnique
   */
  export type AvaliationTouristPointFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationTouristPoint
     */
    select?: AvaliationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationTouristPoint
     */
    omit?: AvaliationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which AvaliationTouristPoint to fetch.
     */
    where: AvaliationTouristPointWhereUniqueInput
  }

  /**
   * AvaliationTouristPoint findUniqueOrThrow
   */
  export type AvaliationTouristPointFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationTouristPoint
     */
    select?: AvaliationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationTouristPoint
     */
    omit?: AvaliationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which AvaliationTouristPoint to fetch.
     */
    where: AvaliationTouristPointWhereUniqueInput
  }

  /**
   * AvaliationTouristPoint findFirst
   */
  export type AvaliationTouristPointFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationTouristPoint
     */
    select?: AvaliationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationTouristPoint
     */
    omit?: AvaliationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which AvaliationTouristPoint to fetch.
     */
    where?: AvaliationTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AvaliationTouristPoints to fetch.
     */
    orderBy?: AvaliationTouristPointOrderByWithRelationInput | AvaliationTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AvaliationTouristPoints.
     */
    cursor?: AvaliationTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AvaliationTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AvaliationTouristPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AvaliationTouristPoints.
     */
    distinct?: AvaliationTouristPointScalarFieldEnum | AvaliationTouristPointScalarFieldEnum[]
  }

  /**
   * AvaliationTouristPoint findFirstOrThrow
   */
  export type AvaliationTouristPointFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationTouristPoint
     */
    select?: AvaliationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationTouristPoint
     */
    omit?: AvaliationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which AvaliationTouristPoint to fetch.
     */
    where?: AvaliationTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AvaliationTouristPoints to fetch.
     */
    orderBy?: AvaliationTouristPointOrderByWithRelationInput | AvaliationTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AvaliationTouristPoints.
     */
    cursor?: AvaliationTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AvaliationTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AvaliationTouristPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AvaliationTouristPoints.
     */
    distinct?: AvaliationTouristPointScalarFieldEnum | AvaliationTouristPointScalarFieldEnum[]
  }

  /**
   * AvaliationTouristPoint findMany
   */
  export type AvaliationTouristPointFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationTouristPoint
     */
    select?: AvaliationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationTouristPoint
     */
    omit?: AvaliationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which AvaliationTouristPoints to fetch.
     */
    where?: AvaliationTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AvaliationTouristPoints to fetch.
     */
    orderBy?: AvaliationTouristPointOrderByWithRelationInput | AvaliationTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AvaliationTouristPoints.
     */
    cursor?: AvaliationTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AvaliationTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AvaliationTouristPoints.
     */
    skip?: number
    distinct?: AvaliationTouristPointScalarFieldEnum | AvaliationTouristPointScalarFieldEnum[]
  }

  /**
   * AvaliationTouristPoint create
   */
  export type AvaliationTouristPointCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationTouristPoint
     */
    select?: AvaliationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationTouristPoint
     */
    omit?: AvaliationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationTouristPointInclude<ExtArgs> | null
    /**
     * The data needed to create a AvaliationTouristPoint.
     */
    data: XOR<AvaliationTouristPointCreateInput, AvaliationTouristPointUncheckedCreateInput>
  }

  /**
   * AvaliationTouristPoint createMany
   */
  export type AvaliationTouristPointCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AvaliationTouristPoints.
     */
    data: AvaliationTouristPointCreateManyInput | AvaliationTouristPointCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AvaliationTouristPoint update
   */
  export type AvaliationTouristPointUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationTouristPoint
     */
    select?: AvaliationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationTouristPoint
     */
    omit?: AvaliationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationTouristPointInclude<ExtArgs> | null
    /**
     * The data needed to update a AvaliationTouristPoint.
     */
    data: XOR<AvaliationTouristPointUpdateInput, AvaliationTouristPointUncheckedUpdateInput>
    /**
     * Choose, which AvaliationTouristPoint to update.
     */
    where: AvaliationTouristPointWhereUniqueInput
  }

  /**
   * AvaliationTouristPoint updateMany
   */
  export type AvaliationTouristPointUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AvaliationTouristPoints.
     */
    data: XOR<AvaliationTouristPointUpdateManyMutationInput, AvaliationTouristPointUncheckedUpdateManyInput>
    /**
     * Filter which AvaliationTouristPoints to update
     */
    where?: AvaliationTouristPointWhereInput
    /**
     * Limit how many AvaliationTouristPoints to update.
     */
    limit?: number
  }

  /**
   * AvaliationTouristPoint upsert
   */
  export type AvaliationTouristPointUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationTouristPoint
     */
    select?: AvaliationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationTouristPoint
     */
    omit?: AvaliationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationTouristPointInclude<ExtArgs> | null
    /**
     * The filter to search for the AvaliationTouristPoint to update in case it exists.
     */
    where: AvaliationTouristPointWhereUniqueInput
    /**
     * In case the AvaliationTouristPoint found by the `where` argument doesn't exist, create a new AvaliationTouristPoint with this data.
     */
    create: XOR<AvaliationTouristPointCreateInput, AvaliationTouristPointUncheckedCreateInput>
    /**
     * In case the AvaliationTouristPoint was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AvaliationTouristPointUpdateInput, AvaliationTouristPointUncheckedUpdateInput>
  }

  /**
   * AvaliationTouristPoint delete
   */
  export type AvaliationTouristPointDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationTouristPoint
     */
    select?: AvaliationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationTouristPoint
     */
    omit?: AvaliationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationTouristPointInclude<ExtArgs> | null
    /**
     * Filter which AvaliationTouristPoint to delete.
     */
    where: AvaliationTouristPointWhereUniqueInput
  }

  /**
   * AvaliationTouristPoint deleteMany
   */
  export type AvaliationTouristPointDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AvaliationTouristPoints to delete
     */
    where?: AvaliationTouristPointWhereInput
    /**
     * Limit how many AvaliationTouristPoints to delete.
     */
    limit?: number
  }

  /**
   * AvaliationTouristPoint without action
   */
  export type AvaliationTouristPointDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationTouristPoint
     */
    select?: AvaliationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationTouristPoint
     */
    omit?: AvaliationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationTouristPointInclude<ExtArgs> | null
  }


  /**
   * Model AvaliationCommercialPoint
   */

  export type AggregateAvaliationCommercialPoint = {
    _count: AvaliationCommercialPointCountAggregateOutputType | null
    _avg: AvaliationCommercialPointAvgAggregateOutputType | null
    _sum: AvaliationCommercialPointSumAggregateOutputType | null
    _min: AvaliationCommercialPointMinAggregateOutputType | null
    _max: AvaliationCommercialPointMaxAggregateOutputType | null
  }

  export type AvaliationCommercialPointAvgAggregateOutputType = {
    avaliation: number | null
  }

  export type AvaliationCommercialPointSumAggregateOutputType = {
    avaliation: number | null
  }

  export type AvaliationCommercialPointMinAggregateOutputType = {
    id: string | null
    dataPublication: Date | null
    avaliation: number | null
    userClientEmail: string | null
    idUserClient: string | null
    idCommercialPoint: string | null
  }

  export type AvaliationCommercialPointMaxAggregateOutputType = {
    id: string | null
    dataPublication: Date | null
    avaliation: number | null
    userClientEmail: string | null
    idUserClient: string | null
    idCommercialPoint: string | null
  }

  export type AvaliationCommercialPointCountAggregateOutputType = {
    id: number
    dataPublication: number
    avaliation: number
    userClientEmail: number
    idUserClient: number
    idCommercialPoint: number
    _all: number
  }


  export type AvaliationCommercialPointAvgAggregateInputType = {
    avaliation?: true
  }

  export type AvaliationCommercialPointSumAggregateInputType = {
    avaliation?: true
  }

  export type AvaliationCommercialPointMinAggregateInputType = {
    id?: true
    dataPublication?: true
    avaliation?: true
    userClientEmail?: true
    idUserClient?: true
    idCommercialPoint?: true
  }

  export type AvaliationCommercialPointMaxAggregateInputType = {
    id?: true
    dataPublication?: true
    avaliation?: true
    userClientEmail?: true
    idUserClient?: true
    idCommercialPoint?: true
  }

  export type AvaliationCommercialPointCountAggregateInputType = {
    id?: true
    dataPublication?: true
    avaliation?: true
    userClientEmail?: true
    idUserClient?: true
    idCommercialPoint?: true
    _all?: true
  }

  export type AvaliationCommercialPointAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AvaliationCommercialPoint to aggregate.
     */
    where?: AvaliationCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AvaliationCommercialPoints to fetch.
     */
    orderBy?: AvaliationCommercialPointOrderByWithRelationInput | AvaliationCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AvaliationCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AvaliationCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AvaliationCommercialPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AvaliationCommercialPoints
    **/
    _count?: true | AvaliationCommercialPointCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AvaliationCommercialPointAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AvaliationCommercialPointSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AvaliationCommercialPointMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AvaliationCommercialPointMaxAggregateInputType
  }

  export type GetAvaliationCommercialPointAggregateType<T extends AvaliationCommercialPointAggregateArgs> = {
        [P in keyof T & keyof AggregateAvaliationCommercialPoint]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAvaliationCommercialPoint[P]>
      : GetScalarType<T[P], AggregateAvaliationCommercialPoint[P]>
  }




  export type AvaliationCommercialPointGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliationCommercialPointWhereInput
    orderBy?: AvaliationCommercialPointOrderByWithAggregationInput | AvaliationCommercialPointOrderByWithAggregationInput[]
    by: AvaliationCommercialPointScalarFieldEnum[] | AvaliationCommercialPointScalarFieldEnum
    having?: AvaliationCommercialPointScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AvaliationCommercialPointCountAggregateInputType | true
    _avg?: AvaliationCommercialPointAvgAggregateInputType
    _sum?: AvaliationCommercialPointSumAggregateInputType
    _min?: AvaliationCommercialPointMinAggregateInputType
    _max?: AvaliationCommercialPointMaxAggregateInputType
  }

  export type AvaliationCommercialPointGroupByOutputType = {
    id: string
    dataPublication: Date
    avaliation: number
    userClientEmail: string
    idUserClient: string
    idCommercialPoint: string
    _count: AvaliationCommercialPointCountAggregateOutputType | null
    _avg: AvaliationCommercialPointAvgAggregateOutputType | null
    _sum: AvaliationCommercialPointSumAggregateOutputType | null
    _min: AvaliationCommercialPointMinAggregateOutputType | null
    _max: AvaliationCommercialPointMaxAggregateOutputType | null
  }

  type GetAvaliationCommercialPointGroupByPayload<T extends AvaliationCommercialPointGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AvaliationCommercialPointGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AvaliationCommercialPointGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AvaliationCommercialPointGroupByOutputType[P]>
            : GetScalarType<T[P], AvaliationCommercialPointGroupByOutputType[P]>
        }
      >
    >


  export type AvaliationCommercialPointSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dataPublication?: boolean
    avaliation?: boolean
    userClientEmail?: boolean
    idUserClient?: boolean
    idCommercialPoint?: boolean
    userClientByEmailClient?: boolean | User_ClientDefaultArgs<ExtArgs>
    userClientByIdClient?: boolean | User_ClientDefaultArgs<ExtArgs>
    userCommercialPointByIdCommercialPoint?: boolean | Ponto_ComercialDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["avaliationCommercialPoint"]>



  export type AvaliationCommercialPointSelectScalar = {
    id?: boolean
    dataPublication?: boolean
    avaliation?: boolean
    userClientEmail?: boolean
    idUserClient?: boolean
    idCommercialPoint?: boolean
  }

  export type AvaliationCommercialPointOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "dataPublication" | "avaliation" | "userClientEmail" | "idUserClient" | "idCommercialPoint", ExtArgs["result"]["avaliationCommercialPoint"]>
  export type AvaliationCommercialPointInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userClientByEmailClient?: boolean | User_ClientDefaultArgs<ExtArgs>
    userClientByIdClient?: boolean | User_ClientDefaultArgs<ExtArgs>
    userCommercialPointByIdCommercialPoint?: boolean | Ponto_ComercialDefaultArgs<ExtArgs>
  }

  export type $AvaliationCommercialPointPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AvaliationCommercialPoint"
    objects: {
      userClientByEmailClient: Prisma.$User_ClientPayload<ExtArgs>
      userClientByIdClient: Prisma.$User_ClientPayload<ExtArgs>
      userCommercialPointByIdCommercialPoint: Prisma.$Ponto_ComercialPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      dataPublication: Date
      avaliation: number
      userClientEmail: string
      idUserClient: string
      idCommercialPoint: string
    }, ExtArgs["result"]["avaliationCommercialPoint"]>
    composites: {}
  }

  type AvaliationCommercialPointGetPayload<S extends boolean | null | undefined | AvaliationCommercialPointDefaultArgs> = $Result.GetResult<Prisma.$AvaliationCommercialPointPayload, S>

  type AvaliationCommercialPointCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AvaliationCommercialPointFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AvaliationCommercialPointCountAggregateInputType | true
    }

  export interface AvaliationCommercialPointDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AvaliationCommercialPoint'], meta: { name: 'AvaliationCommercialPoint' } }
    /**
     * Find zero or one AvaliationCommercialPoint that matches the filter.
     * @param {AvaliationCommercialPointFindUniqueArgs} args - Arguments to find a AvaliationCommercialPoint
     * @example
     * // Get one AvaliationCommercialPoint
     * const avaliationCommercialPoint = await prisma.avaliationCommercialPoint.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AvaliationCommercialPointFindUniqueArgs>(args: SelectSubset<T, AvaliationCommercialPointFindUniqueArgs<ExtArgs>>): Prisma__AvaliationCommercialPointClient<$Result.GetResult<Prisma.$AvaliationCommercialPointPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AvaliationCommercialPoint that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AvaliationCommercialPointFindUniqueOrThrowArgs} args - Arguments to find a AvaliationCommercialPoint
     * @example
     * // Get one AvaliationCommercialPoint
     * const avaliationCommercialPoint = await prisma.avaliationCommercialPoint.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AvaliationCommercialPointFindUniqueOrThrowArgs>(args: SelectSubset<T, AvaliationCommercialPointFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AvaliationCommercialPointClient<$Result.GetResult<Prisma.$AvaliationCommercialPointPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AvaliationCommercialPoint that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationCommercialPointFindFirstArgs} args - Arguments to find a AvaliationCommercialPoint
     * @example
     * // Get one AvaliationCommercialPoint
     * const avaliationCommercialPoint = await prisma.avaliationCommercialPoint.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AvaliationCommercialPointFindFirstArgs>(args?: SelectSubset<T, AvaliationCommercialPointFindFirstArgs<ExtArgs>>): Prisma__AvaliationCommercialPointClient<$Result.GetResult<Prisma.$AvaliationCommercialPointPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AvaliationCommercialPoint that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationCommercialPointFindFirstOrThrowArgs} args - Arguments to find a AvaliationCommercialPoint
     * @example
     * // Get one AvaliationCommercialPoint
     * const avaliationCommercialPoint = await prisma.avaliationCommercialPoint.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AvaliationCommercialPointFindFirstOrThrowArgs>(args?: SelectSubset<T, AvaliationCommercialPointFindFirstOrThrowArgs<ExtArgs>>): Prisma__AvaliationCommercialPointClient<$Result.GetResult<Prisma.$AvaliationCommercialPointPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AvaliationCommercialPoints that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationCommercialPointFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AvaliationCommercialPoints
     * const avaliationCommercialPoints = await prisma.avaliationCommercialPoint.findMany()
     * 
     * // Get first 10 AvaliationCommercialPoints
     * const avaliationCommercialPoints = await prisma.avaliationCommercialPoint.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const avaliationCommercialPointWithIdOnly = await prisma.avaliationCommercialPoint.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AvaliationCommercialPointFindManyArgs>(args?: SelectSubset<T, AvaliationCommercialPointFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliationCommercialPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AvaliationCommercialPoint.
     * @param {AvaliationCommercialPointCreateArgs} args - Arguments to create a AvaliationCommercialPoint.
     * @example
     * // Create one AvaliationCommercialPoint
     * const AvaliationCommercialPoint = await prisma.avaliationCommercialPoint.create({
     *   data: {
     *     // ... data to create a AvaliationCommercialPoint
     *   }
     * })
     * 
     */
    create<T extends AvaliationCommercialPointCreateArgs>(args: SelectSubset<T, AvaliationCommercialPointCreateArgs<ExtArgs>>): Prisma__AvaliationCommercialPointClient<$Result.GetResult<Prisma.$AvaliationCommercialPointPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AvaliationCommercialPoints.
     * @param {AvaliationCommercialPointCreateManyArgs} args - Arguments to create many AvaliationCommercialPoints.
     * @example
     * // Create many AvaliationCommercialPoints
     * const avaliationCommercialPoint = await prisma.avaliationCommercialPoint.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AvaliationCommercialPointCreateManyArgs>(args?: SelectSubset<T, AvaliationCommercialPointCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a AvaliationCommercialPoint.
     * @param {AvaliationCommercialPointDeleteArgs} args - Arguments to delete one AvaliationCommercialPoint.
     * @example
     * // Delete one AvaliationCommercialPoint
     * const AvaliationCommercialPoint = await prisma.avaliationCommercialPoint.delete({
     *   where: {
     *     // ... filter to delete one AvaliationCommercialPoint
     *   }
     * })
     * 
     */
    delete<T extends AvaliationCommercialPointDeleteArgs>(args: SelectSubset<T, AvaliationCommercialPointDeleteArgs<ExtArgs>>): Prisma__AvaliationCommercialPointClient<$Result.GetResult<Prisma.$AvaliationCommercialPointPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AvaliationCommercialPoint.
     * @param {AvaliationCommercialPointUpdateArgs} args - Arguments to update one AvaliationCommercialPoint.
     * @example
     * // Update one AvaliationCommercialPoint
     * const avaliationCommercialPoint = await prisma.avaliationCommercialPoint.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AvaliationCommercialPointUpdateArgs>(args: SelectSubset<T, AvaliationCommercialPointUpdateArgs<ExtArgs>>): Prisma__AvaliationCommercialPointClient<$Result.GetResult<Prisma.$AvaliationCommercialPointPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AvaliationCommercialPoints.
     * @param {AvaliationCommercialPointDeleteManyArgs} args - Arguments to filter AvaliationCommercialPoints to delete.
     * @example
     * // Delete a few AvaliationCommercialPoints
     * const { count } = await prisma.avaliationCommercialPoint.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AvaliationCommercialPointDeleteManyArgs>(args?: SelectSubset<T, AvaliationCommercialPointDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AvaliationCommercialPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationCommercialPointUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AvaliationCommercialPoints
     * const avaliationCommercialPoint = await prisma.avaliationCommercialPoint.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AvaliationCommercialPointUpdateManyArgs>(args: SelectSubset<T, AvaliationCommercialPointUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AvaliationCommercialPoint.
     * @param {AvaliationCommercialPointUpsertArgs} args - Arguments to update or create a AvaliationCommercialPoint.
     * @example
     * // Update or create a AvaliationCommercialPoint
     * const avaliationCommercialPoint = await prisma.avaliationCommercialPoint.upsert({
     *   create: {
     *     // ... data to create a AvaliationCommercialPoint
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AvaliationCommercialPoint we want to update
     *   }
     * })
     */
    upsert<T extends AvaliationCommercialPointUpsertArgs>(args: SelectSubset<T, AvaliationCommercialPointUpsertArgs<ExtArgs>>): Prisma__AvaliationCommercialPointClient<$Result.GetResult<Prisma.$AvaliationCommercialPointPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AvaliationCommercialPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationCommercialPointCountArgs} args - Arguments to filter AvaliationCommercialPoints to count.
     * @example
     * // Count the number of AvaliationCommercialPoints
     * const count = await prisma.avaliationCommercialPoint.count({
     *   where: {
     *     // ... the filter for the AvaliationCommercialPoints we want to count
     *   }
     * })
    **/
    count<T extends AvaliationCommercialPointCountArgs>(
      args?: Subset<T, AvaliationCommercialPointCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AvaliationCommercialPointCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AvaliationCommercialPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationCommercialPointAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AvaliationCommercialPointAggregateArgs>(args: Subset<T, AvaliationCommercialPointAggregateArgs>): Prisma.PrismaPromise<GetAvaliationCommercialPointAggregateType<T>>

    /**
     * Group by AvaliationCommercialPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliationCommercialPointGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AvaliationCommercialPointGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AvaliationCommercialPointGroupByArgs['orderBy'] }
        : { orderBy?: AvaliationCommercialPointGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AvaliationCommercialPointGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAvaliationCommercialPointGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AvaliationCommercialPoint model
   */
  readonly fields: AvaliationCommercialPointFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AvaliationCommercialPoint.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AvaliationCommercialPointClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userClientByEmailClient<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userClientByIdClient<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userCommercialPointByIdCommercialPoint<T extends Ponto_ComercialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_ComercialDefaultArgs<ExtArgs>>): Prisma__Ponto_ComercialClient<$Result.GetResult<Prisma.$Ponto_ComercialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AvaliationCommercialPoint model
   */
  interface AvaliationCommercialPointFieldRefs {
    readonly id: FieldRef<"AvaliationCommercialPoint", 'String'>
    readonly dataPublication: FieldRef<"AvaliationCommercialPoint", 'DateTime'>
    readonly avaliation: FieldRef<"AvaliationCommercialPoint", 'Int'>
    readonly userClientEmail: FieldRef<"AvaliationCommercialPoint", 'String'>
    readonly idUserClient: FieldRef<"AvaliationCommercialPoint", 'String'>
    readonly idCommercialPoint: FieldRef<"AvaliationCommercialPoint", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AvaliationCommercialPoint findUnique
   */
  export type AvaliationCommercialPointFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationCommercialPoint
     */
    select?: AvaliationCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationCommercialPoint
     */
    omit?: AvaliationCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which AvaliationCommercialPoint to fetch.
     */
    where: AvaliationCommercialPointWhereUniqueInput
  }

  /**
   * AvaliationCommercialPoint findUniqueOrThrow
   */
  export type AvaliationCommercialPointFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationCommercialPoint
     */
    select?: AvaliationCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationCommercialPoint
     */
    omit?: AvaliationCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which AvaliationCommercialPoint to fetch.
     */
    where: AvaliationCommercialPointWhereUniqueInput
  }

  /**
   * AvaliationCommercialPoint findFirst
   */
  export type AvaliationCommercialPointFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationCommercialPoint
     */
    select?: AvaliationCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationCommercialPoint
     */
    omit?: AvaliationCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which AvaliationCommercialPoint to fetch.
     */
    where?: AvaliationCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AvaliationCommercialPoints to fetch.
     */
    orderBy?: AvaliationCommercialPointOrderByWithRelationInput | AvaliationCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AvaliationCommercialPoints.
     */
    cursor?: AvaliationCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AvaliationCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AvaliationCommercialPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AvaliationCommercialPoints.
     */
    distinct?: AvaliationCommercialPointScalarFieldEnum | AvaliationCommercialPointScalarFieldEnum[]
  }

  /**
   * AvaliationCommercialPoint findFirstOrThrow
   */
  export type AvaliationCommercialPointFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationCommercialPoint
     */
    select?: AvaliationCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationCommercialPoint
     */
    omit?: AvaliationCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which AvaliationCommercialPoint to fetch.
     */
    where?: AvaliationCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AvaliationCommercialPoints to fetch.
     */
    orderBy?: AvaliationCommercialPointOrderByWithRelationInput | AvaliationCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AvaliationCommercialPoints.
     */
    cursor?: AvaliationCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AvaliationCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AvaliationCommercialPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AvaliationCommercialPoints.
     */
    distinct?: AvaliationCommercialPointScalarFieldEnum | AvaliationCommercialPointScalarFieldEnum[]
  }

  /**
   * AvaliationCommercialPoint findMany
   */
  export type AvaliationCommercialPointFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationCommercialPoint
     */
    select?: AvaliationCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationCommercialPoint
     */
    omit?: AvaliationCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which AvaliationCommercialPoints to fetch.
     */
    where?: AvaliationCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AvaliationCommercialPoints to fetch.
     */
    orderBy?: AvaliationCommercialPointOrderByWithRelationInput | AvaliationCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AvaliationCommercialPoints.
     */
    cursor?: AvaliationCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AvaliationCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AvaliationCommercialPoints.
     */
    skip?: number
    distinct?: AvaliationCommercialPointScalarFieldEnum | AvaliationCommercialPointScalarFieldEnum[]
  }

  /**
   * AvaliationCommercialPoint create
   */
  export type AvaliationCommercialPointCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationCommercialPoint
     */
    select?: AvaliationCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationCommercialPoint
     */
    omit?: AvaliationCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationCommercialPointInclude<ExtArgs> | null
    /**
     * The data needed to create a AvaliationCommercialPoint.
     */
    data: XOR<AvaliationCommercialPointCreateInput, AvaliationCommercialPointUncheckedCreateInput>
  }

  /**
   * AvaliationCommercialPoint createMany
   */
  export type AvaliationCommercialPointCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AvaliationCommercialPoints.
     */
    data: AvaliationCommercialPointCreateManyInput | AvaliationCommercialPointCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AvaliationCommercialPoint update
   */
  export type AvaliationCommercialPointUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationCommercialPoint
     */
    select?: AvaliationCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationCommercialPoint
     */
    omit?: AvaliationCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationCommercialPointInclude<ExtArgs> | null
    /**
     * The data needed to update a AvaliationCommercialPoint.
     */
    data: XOR<AvaliationCommercialPointUpdateInput, AvaliationCommercialPointUncheckedUpdateInput>
    /**
     * Choose, which AvaliationCommercialPoint to update.
     */
    where: AvaliationCommercialPointWhereUniqueInput
  }

  /**
   * AvaliationCommercialPoint updateMany
   */
  export type AvaliationCommercialPointUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AvaliationCommercialPoints.
     */
    data: XOR<AvaliationCommercialPointUpdateManyMutationInput, AvaliationCommercialPointUncheckedUpdateManyInput>
    /**
     * Filter which AvaliationCommercialPoints to update
     */
    where?: AvaliationCommercialPointWhereInput
    /**
     * Limit how many AvaliationCommercialPoints to update.
     */
    limit?: number
  }

  /**
   * AvaliationCommercialPoint upsert
   */
  export type AvaliationCommercialPointUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationCommercialPoint
     */
    select?: AvaliationCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationCommercialPoint
     */
    omit?: AvaliationCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationCommercialPointInclude<ExtArgs> | null
    /**
     * The filter to search for the AvaliationCommercialPoint to update in case it exists.
     */
    where: AvaliationCommercialPointWhereUniqueInput
    /**
     * In case the AvaliationCommercialPoint found by the `where` argument doesn't exist, create a new AvaliationCommercialPoint with this data.
     */
    create: XOR<AvaliationCommercialPointCreateInput, AvaliationCommercialPointUncheckedCreateInput>
    /**
     * In case the AvaliationCommercialPoint was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AvaliationCommercialPointUpdateInput, AvaliationCommercialPointUncheckedUpdateInput>
  }

  /**
   * AvaliationCommercialPoint delete
   */
  export type AvaliationCommercialPointDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationCommercialPoint
     */
    select?: AvaliationCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationCommercialPoint
     */
    omit?: AvaliationCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationCommercialPointInclude<ExtArgs> | null
    /**
     * Filter which AvaliationCommercialPoint to delete.
     */
    where: AvaliationCommercialPointWhereUniqueInput
  }

  /**
   * AvaliationCommercialPoint deleteMany
   */
  export type AvaliationCommercialPointDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AvaliationCommercialPoints to delete
     */
    where?: AvaliationCommercialPointWhereInput
    /**
     * Limit how many AvaliationCommercialPoints to delete.
     */
    limit?: number
  }

  /**
   * AvaliationCommercialPoint without action
   */
  export type AvaliationCommercialPointDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AvaliationCommercialPoint
     */
    select?: AvaliationCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AvaliationCommercialPoint
     */
    omit?: AvaliationCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliationCommercialPointInclude<ExtArgs> | null
  }


  /**
   * Model FavoriteCommercialPoint
   */

  export type AggregateFavoriteCommercialPoint = {
    _count: FavoriteCommercialPointCountAggregateOutputType | null
    _min: FavoriteCommercialPointMinAggregateOutputType | null
    _max: FavoriteCommercialPointMaxAggregateOutputType | null
  }

  export type FavoriteCommercialPointMinAggregateOutputType = {
    id: string | null
    Favorite: boolean | null
    idUserClient: string | null
    idCommercialPoint: string | null
  }

  export type FavoriteCommercialPointMaxAggregateOutputType = {
    id: string | null
    Favorite: boolean | null
    idUserClient: string | null
    idCommercialPoint: string | null
  }

  export type FavoriteCommercialPointCountAggregateOutputType = {
    id: number
    Favorite: number
    idUserClient: number
    idCommercialPoint: number
    _all: number
  }


  export type FavoriteCommercialPointMinAggregateInputType = {
    id?: true
    Favorite?: true
    idUserClient?: true
    idCommercialPoint?: true
  }

  export type FavoriteCommercialPointMaxAggregateInputType = {
    id?: true
    Favorite?: true
    idUserClient?: true
    idCommercialPoint?: true
  }

  export type FavoriteCommercialPointCountAggregateInputType = {
    id?: true
    Favorite?: true
    idUserClient?: true
    idCommercialPoint?: true
    _all?: true
  }

  export type FavoriteCommercialPointAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FavoriteCommercialPoint to aggregate.
     */
    where?: FavoriteCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavoriteCommercialPoints to fetch.
     */
    orderBy?: FavoriteCommercialPointOrderByWithRelationInput | FavoriteCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FavoriteCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavoriteCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavoriteCommercialPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FavoriteCommercialPoints
    **/
    _count?: true | FavoriteCommercialPointCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FavoriteCommercialPointMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FavoriteCommercialPointMaxAggregateInputType
  }

  export type GetFavoriteCommercialPointAggregateType<T extends FavoriteCommercialPointAggregateArgs> = {
        [P in keyof T & keyof AggregateFavoriteCommercialPoint]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFavoriteCommercialPoint[P]>
      : GetScalarType<T[P], AggregateFavoriteCommercialPoint[P]>
  }




  export type FavoriteCommercialPointGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteCommercialPointWhereInput
    orderBy?: FavoriteCommercialPointOrderByWithAggregationInput | FavoriteCommercialPointOrderByWithAggregationInput[]
    by: FavoriteCommercialPointScalarFieldEnum[] | FavoriteCommercialPointScalarFieldEnum
    having?: FavoriteCommercialPointScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FavoriteCommercialPointCountAggregateInputType | true
    _min?: FavoriteCommercialPointMinAggregateInputType
    _max?: FavoriteCommercialPointMaxAggregateInputType
  }

  export type FavoriteCommercialPointGroupByOutputType = {
    id: string
    Favorite: boolean
    idUserClient: string
    idCommercialPoint: string
    _count: FavoriteCommercialPointCountAggregateOutputType | null
    _min: FavoriteCommercialPointMinAggregateOutputType | null
    _max: FavoriteCommercialPointMaxAggregateOutputType | null
  }

  type GetFavoriteCommercialPointGroupByPayload<T extends FavoriteCommercialPointGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FavoriteCommercialPointGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FavoriteCommercialPointGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FavoriteCommercialPointGroupByOutputType[P]>
            : GetScalarType<T[P], FavoriteCommercialPointGroupByOutputType[P]>
        }
      >
    >


  export type FavoriteCommercialPointSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    Favorite?: boolean
    idUserClient?: boolean
    idCommercialPoint?: boolean
    userClientByClientId?: boolean | User_ClientDefaultArgs<ExtArgs>
    userCommercialPointByCommercialPointId?: boolean | Ponto_ComercialDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favoriteCommercialPoint"]>



  export type FavoriteCommercialPointSelectScalar = {
    id?: boolean
    Favorite?: boolean
    idUserClient?: boolean
    idCommercialPoint?: boolean
  }

  export type FavoriteCommercialPointOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "Favorite" | "idUserClient" | "idCommercialPoint", ExtArgs["result"]["favoriteCommercialPoint"]>
  export type FavoriteCommercialPointInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userClientByClientId?: boolean | User_ClientDefaultArgs<ExtArgs>
    userCommercialPointByCommercialPointId?: boolean | Ponto_ComercialDefaultArgs<ExtArgs>
  }

  export type $FavoriteCommercialPointPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FavoriteCommercialPoint"
    objects: {
      userClientByClientId: Prisma.$User_ClientPayload<ExtArgs>
      userCommercialPointByCommercialPointId: Prisma.$Ponto_ComercialPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      Favorite: boolean
      idUserClient: string
      idCommercialPoint: string
    }, ExtArgs["result"]["favoriteCommercialPoint"]>
    composites: {}
  }

  type FavoriteCommercialPointGetPayload<S extends boolean | null | undefined | FavoriteCommercialPointDefaultArgs> = $Result.GetResult<Prisma.$FavoriteCommercialPointPayload, S>

  type FavoriteCommercialPointCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FavoriteCommercialPointFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FavoriteCommercialPointCountAggregateInputType | true
    }

  export interface FavoriteCommercialPointDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FavoriteCommercialPoint'], meta: { name: 'FavoriteCommercialPoint' } }
    /**
     * Find zero or one FavoriteCommercialPoint that matches the filter.
     * @param {FavoriteCommercialPointFindUniqueArgs} args - Arguments to find a FavoriteCommercialPoint
     * @example
     * // Get one FavoriteCommercialPoint
     * const favoriteCommercialPoint = await prisma.favoriteCommercialPoint.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FavoriteCommercialPointFindUniqueArgs>(args: SelectSubset<T, FavoriteCommercialPointFindUniqueArgs<ExtArgs>>): Prisma__FavoriteCommercialPointClient<$Result.GetResult<Prisma.$FavoriteCommercialPointPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FavoriteCommercialPoint that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FavoriteCommercialPointFindUniqueOrThrowArgs} args - Arguments to find a FavoriteCommercialPoint
     * @example
     * // Get one FavoriteCommercialPoint
     * const favoriteCommercialPoint = await prisma.favoriteCommercialPoint.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FavoriteCommercialPointFindUniqueOrThrowArgs>(args: SelectSubset<T, FavoriteCommercialPointFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FavoriteCommercialPointClient<$Result.GetResult<Prisma.$FavoriteCommercialPointPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FavoriteCommercialPoint that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteCommercialPointFindFirstArgs} args - Arguments to find a FavoriteCommercialPoint
     * @example
     * // Get one FavoriteCommercialPoint
     * const favoriteCommercialPoint = await prisma.favoriteCommercialPoint.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FavoriteCommercialPointFindFirstArgs>(args?: SelectSubset<T, FavoriteCommercialPointFindFirstArgs<ExtArgs>>): Prisma__FavoriteCommercialPointClient<$Result.GetResult<Prisma.$FavoriteCommercialPointPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FavoriteCommercialPoint that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteCommercialPointFindFirstOrThrowArgs} args - Arguments to find a FavoriteCommercialPoint
     * @example
     * // Get one FavoriteCommercialPoint
     * const favoriteCommercialPoint = await prisma.favoriteCommercialPoint.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FavoriteCommercialPointFindFirstOrThrowArgs>(args?: SelectSubset<T, FavoriteCommercialPointFindFirstOrThrowArgs<ExtArgs>>): Prisma__FavoriteCommercialPointClient<$Result.GetResult<Prisma.$FavoriteCommercialPointPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FavoriteCommercialPoints that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteCommercialPointFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FavoriteCommercialPoints
     * const favoriteCommercialPoints = await prisma.favoriteCommercialPoint.findMany()
     * 
     * // Get first 10 FavoriteCommercialPoints
     * const favoriteCommercialPoints = await prisma.favoriteCommercialPoint.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const favoriteCommercialPointWithIdOnly = await prisma.favoriteCommercialPoint.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FavoriteCommercialPointFindManyArgs>(args?: SelectSubset<T, FavoriteCommercialPointFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoriteCommercialPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FavoriteCommercialPoint.
     * @param {FavoriteCommercialPointCreateArgs} args - Arguments to create a FavoriteCommercialPoint.
     * @example
     * // Create one FavoriteCommercialPoint
     * const FavoriteCommercialPoint = await prisma.favoriteCommercialPoint.create({
     *   data: {
     *     // ... data to create a FavoriteCommercialPoint
     *   }
     * })
     * 
     */
    create<T extends FavoriteCommercialPointCreateArgs>(args: SelectSubset<T, FavoriteCommercialPointCreateArgs<ExtArgs>>): Prisma__FavoriteCommercialPointClient<$Result.GetResult<Prisma.$FavoriteCommercialPointPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FavoriteCommercialPoints.
     * @param {FavoriteCommercialPointCreateManyArgs} args - Arguments to create many FavoriteCommercialPoints.
     * @example
     * // Create many FavoriteCommercialPoints
     * const favoriteCommercialPoint = await prisma.favoriteCommercialPoint.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FavoriteCommercialPointCreateManyArgs>(args?: SelectSubset<T, FavoriteCommercialPointCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a FavoriteCommercialPoint.
     * @param {FavoriteCommercialPointDeleteArgs} args - Arguments to delete one FavoriteCommercialPoint.
     * @example
     * // Delete one FavoriteCommercialPoint
     * const FavoriteCommercialPoint = await prisma.favoriteCommercialPoint.delete({
     *   where: {
     *     // ... filter to delete one FavoriteCommercialPoint
     *   }
     * })
     * 
     */
    delete<T extends FavoriteCommercialPointDeleteArgs>(args: SelectSubset<T, FavoriteCommercialPointDeleteArgs<ExtArgs>>): Prisma__FavoriteCommercialPointClient<$Result.GetResult<Prisma.$FavoriteCommercialPointPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FavoriteCommercialPoint.
     * @param {FavoriteCommercialPointUpdateArgs} args - Arguments to update one FavoriteCommercialPoint.
     * @example
     * // Update one FavoriteCommercialPoint
     * const favoriteCommercialPoint = await prisma.favoriteCommercialPoint.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FavoriteCommercialPointUpdateArgs>(args: SelectSubset<T, FavoriteCommercialPointUpdateArgs<ExtArgs>>): Prisma__FavoriteCommercialPointClient<$Result.GetResult<Prisma.$FavoriteCommercialPointPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FavoriteCommercialPoints.
     * @param {FavoriteCommercialPointDeleteManyArgs} args - Arguments to filter FavoriteCommercialPoints to delete.
     * @example
     * // Delete a few FavoriteCommercialPoints
     * const { count } = await prisma.favoriteCommercialPoint.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FavoriteCommercialPointDeleteManyArgs>(args?: SelectSubset<T, FavoriteCommercialPointDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FavoriteCommercialPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteCommercialPointUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FavoriteCommercialPoints
     * const favoriteCommercialPoint = await prisma.favoriteCommercialPoint.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FavoriteCommercialPointUpdateManyArgs>(args: SelectSubset<T, FavoriteCommercialPointUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FavoriteCommercialPoint.
     * @param {FavoriteCommercialPointUpsertArgs} args - Arguments to update or create a FavoriteCommercialPoint.
     * @example
     * // Update or create a FavoriteCommercialPoint
     * const favoriteCommercialPoint = await prisma.favoriteCommercialPoint.upsert({
     *   create: {
     *     // ... data to create a FavoriteCommercialPoint
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FavoriteCommercialPoint we want to update
     *   }
     * })
     */
    upsert<T extends FavoriteCommercialPointUpsertArgs>(args: SelectSubset<T, FavoriteCommercialPointUpsertArgs<ExtArgs>>): Prisma__FavoriteCommercialPointClient<$Result.GetResult<Prisma.$FavoriteCommercialPointPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FavoriteCommercialPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteCommercialPointCountArgs} args - Arguments to filter FavoriteCommercialPoints to count.
     * @example
     * // Count the number of FavoriteCommercialPoints
     * const count = await prisma.favoriteCommercialPoint.count({
     *   where: {
     *     // ... the filter for the FavoriteCommercialPoints we want to count
     *   }
     * })
    **/
    count<T extends FavoriteCommercialPointCountArgs>(
      args?: Subset<T, FavoriteCommercialPointCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FavoriteCommercialPointCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FavoriteCommercialPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteCommercialPointAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FavoriteCommercialPointAggregateArgs>(args: Subset<T, FavoriteCommercialPointAggregateArgs>): Prisma.PrismaPromise<GetFavoriteCommercialPointAggregateType<T>>

    /**
     * Group by FavoriteCommercialPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteCommercialPointGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FavoriteCommercialPointGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FavoriteCommercialPointGroupByArgs['orderBy'] }
        : { orderBy?: FavoriteCommercialPointGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FavoriteCommercialPointGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFavoriteCommercialPointGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FavoriteCommercialPoint model
   */
  readonly fields: FavoriteCommercialPointFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FavoriteCommercialPoint.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FavoriteCommercialPointClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userClientByClientId<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userCommercialPointByCommercialPointId<T extends Ponto_ComercialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_ComercialDefaultArgs<ExtArgs>>): Prisma__Ponto_ComercialClient<$Result.GetResult<Prisma.$Ponto_ComercialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FavoriteCommercialPoint model
   */
  interface FavoriteCommercialPointFieldRefs {
    readonly id: FieldRef<"FavoriteCommercialPoint", 'String'>
    readonly Favorite: FieldRef<"FavoriteCommercialPoint", 'Boolean'>
    readonly idUserClient: FieldRef<"FavoriteCommercialPoint", 'String'>
    readonly idCommercialPoint: FieldRef<"FavoriteCommercialPoint", 'String'>
  }
    

  // Custom InputTypes
  /**
   * FavoriteCommercialPoint findUnique
   */
  export type FavoriteCommercialPointFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteCommercialPoint
     */
    select?: FavoriteCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteCommercialPoint
     */
    omit?: FavoriteCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteCommercialPoint to fetch.
     */
    where: FavoriteCommercialPointWhereUniqueInput
  }

  /**
   * FavoriteCommercialPoint findUniqueOrThrow
   */
  export type FavoriteCommercialPointFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteCommercialPoint
     */
    select?: FavoriteCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteCommercialPoint
     */
    omit?: FavoriteCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteCommercialPoint to fetch.
     */
    where: FavoriteCommercialPointWhereUniqueInput
  }

  /**
   * FavoriteCommercialPoint findFirst
   */
  export type FavoriteCommercialPointFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteCommercialPoint
     */
    select?: FavoriteCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteCommercialPoint
     */
    omit?: FavoriteCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteCommercialPoint to fetch.
     */
    where?: FavoriteCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavoriteCommercialPoints to fetch.
     */
    orderBy?: FavoriteCommercialPointOrderByWithRelationInput | FavoriteCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FavoriteCommercialPoints.
     */
    cursor?: FavoriteCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavoriteCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavoriteCommercialPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FavoriteCommercialPoints.
     */
    distinct?: FavoriteCommercialPointScalarFieldEnum | FavoriteCommercialPointScalarFieldEnum[]
  }

  /**
   * FavoriteCommercialPoint findFirstOrThrow
   */
  export type FavoriteCommercialPointFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteCommercialPoint
     */
    select?: FavoriteCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteCommercialPoint
     */
    omit?: FavoriteCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteCommercialPoint to fetch.
     */
    where?: FavoriteCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavoriteCommercialPoints to fetch.
     */
    orderBy?: FavoriteCommercialPointOrderByWithRelationInput | FavoriteCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FavoriteCommercialPoints.
     */
    cursor?: FavoriteCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavoriteCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavoriteCommercialPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FavoriteCommercialPoints.
     */
    distinct?: FavoriteCommercialPointScalarFieldEnum | FavoriteCommercialPointScalarFieldEnum[]
  }

  /**
   * FavoriteCommercialPoint findMany
   */
  export type FavoriteCommercialPointFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteCommercialPoint
     */
    select?: FavoriteCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteCommercialPoint
     */
    omit?: FavoriteCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteCommercialPoints to fetch.
     */
    where?: FavoriteCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavoriteCommercialPoints to fetch.
     */
    orderBy?: FavoriteCommercialPointOrderByWithRelationInput | FavoriteCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FavoriteCommercialPoints.
     */
    cursor?: FavoriteCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavoriteCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavoriteCommercialPoints.
     */
    skip?: number
    distinct?: FavoriteCommercialPointScalarFieldEnum | FavoriteCommercialPointScalarFieldEnum[]
  }

  /**
   * FavoriteCommercialPoint create
   */
  export type FavoriteCommercialPointCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteCommercialPoint
     */
    select?: FavoriteCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteCommercialPoint
     */
    omit?: FavoriteCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteCommercialPointInclude<ExtArgs> | null
    /**
     * The data needed to create a FavoriteCommercialPoint.
     */
    data: XOR<FavoriteCommercialPointCreateInput, FavoriteCommercialPointUncheckedCreateInput>
  }

  /**
   * FavoriteCommercialPoint createMany
   */
  export type FavoriteCommercialPointCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FavoriteCommercialPoints.
     */
    data: FavoriteCommercialPointCreateManyInput | FavoriteCommercialPointCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FavoriteCommercialPoint update
   */
  export type FavoriteCommercialPointUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteCommercialPoint
     */
    select?: FavoriteCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteCommercialPoint
     */
    omit?: FavoriteCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteCommercialPointInclude<ExtArgs> | null
    /**
     * The data needed to update a FavoriteCommercialPoint.
     */
    data: XOR<FavoriteCommercialPointUpdateInput, FavoriteCommercialPointUncheckedUpdateInput>
    /**
     * Choose, which FavoriteCommercialPoint to update.
     */
    where: FavoriteCommercialPointWhereUniqueInput
  }

  /**
   * FavoriteCommercialPoint updateMany
   */
  export type FavoriteCommercialPointUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FavoriteCommercialPoints.
     */
    data: XOR<FavoriteCommercialPointUpdateManyMutationInput, FavoriteCommercialPointUncheckedUpdateManyInput>
    /**
     * Filter which FavoriteCommercialPoints to update
     */
    where?: FavoriteCommercialPointWhereInput
    /**
     * Limit how many FavoriteCommercialPoints to update.
     */
    limit?: number
  }

  /**
   * FavoriteCommercialPoint upsert
   */
  export type FavoriteCommercialPointUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteCommercialPoint
     */
    select?: FavoriteCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteCommercialPoint
     */
    omit?: FavoriteCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteCommercialPointInclude<ExtArgs> | null
    /**
     * The filter to search for the FavoriteCommercialPoint to update in case it exists.
     */
    where: FavoriteCommercialPointWhereUniqueInput
    /**
     * In case the FavoriteCommercialPoint found by the `where` argument doesn't exist, create a new FavoriteCommercialPoint with this data.
     */
    create: XOR<FavoriteCommercialPointCreateInput, FavoriteCommercialPointUncheckedCreateInput>
    /**
     * In case the FavoriteCommercialPoint was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FavoriteCommercialPointUpdateInput, FavoriteCommercialPointUncheckedUpdateInput>
  }

  /**
   * FavoriteCommercialPoint delete
   */
  export type FavoriteCommercialPointDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteCommercialPoint
     */
    select?: FavoriteCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteCommercialPoint
     */
    omit?: FavoriteCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteCommercialPointInclude<ExtArgs> | null
    /**
     * Filter which FavoriteCommercialPoint to delete.
     */
    where: FavoriteCommercialPointWhereUniqueInput
  }

  /**
   * FavoriteCommercialPoint deleteMany
   */
  export type FavoriteCommercialPointDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FavoriteCommercialPoints to delete
     */
    where?: FavoriteCommercialPointWhereInput
    /**
     * Limit how many FavoriteCommercialPoints to delete.
     */
    limit?: number
  }

  /**
   * FavoriteCommercialPoint without action
   */
  export type FavoriteCommercialPointDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteCommercialPoint
     */
    select?: FavoriteCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteCommercialPoint
     */
    omit?: FavoriteCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteCommercialPointInclude<ExtArgs> | null
  }


  /**
   * Model FavoriteTouristPoint
   */

  export type AggregateFavoriteTouristPoint = {
    _count: FavoriteTouristPointCountAggregateOutputType | null
    _min: FavoriteTouristPointMinAggregateOutputType | null
    _max: FavoriteTouristPointMaxAggregateOutputType | null
  }

  export type FavoriteTouristPointMinAggregateOutputType = {
    id: string | null
    Favorite: boolean | null
    idUserClient: string | null
    idTouristPoint: string | null
  }

  export type FavoriteTouristPointMaxAggregateOutputType = {
    id: string | null
    Favorite: boolean | null
    idUserClient: string | null
    idTouristPoint: string | null
  }

  export type FavoriteTouristPointCountAggregateOutputType = {
    id: number
    Favorite: number
    idUserClient: number
    idTouristPoint: number
    _all: number
  }


  export type FavoriteTouristPointMinAggregateInputType = {
    id?: true
    Favorite?: true
    idUserClient?: true
    idTouristPoint?: true
  }

  export type FavoriteTouristPointMaxAggregateInputType = {
    id?: true
    Favorite?: true
    idUserClient?: true
    idTouristPoint?: true
  }

  export type FavoriteTouristPointCountAggregateInputType = {
    id?: true
    Favorite?: true
    idUserClient?: true
    idTouristPoint?: true
    _all?: true
  }

  export type FavoriteTouristPointAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FavoriteTouristPoint to aggregate.
     */
    where?: FavoriteTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavoriteTouristPoints to fetch.
     */
    orderBy?: FavoriteTouristPointOrderByWithRelationInput | FavoriteTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FavoriteTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavoriteTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavoriteTouristPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FavoriteTouristPoints
    **/
    _count?: true | FavoriteTouristPointCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FavoriteTouristPointMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FavoriteTouristPointMaxAggregateInputType
  }

  export type GetFavoriteTouristPointAggregateType<T extends FavoriteTouristPointAggregateArgs> = {
        [P in keyof T & keyof AggregateFavoriteTouristPoint]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFavoriteTouristPoint[P]>
      : GetScalarType<T[P], AggregateFavoriteTouristPoint[P]>
  }




  export type FavoriteTouristPointGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteTouristPointWhereInput
    orderBy?: FavoriteTouristPointOrderByWithAggregationInput | FavoriteTouristPointOrderByWithAggregationInput[]
    by: FavoriteTouristPointScalarFieldEnum[] | FavoriteTouristPointScalarFieldEnum
    having?: FavoriteTouristPointScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FavoriteTouristPointCountAggregateInputType | true
    _min?: FavoriteTouristPointMinAggregateInputType
    _max?: FavoriteTouristPointMaxAggregateInputType
  }

  export type FavoriteTouristPointGroupByOutputType = {
    id: string
    Favorite: boolean
    idUserClient: string
    idTouristPoint: string
    _count: FavoriteTouristPointCountAggregateOutputType | null
    _min: FavoriteTouristPointMinAggregateOutputType | null
    _max: FavoriteTouristPointMaxAggregateOutputType | null
  }

  type GetFavoriteTouristPointGroupByPayload<T extends FavoriteTouristPointGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FavoriteTouristPointGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FavoriteTouristPointGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FavoriteTouristPointGroupByOutputType[P]>
            : GetScalarType<T[P], FavoriteTouristPointGroupByOutputType[P]>
        }
      >
    >


  export type FavoriteTouristPointSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    Favorite?: boolean
    idUserClient?: boolean
    idTouristPoint?: boolean
    userClientByClientId?: boolean | User_ClientDefaultArgs<ExtArgs>
    userTouristPointByTouristPointId?: boolean | Ponto_TuristicoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favoriteTouristPoint"]>



  export type FavoriteTouristPointSelectScalar = {
    id?: boolean
    Favorite?: boolean
    idUserClient?: boolean
    idTouristPoint?: boolean
  }

  export type FavoriteTouristPointOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "Favorite" | "idUserClient" | "idTouristPoint", ExtArgs["result"]["favoriteTouristPoint"]>
  export type FavoriteTouristPointInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userClientByClientId?: boolean | User_ClientDefaultArgs<ExtArgs>
    userTouristPointByTouristPointId?: boolean | Ponto_TuristicoDefaultArgs<ExtArgs>
  }

  export type $FavoriteTouristPointPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FavoriteTouristPoint"
    objects: {
      userClientByClientId: Prisma.$User_ClientPayload<ExtArgs>
      userTouristPointByTouristPointId: Prisma.$Ponto_TuristicoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      Favorite: boolean
      idUserClient: string
      idTouristPoint: string
    }, ExtArgs["result"]["favoriteTouristPoint"]>
    composites: {}
  }

  type FavoriteTouristPointGetPayload<S extends boolean | null | undefined | FavoriteTouristPointDefaultArgs> = $Result.GetResult<Prisma.$FavoriteTouristPointPayload, S>

  type FavoriteTouristPointCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FavoriteTouristPointFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FavoriteTouristPointCountAggregateInputType | true
    }

  export interface FavoriteTouristPointDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FavoriteTouristPoint'], meta: { name: 'FavoriteTouristPoint' } }
    /**
     * Find zero or one FavoriteTouristPoint that matches the filter.
     * @param {FavoriteTouristPointFindUniqueArgs} args - Arguments to find a FavoriteTouristPoint
     * @example
     * // Get one FavoriteTouristPoint
     * const favoriteTouristPoint = await prisma.favoriteTouristPoint.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FavoriteTouristPointFindUniqueArgs>(args: SelectSubset<T, FavoriteTouristPointFindUniqueArgs<ExtArgs>>): Prisma__FavoriteTouristPointClient<$Result.GetResult<Prisma.$FavoriteTouristPointPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FavoriteTouristPoint that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FavoriteTouristPointFindUniqueOrThrowArgs} args - Arguments to find a FavoriteTouristPoint
     * @example
     * // Get one FavoriteTouristPoint
     * const favoriteTouristPoint = await prisma.favoriteTouristPoint.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FavoriteTouristPointFindUniqueOrThrowArgs>(args: SelectSubset<T, FavoriteTouristPointFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FavoriteTouristPointClient<$Result.GetResult<Prisma.$FavoriteTouristPointPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FavoriteTouristPoint that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteTouristPointFindFirstArgs} args - Arguments to find a FavoriteTouristPoint
     * @example
     * // Get one FavoriteTouristPoint
     * const favoriteTouristPoint = await prisma.favoriteTouristPoint.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FavoriteTouristPointFindFirstArgs>(args?: SelectSubset<T, FavoriteTouristPointFindFirstArgs<ExtArgs>>): Prisma__FavoriteTouristPointClient<$Result.GetResult<Prisma.$FavoriteTouristPointPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FavoriteTouristPoint that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteTouristPointFindFirstOrThrowArgs} args - Arguments to find a FavoriteTouristPoint
     * @example
     * // Get one FavoriteTouristPoint
     * const favoriteTouristPoint = await prisma.favoriteTouristPoint.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FavoriteTouristPointFindFirstOrThrowArgs>(args?: SelectSubset<T, FavoriteTouristPointFindFirstOrThrowArgs<ExtArgs>>): Prisma__FavoriteTouristPointClient<$Result.GetResult<Prisma.$FavoriteTouristPointPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FavoriteTouristPoints that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteTouristPointFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FavoriteTouristPoints
     * const favoriteTouristPoints = await prisma.favoriteTouristPoint.findMany()
     * 
     * // Get first 10 FavoriteTouristPoints
     * const favoriteTouristPoints = await prisma.favoriteTouristPoint.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const favoriteTouristPointWithIdOnly = await prisma.favoriteTouristPoint.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FavoriteTouristPointFindManyArgs>(args?: SelectSubset<T, FavoriteTouristPointFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoriteTouristPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FavoriteTouristPoint.
     * @param {FavoriteTouristPointCreateArgs} args - Arguments to create a FavoriteTouristPoint.
     * @example
     * // Create one FavoriteTouristPoint
     * const FavoriteTouristPoint = await prisma.favoriteTouristPoint.create({
     *   data: {
     *     // ... data to create a FavoriteTouristPoint
     *   }
     * })
     * 
     */
    create<T extends FavoriteTouristPointCreateArgs>(args: SelectSubset<T, FavoriteTouristPointCreateArgs<ExtArgs>>): Prisma__FavoriteTouristPointClient<$Result.GetResult<Prisma.$FavoriteTouristPointPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FavoriteTouristPoints.
     * @param {FavoriteTouristPointCreateManyArgs} args - Arguments to create many FavoriteTouristPoints.
     * @example
     * // Create many FavoriteTouristPoints
     * const favoriteTouristPoint = await prisma.favoriteTouristPoint.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FavoriteTouristPointCreateManyArgs>(args?: SelectSubset<T, FavoriteTouristPointCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a FavoriteTouristPoint.
     * @param {FavoriteTouristPointDeleteArgs} args - Arguments to delete one FavoriteTouristPoint.
     * @example
     * // Delete one FavoriteTouristPoint
     * const FavoriteTouristPoint = await prisma.favoriteTouristPoint.delete({
     *   where: {
     *     // ... filter to delete one FavoriteTouristPoint
     *   }
     * })
     * 
     */
    delete<T extends FavoriteTouristPointDeleteArgs>(args: SelectSubset<T, FavoriteTouristPointDeleteArgs<ExtArgs>>): Prisma__FavoriteTouristPointClient<$Result.GetResult<Prisma.$FavoriteTouristPointPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FavoriteTouristPoint.
     * @param {FavoriteTouristPointUpdateArgs} args - Arguments to update one FavoriteTouristPoint.
     * @example
     * // Update one FavoriteTouristPoint
     * const favoriteTouristPoint = await prisma.favoriteTouristPoint.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FavoriteTouristPointUpdateArgs>(args: SelectSubset<T, FavoriteTouristPointUpdateArgs<ExtArgs>>): Prisma__FavoriteTouristPointClient<$Result.GetResult<Prisma.$FavoriteTouristPointPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FavoriteTouristPoints.
     * @param {FavoriteTouristPointDeleteManyArgs} args - Arguments to filter FavoriteTouristPoints to delete.
     * @example
     * // Delete a few FavoriteTouristPoints
     * const { count } = await prisma.favoriteTouristPoint.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FavoriteTouristPointDeleteManyArgs>(args?: SelectSubset<T, FavoriteTouristPointDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FavoriteTouristPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteTouristPointUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FavoriteTouristPoints
     * const favoriteTouristPoint = await prisma.favoriteTouristPoint.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FavoriteTouristPointUpdateManyArgs>(args: SelectSubset<T, FavoriteTouristPointUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FavoriteTouristPoint.
     * @param {FavoriteTouristPointUpsertArgs} args - Arguments to update or create a FavoriteTouristPoint.
     * @example
     * // Update or create a FavoriteTouristPoint
     * const favoriteTouristPoint = await prisma.favoriteTouristPoint.upsert({
     *   create: {
     *     // ... data to create a FavoriteTouristPoint
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FavoriteTouristPoint we want to update
     *   }
     * })
     */
    upsert<T extends FavoriteTouristPointUpsertArgs>(args: SelectSubset<T, FavoriteTouristPointUpsertArgs<ExtArgs>>): Prisma__FavoriteTouristPointClient<$Result.GetResult<Prisma.$FavoriteTouristPointPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FavoriteTouristPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteTouristPointCountArgs} args - Arguments to filter FavoriteTouristPoints to count.
     * @example
     * // Count the number of FavoriteTouristPoints
     * const count = await prisma.favoriteTouristPoint.count({
     *   where: {
     *     // ... the filter for the FavoriteTouristPoints we want to count
     *   }
     * })
    **/
    count<T extends FavoriteTouristPointCountArgs>(
      args?: Subset<T, FavoriteTouristPointCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FavoriteTouristPointCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FavoriteTouristPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteTouristPointAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FavoriteTouristPointAggregateArgs>(args: Subset<T, FavoriteTouristPointAggregateArgs>): Prisma.PrismaPromise<GetFavoriteTouristPointAggregateType<T>>

    /**
     * Group by FavoriteTouristPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteTouristPointGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FavoriteTouristPointGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FavoriteTouristPointGroupByArgs['orderBy'] }
        : { orderBy?: FavoriteTouristPointGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FavoriteTouristPointGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFavoriteTouristPointGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FavoriteTouristPoint model
   */
  readonly fields: FavoriteTouristPointFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FavoriteTouristPoint.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FavoriteTouristPointClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userClientByClientId<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userTouristPointByTouristPointId<T extends Ponto_TuristicoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_TuristicoDefaultArgs<ExtArgs>>): Prisma__Ponto_TuristicoClient<$Result.GetResult<Prisma.$Ponto_TuristicoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FavoriteTouristPoint model
   */
  interface FavoriteTouristPointFieldRefs {
    readonly id: FieldRef<"FavoriteTouristPoint", 'String'>
    readonly Favorite: FieldRef<"FavoriteTouristPoint", 'Boolean'>
    readonly idUserClient: FieldRef<"FavoriteTouristPoint", 'String'>
    readonly idTouristPoint: FieldRef<"FavoriteTouristPoint", 'String'>
  }
    

  // Custom InputTypes
  /**
   * FavoriteTouristPoint findUnique
   */
  export type FavoriteTouristPointFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteTouristPoint
     */
    select?: FavoriteTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteTouristPoint
     */
    omit?: FavoriteTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteTouristPoint to fetch.
     */
    where: FavoriteTouristPointWhereUniqueInput
  }

  /**
   * FavoriteTouristPoint findUniqueOrThrow
   */
  export type FavoriteTouristPointFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteTouristPoint
     */
    select?: FavoriteTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteTouristPoint
     */
    omit?: FavoriteTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteTouristPoint to fetch.
     */
    where: FavoriteTouristPointWhereUniqueInput
  }

  /**
   * FavoriteTouristPoint findFirst
   */
  export type FavoriteTouristPointFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteTouristPoint
     */
    select?: FavoriteTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteTouristPoint
     */
    omit?: FavoriteTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteTouristPoint to fetch.
     */
    where?: FavoriteTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavoriteTouristPoints to fetch.
     */
    orderBy?: FavoriteTouristPointOrderByWithRelationInput | FavoriteTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FavoriteTouristPoints.
     */
    cursor?: FavoriteTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavoriteTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavoriteTouristPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FavoriteTouristPoints.
     */
    distinct?: FavoriteTouristPointScalarFieldEnum | FavoriteTouristPointScalarFieldEnum[]
  }

  /**
   * FavoriteTouristPoint findFirstOrThrow
   */
  export type FavoriteTouristPointFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteTouristPoint
     */
    select?: FavoriteTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteTouristPoint
     */
    omit?: FavoriteTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteTouristPoint to fetch.
     */
    where?: FavoriteTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavoriteTouristPoints to fetch.
     */
    orderBy?: FavoriteTouristPointOrderByWithRelationInput | FavoriteTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FavoriteTouristPoints.
     */
    cursor?: FavoriteTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavoriteTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavoriteTouristPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FavoriteTouristPoints.
     */
    distinct?: FavoriteTouristPointScalarFieldEnum | FavoriteTouristPointScalarFieldEnum[]
  }

  /**
   * FavoriteTouristPoint findMany
   */
  export type FavoriteTouristPointFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteTouristPoint
     */
    select?: FavoriteTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteTouristPoint
     */
    omit?: FavoriteTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteTouristPoints to fetch.
     */
    where?: FavoriteTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavoriteTouristPoints to fetch.
     */
    orderBy?: FavoriteTouristPointOrderByWithRelationInput | FavoriteTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FavoriteTouristPoints.
     */
    cursor?: FavoriteTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavoriteTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavoriteTouristPoints.
     */
    skip?: number
    distinct?: FavoriteTouristPointScalarFieldEnum | FavoriteTouristPointScalarFieldEnum[]
  }

  /**
   * FavoriteTouristPoint create
   */
  export type FavoriteTouristPointCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteTouristPoint
     */
    select?: FavoriteTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteTouristPoint
     */
    omit?: FavoriteTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteTouristPointInclude<ExtArgs> | null
    /**
     * The data needed to create a FavoriteTouristPoint.
     */
    data: XOR<FavoriteTouristPointCreateInput, FavoriteTouristPointUncheckedCreateInput>
  }

  /**
   * FavoriteTouristPoint createMany
   */
  export type FavoriteTouristPointCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FavoriteTouristPoints.
     */
    data: FavoriteTouristPointCreateManyInput | FavoriteTouristPointCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FavoriteTouristPoint update
   */
  export type FavoriteTouristPointUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteTouristPoint
     */
    select?: FavoriteTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteTouristPoint
     */
    omit?: FavoriteTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteTouristPointInclude<ExtArgs> | null
    /**
     * The data needed to update a FavoriteTouristPoint.
     */
    data: XOR<FavoriteTouristPointUpdateInput, FavoriteTouristPointUncheckedUpdateInput>
    /**
     * Choose, which FavoriteTouristPoint to update.
     */
    where: FavoriteTouristPointWhereUniqueInput
  }

  /**
   * FavoriteTouristPoint updateMany
   */
  export type FavoriteTouristPointUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FavoriteTouristPoints.
     */
    data: XOR<FavoriteTouristPointUpdateManyMutationInput, FavoriteTouristPointUncheckedUpdateManyInput>
    /**
     * Filter which FavoriteTouristPoints to update
     */
    where?: FavoriteTouristPointWhereInput
    /**
     * Limit how many FavoriteTouristPoints to update.
     */
    limit?: number
  }

  /**
   * FavoriteTouristPoint upsert
   */
  export type FavoriteTouristPointUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteTouristPoint
     */
    select?: FavoriteTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteTouristPoint
     */
    omit?: FavoriteTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteTouristPointInclude<ExtArgs> | null
    /**
     * The filter to search for the FavoriteTouristPoint to update in case it exists.
     */
    where: FavoriteTouristPointWhereUniqueInput
    /**
     * In case the FavoriteTouristPoint found by the `where` argument doesn't exist, create a new FavoriteTouristPoint with this data.
     */
    create: XOR<FavoriteTouristPointCreateInput, FavoriteTouristPointUncheckedCreateInput>
    /**
     * In case the FavoriteTouristPoint was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FavoriteTouristPointUpdateInput, FavoriteTouristPointUncheckedUpdateInput>
  }

  /**
   * FavoriteTouristPoint delete
   */
  export type FavoriteTouristPointDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteTouristPoint
     */
    select?: FavoriteTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteTouristPoint
     */
    omit?: FavoriteTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteTouristPointInclude<ExtArgs> | null
    /**
     * Filter which FavoriteTouristPoint to delete.
     */
    where: FavoriteTouristPointWhereUniqueInput
  }

  /**
   * FavoriteTouristPoint deleteMany
   */
  export type FavoriteTouristPointDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FavoriteTouristPoints to delete
     */
    where?: FavoriteTouristPointWhereInput
    /**
     * Limit how many FavoriteTouristPoints to delete.
     */
    limit?: number
  }

  /**
   * FavoriteTouristPoint without action
   */
  export type FavoriteTouristPointDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteTouristPoint
     */
    select?: FavoriteTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteTouristPoint
     */
    omit?: FavoriteTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteTouristPointInclude<ExtArgs> | null
  }


  /**
   * Model FavoriteRoadMap
   */

  export type AggregateFavoriteRoadMap = {
    _count: FavoriteRoadMapCountAggregateOutputType | null
    _min: FavoriteRoadMapMinAggregateOutputType | null
    _max: FavoriteRoadMapMaxAggregateOutputType | null
  }

  export type FavoriteRoadMapMinAggregateOutputType = {
    id: string | null
    Favorite: boolean | null
    idUserClient: string | null
    idRoadMap: string | null
  }

  export type FavoriteRoadMapMaxAggregateOutputType = {
    id: string | null
    Favorite: boolean | null
    idUserClient: string | null
    idRoadMap: string | null
  }

  export type FavoriteRoadMapCountAggregateOutputType = {
    id: number
    Favorite: number
    idUserClient: number
    idRoadMap: number
    _all: number
  }


  export type FavoriteRoadMapMinAggregateInputType = {
    id?: true
    Favorite?: true
    idUserClient?: true
    idRoadMap?: true
  }

  export type FavoriteRoadMapMaxAggregateInputType = {
    id?: true
    Favorite?: true
    idUserClient?: true
    idRoadMap?: true
  }

  export type FavoriteRoadMapCountAggregateInputType = {
    id?: true
    Favorite?: true
    idUserClient?: true
    idRoadMap?: true
    _all?: true
  }

  export type FavoriteRoadMapAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FavoriteRoadMap to aggregate.
     */
    where?: FavoriteRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavoriteRoadMaps to fetch.
     */
    orderBy?: FavoriteRoadMapOrderByWithRelationInput | FavoriteRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FavoriteRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavoriteRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavoriteRoadMaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FavoriteRoadMaps
    **/
    _count?: true | FavoriteRoadMapCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FavoriteRoadMapMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FavoriteRoadMapMaxAggregateInputType
  }

  export type GetFavoriteRoadMapAggregateType<T extends FavoriteRoadMapAggregateArgs> = {
        [P in keyof T & keyof AggregateFavoriteRoadMap]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFavoriteRoadMap[P]>
      : GetScalarType<T[P], AggregateFavoriteRoadMap[P]>
  }




  export type FavoriteRoadMapGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteRoadMapWhereInput
    orderBy?: FavoriteRoadMapOrderByWithAggregationInput | FavoriteRoadMapOrderByWithAggregationInput[]
    by: FavoriteRoadMapScalarFieldEnum[] | FavoriteRoadMapScalarFieldEnum
    having?: FavoriteRoadMapScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FavoriteRoadMapCountAggregateInputType | true
    _min?: FavoriteRoadMapMinAggregateInputType
    _max?: FavoriteRoadMapMaxAggregateInputType
  }

  export type FavoriteRoadMapGroupByOutputType = {
    id: string
    Favorite: boolean
    idUserClient: string
    idRoadMap: string
    _count: FavoriteRoadMapCountAggregateOutputType | null
    _min: FavoriteRoadMapMinAggregateOutputType | null
    _max: FavoriteRoadMapMaxAggregateOutputType | null
  }

  type GetFavoriteRoadMapGroupByPayload<T extends FavoriteRoadMapGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FavoriteRoadMapGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FavoriteRoadMapGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FavoriteRoadMapGroupByOutputType[P]>
            : GetScalarType<T[P], FavoriteRoadMapGroupByOutputType[P]>
        }
      >
    >


  export type FavoriteRoadMapSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    Favorite?: boolean
    idUserClient?: boolean
    idRoadMap?: boolean
    userClientByClientId?: boolean | User_ClientDefaultArgs<ExtArgs>
    userRoadMapPointByRoadMapId?: boolean | Travel_Road_MapDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favoriteRoadMap"]>



  export type FavoriteRoadMapSelectScalar = {
    id?: boolean
    Favorite?: boolean
    idUserClient?: boolean
    idRoadMap?: boolean
  }

  export type FavoriteRoadMapOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "Favorite" | "idUserClient" | "idRoadMap", ExtArgs["result"]["favoriteRoadMap"]>
  export type FavoriteRoadMapInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userClientByClientId?: boolean | User_ClientDefaultArgs<ExtArgs>
    userRoadMapPointByRoadMapId?: boolean | Travel_Road_MapDefaultArgs<ExtArgs>
  }

  export type $FavoriteRoadMapPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FavoriteRoadMap"
    objects: {
      userClientByClientId: Prisma.$User_ClientPayload<ExtArgs>
      userRoadMapPointByRoadMapId: Prisma.$Travel_Road_MapPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      Favorite: boolean
      idUserClient: string
      idRoadMap: string
    }, ExtArgs["result"]["favoriteRoadMap"]>
    composites: {}
  }

  type FavoriteRoadMapGetPayload<S extends boolean | null | undefined | FavoriteRoadMapDefaultArgs> = $Result.GetResult<Prisma.$FavoriteRoadMapPayload, S>

  type FavoriteRoadMapCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FavoriteRoadMapFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FavoriteRoadMapCountAggregateInputType | true
    }

  export interface FavoriteRoadMapDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FavoriteRoadMap'], meta: { name: 'FavoriteRoadMap' } }
    /**
     * Find zero or one FavoriteRoadMap that matches the filter.
     * @param {FavoriteRoadMapFindUniqueArgs} args - Arguments to find a FavoriteRoadMap
     * @example
     * // Get one FavoriteRoadMap
     * const favoriteRoadMap = await prisma.favoriteRoadMap.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FavoriteRoadMapFindUniqueArgs>(args: SelectSubset<T, FavoriteRoadMapFindUniqueArgs<ExtArgs>>): Prisma__FavoriteRoadMapClient<$Result.GetResult<Prisma.$FavoriteRoadMapPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FavoriteRoadMap that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FavoriteRoadMapFindUniqueOrThrowArgs} args - Arguments to find a FavoriteRoadMap
     * @example
     * // Get one FavoriteRoadMap
     * const favoriteRoadMap = await prisma.favoriteRoadMap.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FavoriteRoadMapFindUniqueOrThrowArgs>(args: SelectSubset<T, FavoriteRoadMapFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FavoriteRoadMapClient<$Result.GetResult<Prisma.$FavoriteRoadMapPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FavoriteRoadMap that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteRoadMapFindFirstArgs} args - Arguments to find a FavoriteRoadMap
     * @example
     * // Get one FavoriteRoadMap
     * const favoriteRoadMap = await prisma.favoriteRoadMap.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FavoriteRoadMapFindFirstArgs>(args?: SelectSubset<T, FavoriteRoadMapFindFirstArgs<ExtArgs>>): Prisma__FavoriteRoadMapClient<$Result.GetResult<Prisma.$FavoriteRoadMapPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FavoriteRoadMap that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteRoadMapFindFirstOrThrowArgs} args - Arguments to find a FavoriteRoadMap
     * @example
     * // Get one FavoriteRoadMap
     * const favoriteRoadMap = await prisma.favoriteRoadMap.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FavoriteRoadMapFindFirstOrThrowArgs>(args?: SelectSubset<T, FavoriteRoadMapFindFirstOrThrowArgs<ExtArgs>>): Prisma__FavoriteRoadMapClient<$Result.GetResult<Prisma.$FavoriteRoadMapPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FavoriteRoadMaps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteRoadMapFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FavoriteRoadMaps
     * const favoriteRoadMaps = await prisma.favoriteRoadMap.findMany()
     * 
     * // Get first 10 FavoriteRoadMaps
     * const favoriteRoadMaps = await prisma.favoriteRoadMap.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const favoriteRoadMapWithIdOnly = await prisma.favoriteRoadMap.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FavoriteRoadMapFindManyArgs>(args?: SelectSubset<T, FavoriteRoadMapFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoriteRoadMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FavoriteRoadMap.
     * @param {FavoriteRoadMapCreateArgs} args - Arguments to create a FavoriteRoadMap.
     * @example
     * // Create one FavoriteRoadMap
     * const FavoriteRoadMap = await prisma.favoriteRoadMap.create({
     *   data: {
     *     // ... data to create a FavoriteRoadMap
     *   }
     * })
     * 
     */
    create<T extends FavoriteRoadMapCreateArgs>(args: SelectSubset<T, FavoriteRoadMapCreateArgs<ExtArgs>>): Prisma__FavoriteRoadMapClient<$Result.GetResult<Prisma.$FavoriteRoadMapPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FavoriteRoadMaps.
     * @param {FavoriteRoadMapCreateManyArgs} args - Arguments to create many FavoriteRoadMaps.
     * @example
     * // Create many FavoriteRoadMaps
     * const favoriteRoadMap = await prisma.favoriteRoadMap.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FavoriteRoadMapCreateManyArgs>(args?: SelectSubset<T, FavoriteRoadMapCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a FavoriteRoadMap.
     * @param {FavoriteRoadMapDeleteArgs} args - Arguments to delete one FavoriteRoadMap.
     * @example
     * // Delete one FavoriteRoadMap
     * const FavoriteRoadMap = await prisma.favoriteRoadMap.delete({
     *   where: {
     *     // ... filter to delete one FavoriteRoadMap
     *   }
     * })
     * 
     */
    delete<T extends FavoriteRoadMapDeleteArgs>(args: SelectSubset<T, FavoriteRoadMapDeleteArgs<ExtArgs>>): Prisma__FavoriteRoadMapClient<$Result.GetResult<Prisma.$FavoriteRoadMapPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FavoriteRoadMap.
     * @param {FavoriteRoadMapUpdateArgs} args - Arguments to update one FavoriteRoadMap.
     * @example
     * // Update one FavoriteRoadMap
     * const favoriteRoadMap = await prisma.favoriteRoadMap.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FavoriteRoadMapUpdateArgs>(args: SelectSubset<T, FavoriteRoadMapUpdateArgs<ExtArgs>>): Prisma__FavoriteRoadMapClient<$Result.GetResult<Prisma.$FavoriteRoadMapPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FavoriteRoadMaps.
     * @param {FavoriteRoadMapDeleteManyArgs} args - Arguments to filter FavoriteRoadMaps to delete.
     * @example
     * // Delete a few FavoriteRoadMaps
     * const { count } = await prisma.favoriteRoadMap.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FavoriteRoadMapDeleteManyArgs>(args?: SelectSubset<T, FavoriteRoadMapDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FavoriteRoadMaps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteRoadMapUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FavoriteRoadMaps
     * const favoriteRoadMap = await prisma.favoriteRoadMap.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FavoriteRoadMapUpdateManyArgs>(args: SelectSubset<T, FavoriteRoadMapUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FavoriteRoadMap.
     * @param {FavoriteRoadMapUpsertArgs} args - Arguments to update or create a FavoriteRoadMap.
     * @example
     * // Update or create a FavoriteRoadMap
     * const favoriteRoadMap = await prisma.favoriteRoadMap.upsert({
     *   create: {
     *     // ... data to create a FavoriteRoadMap
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FavoriteRoadMap we want to update
     *   }
     * })
     */
    upsert<T extends FavoriteRoadMapUpsertArgs>(args: SelectSubset<T, FavoriteRoadMapUpsertArgs<ExtArgs>>): Prisma__FavoriteRoadMapClient<$Result.GetResult<Prisma.$FavoriteRoadMapPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FavoriteRoadMaps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteRoadMapCountArgs} args - Arguments to filter FavoriteRoadMaps to count.
     * @example
     * // Count the number of FavoriteRoadMaps
     * const count = await prisma.favoriteRoadMap.count({
     *   where: {
     *     // ... the filter for the FavoriteRoadMaps we want to count
     *   }
     * })
    **/
    count<T extends FavoriteRoadMapCountArgs>(
      args?: Subset<T, FavoriteRoadMapCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FavoriteRoadMapCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FavoriteRoadMap.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteRoadMapAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FavoriteRoadMapAggregateArgs>(args: Subset<T, FavoriteRoadMapAggregateArgs>): Prisma.PrismaPromise<GetFavoriteRoadMapAggregateType<T>>

    /**
     * Group by FavoriteRoadMap.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteRoadMapGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FavoriteRoadMapGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FavoriteRoadMapGroupByArgs['orderBy'] }
        : { orderBy?: FavoriteRoadMapGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FavoriteRoadMapGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFavoriteRoadMapGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FavoriteRoadMap model
   */
  readonly fields: FavoriteRoadMapFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FavoriteRoadMap.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FavoriteRoadMapClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userClientByClientId<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userRoadMapPointByRoadMapId<T extends Travel_Road_MapDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Travel_Road_MapDefaultArgs<ExtArgs>>): Prisma__Travel_Road_MapClient<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FavoriteRoadMap model
   */
  interface FavoriteRoadMapFieldRefs {
    readonly id: FieldRef<"FavoriteRoadMap", 'String'>
    readonly Favorite: FieldRef<"FavoriteRoadMap", 'Boolean'>
    readonly idUserClient: FieldRef<"FavoriteRoadMap", 'String'>
    readonly idRoadMap: FieldRef<"FavoriteRoadMap", 'String'>
  }
    

  // Custom InputTypes
  /**
   * FavoriteRoadMap findUnique
   */
  export type FavoriteRoadMapFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteRoadMap
     */
    select?: FavoriteRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteRoadMap
     */
    omit?: FavoriteRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteRoadMap to fetch.
     */
    where: FavoriteRoadMapWhereUniqueInput
  }

  /**
   * FavoriteRoadMap findUniqueOrThrow
   */
  export type FavoriteRoadMapFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteRoadMap
     */
    select?: FavoriteRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteRoadMap
     */
    omit?: FavoriteRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteRoadMap to fetch.
     */
    where: FavoriteRoadMapWhereUniqueInput
  }

  /**
   * FavoriteRoadMap findFirst
   */
  export type FavoriteRoadMapFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteRoadMap
     */
    select?: FavoriteRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteRoadMap
     */
    omit?: FavoriteRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteRoadMap to fetch.
     */
    where?: FavoriteRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavoriteRoadMaps to fetch.
     */
    orderBy?: FavoriteRoadMapOrderByWithRelationInput | FavoriteRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FavoriteRoadMaps.
     */
    cursor?: FavoriteRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavoriteRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavoriteRoadMaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FavoriteRoadMaps.
     */
    distinct?: FavoriteRoadMapScalarFieldEnum | FavoriteRoadMapScalarFieldEnum[]
  }

  /**
   * FavoriteRoadMap findFirstOrThrow
   */
  export type FavoriteRoadMapFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteRoadMap
     */
    select?: FavoriteRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteRoadMap
     */
    omit?: FavoriteRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteRoadMap to fetch.
     */
    where?: FavoriteRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavoriteRoadMaps to fetch.
     */
    orderBy?: FavoriteRoadMapOrderByWithRelationInput | FavoriteRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FavoriteRoadMaps.
     */
    cursor?: FavoriteRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavoriteRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavoriteRoadMaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FavoriteRoadMaps.
     */
    distinct?: FavoriteRoadMapScalarFieldEnum | FavoriteRoadMapScalarFieldEnum[]
  }

  /**
   * FavoriteRoadMap findMany
   */
  export type FavoriteRoadMapFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteRoadMap
     */
    select?: FavoriteRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteRoadMap
     */
    omit?: FavoriteRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteRoadMaps to fetch.
     */
    where?: FavoriteRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavoriteRoadMaps to fetch.
     */
    orderBy?: FavoriteRoadMapOrderByWithRelationInput | FavoriteRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FavoriteRoadMaps.
     */
    cursor?: FavoriteRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavoriteRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavoriteRoadMaps.
     */
    skip?: number
    distinct?: FavoriteRoadMapScalarFieldEnum | FavoriteRoadMapScalarFieldEnum[]
  }

  /**
   * FavoriteRoadMap create
   */
  export type FavoriteRoadMapCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteRoadMap
     */
    select?: FavoriteRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteRoadMap
     */
    omit?: FavoriteRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteRoadMapInclude<ExtArgs> | null
    /**
     * The data needed to create a FavoriteRoadMap.
     */
    data: XOR<FavoriteRoadMapCreateInput, FavoriteRoadMapUncheckedCreateInput>
  }

  /**
   * FavoriteRoadMap createMany
   */
  export type FavoriteRoadMapCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FavoriteRoadMaps.
     */
    data: FavoriteRoadMapCreateManyInput | FavoriteRoadMapCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FavoriteRoadMap update
   */
  export type FavoriteRoadMapUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteRoadMap
     */
    select?: FavoriteRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteRoadMap
     */
    omit?: FavoriteRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteRoadMapInclude<ExtArgs> | null
    /**
     * The data needed to update a FavoriteRoadMap.
     */
    data: XOR<FavoriteRoadMapUpdateInput, FavoriteRoadMapUncheckedUpdateInput>
    /**
     * Choose, which FavoriteRoadMap to update.
     */
    where: FavoriteRoadMapWhereUniqueInput
  }

  /**
   * FavoriteRoadMap updateMany
   */
  export type FavoriteRoadMapUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FavoriteRoadMaps.
     */
    data: XOR<FavoriteRoadMapUpdateManyMutationInput, FavoriteRoadMapUncheckedUpdateManyInput>
    /**
     * Filter which FavoriteRoadMaps to update
     */
    where?: FavoriteRoadMapWhereInput
    /**
     * Limit how many FavoriteRoadMaps to update.
     */
    limit?: number
  }

  /**
   * FavoriteRoadMap upsert
   */
  export type FavoriteRoadMapUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteRoadMap
     */
    select?: FavoriteRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteRoadMap
     */
    omit?: FavoriteRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteRoadMapInclude<ExtArgs> | null
    /**
     * The filter to search for the FavoriteRoadMap to update in case it exists.
     */
    where: FavoriteRoadMapWhereUniqueInput
    /**
     * In case the FavoriteRoadMap found by the `where` argument doesn't exist, create a new FavoriteRoadMap with this data.
     */
    create: XOR<FavoriteRoadMapCreateInput, FavoriteRoadMapUncheckedCreateInput>
    /**
     * In case the FavoriteRoadMap was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FavoriteRoadMapUpdateInput, FavoriteRoadMapUncheckedUpdateInput>
  }

  /**
   * FavoriteRoadMap delete
   */
  export type FavoriteRoadMapDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteRoadMap
     */
    select?: FavoriteRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteRoadMap
     */
    omit?: FavoriteRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteRoadMapInclude<ExtArgs> | null
    /**
     * Filter which FavoriteRoadMap to delete.
     */
    where: FavoriteRoadMapWhereUniqueInput
  }

  /**
   * FavoriteRoadMap deleteMany
   */
  export type FavoriteRoadMapDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FavoriteRoadMaps to delete
     */
    where?: FavoriteRoadMapWhereInput
    /**
     * Limit how many FavoriteRoadMaps to delete.
     */
    limit?: number
  }

  /**
   * FavoriteRoadMap without action
   */
  export type FavoriteRoadMapDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteRoadMap
     */
    select?: FavoriteRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteRoadMap
     */
    omit?: FavoriteRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteRoadMapInclude<ExtArgs> | null
  }


  /**
   * Model reportTouristPoint
   */

  export type AggregateReportTouristPoint = {
    _count: ReportTouristPointCountAggregateOutputType | null
    _min: ReportTouristPointMinAggregateOutputType | null
    _max: ReportTouristPointMaxAggregateOutputType | null
  }

  export type ReportTouristPointMinAggregateOutputType = {
    id: string | null
    content: string | null
    idTouristPoint: string | null
    idUserReport: string | null
  }

  export type ReportTouristPointMaxAggregateOutputType = {
    id: string | null
    content: string | null
    idTouristPoint: string | null
    idUserReport: string | null
  }

  export type ReportTouristPointCountAggregateOutputType = {
    id: number
    content: number
    idTouristPoint: number
    idUserReport: number
    _all: number
  }


  export type ReportTouristPointMinAggregateInputType = {
    id?: true
    content?: true
    idTouristPoint?: true
    idUserReport?: true
  }

  export type ReportTouristPointMaxAggregateInputType = {
    id?: true
    content?: true
    idTouristPoint?: true
    idUserReport?: true
  }

  export type ReportTouristPointCountAggregateInputType = {
    id?: true
    content?: true
    idTouristPoint?: true
    idUserReport?: true
    _all?: true
  }

  export type ReportTouristPointAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reportTouristPoint to aggregate.
     */
    where?: reportTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportTouristPoints to fetch.
     */
    orderBy?: reportTouristPointOrderByWithRelationInput | reportTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: reportTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportTouristPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reportTouristPoints
    **/
    _count?: true | ReportTouristPointCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReportTouristPointMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReportTouristPointMaxAggregateInputType
  }

  export type GetReportTouristPointAggregateType<T extends ReportTouristPointAggregateArgs> = {
        [P in keyof T & keyof AggregateReportTouristPoint]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReportTouristPoint[P]>
      : GetScalarType<T[P], AggregateReportTouristPoint[P]>
  }




  export type reportTouristPointGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportTouristPointWhereInput
    orderBy?: reportTouristPointOrderByWithAggregationInput | reportTouristPointOrderByWithAggregationInput[]
    by: ReportTouristPointScalarFieldEnum[] | ReportTouristPointScalarFieldEnum
    having?: reportTouristPointScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReportTouristPointCountAggregateInputType | true
    _min?: ReportTouristPointMinAggregateInputType
    _max?: ReportTouristPointMaxAggregateInputType
  }

  export type ReportTouristPointGroupByOutputType = {
    id: string
    content: string
    idTouristPoint: string
    idUserReport: string
    _count: ReportTouristPointCountAggregateOutputType | null
    _min: ReportTouristPointMinAggregateOutputType | null
    _max: ReportTouristPointMaxAggregateOutputType | null
  }

  type GetReportTouristPointGroupByPayload<T extends reportTouristPointGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReportTouristPointGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReportTouristPointGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReportTouristPointGroupByOutputType[P]>
            : GetScalarType<T[P], ReportTouristPointGroupByOutputType[P]>
        }
      >
    >


  export type reportTouristPointSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    idTouristPoint?: boolean
    idUserReport?: boolean
    userReportTouristPointByIdTouristPoint?: boolean | Ponto_TuristicoDefaultArgs<ExtArgs>
    userReportTouristPointByIdUserReport?: boolean | User_ClientDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reportTouristPoint"]>



  export type reportTouristPointSelectScalar = {
    id?: boolean
    content?: boolean
    idTouristPoint?: boolean
    idUserReport?: boolean
  }

  export type reportTouristPointOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "content" | "idTouristPoint" | "idUserReport", ExtArgs["result"]["reportTouristPoint"]>
  export type reportTouristPointInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userReportTouristPointByIdTouristPoint?: boolean | Ponto_TuristicoDefaultArgs<ExtArgs>
    userReportTouristPointByIdUserReport?: boolean | User_ClientDefaultArgs<ExtArgs>
  }

  export type $reportTouristPointPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "reportTouristPoint"
    objects: {
      userReportTouristPointByIdTouristPoint: Prisma.$Ponto_TuristicoPayload<ExtArgs>
      userReportTouristPointByIdUserReport: Prisma.$User_ClientPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      content: string
      idTouristPoint: string
      idUserReport: string
    }, ExtArgs["result"]["reportTouristPoint"]>
    composites: {}
  }

  type reportTouristPointGetPayload<S extends boolean | null | undefined | reportTouristPointDefaultArgs> = $Result.GetResult<Prisma.$reportTouristPointPayload, S>

  type reportTouristPointCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<reportTouristPointFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReportTouristPointCountAggregateInputType | true
    }

  export interface reportTouristPointDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['reportTouristPoint'], meta: { name: 'reportTouristPoint' } }
    /**
     * Find zero or one ReportTouristPoint that matches the filter.
     * @param {reportTouristPointFindUniqueArgs} args - Arguments to find a ReportTouristPoint
     * @example
     * // Get one ReportTouristPoint
     * const reportTouristPoint = await prisma.reportTouristPoint.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends reportTouristPointFindUniqueArgs>(args: SelectSubset<T, reportTouristPointFindUniqueArgs<ExtArgs>>): Prisma__reportTouristPointClient<$Result.GetResult<Prisma.$reportTouristPointPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReportTouristPoint that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {reportTouristPointFindUniqueOrThrowArgs} args - Arguments to find a ReportTouristPoint
     * @example
     * // Get one ReportTouristPoint
     * const reportTouristPoint = await prisma.reportTouristPoint.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends reportTouristPointFindUniqueOrThrowArgs>(args: SelectSubset<T, reportTouristPointFindUniqueOrThrowArgs<ExtArgs>>): Prisma__reportTouristPointClient<$Result.GetResult<Prisma.$reportTouristPointPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReportTouristPoint that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportTouristPointFindFirstArgs} args - Arguments to find a ReportTouristPoint
     * @example
     * // Get one ReportTouristPoint
     * const reportTouristPoint = await prisma.reportTouristPoint.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends reportTouristPointFindFirstArgs>(args?: SelectSubset<T, reportTouristPointFindFirstArgs<ExtArgs>>): Prisma__reportTouristPointClient<$Result.GetResult<Prisma.$reportTouristPointPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReportTouristPoint that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportTouristPointFindFirstOrThrowArgs} args - Arguments to find a ReportTouristPoint
     * @example
     * // Get one ReportTouristPoint
     * const reportTouristPoint = await prisma.reportTouristPoint.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends reportTouristPointFindFirstOrThrowArgs>(args?: SelectSubset<T, reportTouristPointFindFirstOrThrowArgs<ExtArgs>>): Prisma__reportTouristPointClient<$Result.GetResult<Prisma.$reportTouristPointPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReportTouristPoints that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportTouristPointFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReportTouristPoints
     * const reportTouristPoints = await prisma.reportTouristPoint.findMany()
     * 
     * // Get first 10 ReportTouristPoints
     * const reportTouristPoints = await prisma.reportTouristPoint.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reportTouristPointWithIdOnly = await prisma.reportTouristPoint.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends reportTouristPointFindManyArgs>(args?: SelectSubset<T, reportTouristPointFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportTouristPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReportTouristPoint.
     * @param {reportTouristPointCreateArgs} args - Arguments to create a ReportTouristPoint.
     * @example
     * // Create one ReportTouristPoint
     * const ReportTouristPoint = await prisma.reportTouristPoint.create({
     *   data: {
     *     // ... data to create a ReportTouristPoint
     *   }
     * })
     * 
     */
    create<T extends reportTouristPointCreateArgs>(args: SelectSubset<T, reportTouristPointCreateArgs<ExtArgs>>): Prisma__reportTouristPointClient<$Result.GetResult<Prisma.$reportTouristPointPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReportTouristPoints.
     * @param {reportTouristPointCreateManyArgs} args - Arguments to create many ReportTouristPoints.
     * @example
     * // Create many ReportTouristPoints
     * const reportTouristPoint = await prisma.reportTouristPoint.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends reportTouristPointCreateManyArgs>(args?: SelectSubset<T, reportTouristPointCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ReportTouristPoint.
     * @param {reportTouristPointDeleteArgs} args - Arguments to delete one ReportTouristPoint.
     * @example
     * // Delete one ReportTouristPoint
     * const ReportTouristPoint = await prisma.reportTouristPoint.delete({
     *   where: {
     *     // ... filter to delete one ReportTouristPoint
     *   }
     * })
     * 
     */
    delete<T extends reportTouristPointDeleteArgs>(args: SelectSubset<T, reportTouristPointDeleteArgs<ExtArgs>>): Prisma__reportTouristPointClient<$Result.GetResult<Prisma.$reportTouristPointPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReportTouristPoint.
     * @param {reportTouristPointUpdateArgs} args - Arguments to update one ReportTouristPoint.
     * @example
     * // Update one ReportTouristPoint
     * const reportTouristPoint = await prisma.reportTouristPoint.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends reportTouristPointUpdateArgs>(args: SelectSubset<T, reportTouristPointUpdateArgs<ExtArgs>>): Prisma__reportTouristPointClient<$Result.GetResult<Prisma.$reportTouristPointPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReportTouristPoints.
     * @param {reportTouristPointDeleteManyArgs} args - Arguments to filter ReportTouristPoints to delete.
     * @example
     * // Delete a few ReportTouristPoints
     * const { count } = await prisma.reportTouristPoint.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends reportTouristPointDeleteManyArgs>(args?: SelectSubset<T, reportTouristPointDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReportTouristPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportTouristPointUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReportTouristPoints
     * const reportTouristPoint = await prisma.reportTouristPoint.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends reportTouristPointUpdateManyArgs>(args: SelectSubset<T, reportTouristPointUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ReportTouristPoint.
     * @param {reportTouristPointUpsertArgs} args - Arguments to update or create a ReportTouristPoint.
     * @example
     * // Update or create a ReportTouristPoint
     * const reportTouristPoint = await prisma.reportTouristPoint.upsert({
     *   create: {
     *     // ... data to create a ReportTouristPoint
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReportTouristPoint we want to update
     *   }
     * })
     */
    upsert<T extends reportTouristPointUpsertArgs>(args: SelectSubset<T, reportTouristPointUpsertArgs<ExtArgs>>): Prisma__reportTouristPointClient<$Result.GetResult<Prisma.$reportTouristPointPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReportTouristPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportTouristPointCountArgs} args - Arguments to filter ReportTouristPoints to count.
     * @example
     * // Count the number of ReportTouristPoints
     * const count = await prisma.reportTouristPoint.count({
     *   where: {
     *     // ... the filter for the ReportTouristPoints we want to count
     *   }
     * })
    **/
    count<T extends reportTouristPointCountArgs>(
      args?: Subset<T, reportTouristPointCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReportTouristPointCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReportTouristPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportTouristPointAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReportTouristPointAggregateArgs>(args: Subset<T, ReportTouristPointAggregateArgs>): Prisma.PrismaPromise<GetReportTouristPointAggregateType<T>>

    /**
     * Group by ReportTouristPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportTouristPointGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends reportTouristPointGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: reportTouristPointGroupByArgs['orderBy'] }
        : { orderBy?: reportTouristPointGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, reportTouristPointGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReportTouristPointGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the reportTouristPoint model
   */
  readonly fields: reportTouristPointFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for reportTouristPoint.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__reportTouristPointClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userReportTouristPointByIdTouristPoint<T extends Ponto_TuristicoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_TuristicoDefaultArgs<ExtArgs>>): Prisma__Ponto_TuristicoClient<$Result.GetResult<Prisma.$Ponto_TuristicoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userReportTouristPointByIdUserReport<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the reportTouristPoint model
   */
  interface reportTouristPointFieldRefs {
    readonly id: FieldRef<"reportTouristPoint", 'String'>
    readonly content: FieldRef<"reportTouristPoint", 'String'>
    readonly idTouristPoint: FieldRef<"reportTouristPoint", 'String'>
    readonly idUserReport: FieldRef<"reportTouristPoint", 'String'>
  }
    

  // Custom InputTypes
  /**
   * reportTouristPoint findUnique
   */
  export type reportTouristPointFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportTouristPoint
     */
    select?: reportTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportTouristPoint
     */
    omit?: reportTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which reportTouristPoint to fetch.
     */
    where: reportTouristPointWhereUniqueInput
  }

  /**
   * reportTouristPoint findUniqueOrThrow
   */
  export type reportTouristPointFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportTouristPoint
     */
    select?: reportTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportTouristPoint
     */
    omit?: reportTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which reportTouristPoint to fetch.
     */
    where: reportTouristPointWhereUniqueInput
  }

  /**
   * reportTouristPoint findFirst
   */
  export type reportTouristPointFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportTouristPoint
     */
    select?: reportTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportTouristPoint
     */
    omit?: reportTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which reportTouristPoint to fetch.
     */
    where?: reportTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportTouristPoints to fetch.
     */
    orderBy?: reportTouristPointOrderByWithRelationInput | reportTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reportTouristPoints.
     */
    cursor?: reportTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportTouristPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reportTouristPoints.
     */
    distinct?: ReportTouristPointScalarFieldEnum | ReportTouristPointScalarFieldEnum[]
  }

  /**
   * reportTouristPoint findFirstOrThrow
   */
  export type reportTouristPointFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportTouristPoint
     */
    select?: reportTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportTouristPoint
     */
    omit?: reportTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which reportTouristPoint to fetch.
     */
    where?: reportTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportTouristPoints to fetch.
     */
    orderBy?: reportTouristPointOrderByWithRelationInput | reportTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reportTouristPoints.
     */
    cursor?: reportTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportTouristPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reportTouristPoints.
     */
    distinct?: ReportTouristPointScalarFieldEnum | ReportTouristPointScalarFieldEnum[]
  }

  /**
   * reportTouristPoint findMany
   */
  export type reportTouristPointFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportTouristPoint
     */
    select?: reportTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportTouristPoint
     */
    omit?: reportTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which reportTouristPoints to fetch.
     */
    where?: reportTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportTouristPoints to fetch.
     */
    orderBy?: reportTouristPointOrderByWithRelationInput | reportTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reportTouristPoints.
     */
    cursor?: reportTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportTouristPoints.
     */
    skip?: number
    distinct?: ReportTouristPointScalarFieldEnum | ReportTouristPointScalarFieldEnum[]
  }

  /**
   * reportTouristPoint create
   */
  export type reportTouristPointCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportTouristPoint
     */
    select?: reportTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportTouristPoint
     */
    omit?: reportTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportTouristPointInclude<ExtArgs> | null
    /**
     * The data needed to create a reportTouristPoint.
     */
    data: XOR<reportTouristPointCreateInput, reportTouristPointUncheckedCreateInput>
  }

  /**
   * reportTouristPoint createMany
   */
  export type reportTouristPointCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reportTouristPoints.
     */
    data: reportTouristPointCreateManyInput | reportTouristPointCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * reportTouristPoint update
   */
  export type reportTouristPointUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportTouristPoint
     */
    select?: reportTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportTouristPoint
     */
    omit?: reportTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportTouristPointInclude<ExtArgs> | null
    /**
     * The data needed to update a reportTouristPoint.
     */
    data: XOR<reportTouristPointUpdateInput, reportTouristPointUncheckedUpdateInput>
    /**
     * Choose, which reportTouristPoint to update.
     */
    where: reportTouristPointWhereUniqueInput
  }

  /**
   * reportTouristPoint updateMany
   */
  export type reportTouristPointUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reportTouristPoints.
     */
    data: XOR<reportTouristPointUpdateManyMutationInput, reportTouristPointUncheckedUpdateManyInput>
    /**
     * Filter which reportTouristPoints to update
     */
    where?: reportTouristPointWhereInput
    /**
     * Limit how many reportTouristPoints to update.
     */
    limit?: number
  }

  /**
   * reportTouristPoint upsert
   */
  export type reportTouristPointUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportTouristPoint
     */
    select?: reportTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportTouristPoint
     */
    omit?: reportTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportTouristPointInclude<ExtArgs> | null
    /**
     * The filter to search for the reportTouristPoint to update in case it exists.
     */
    where: reportTouristPointWhereUniqueInput
    /**
     * In case the reportTouristPoint found by the `where` argument doesn't exist, create a new reportTouristPoint with this data.
     */
    create: XOR<reportTouristPointCreateInput, reportTouristPointUncheckedCreateInput>
    /**
     * In case the reportTouristPoint was found with the provided `where` argument, update it with this data.
     */
    update: XOR<reportTouristPointUpdateInput, reportTouristPointUncheckedUpdateInput>
  }

  /**
   * reportTouristPoint delete
   */
  export type reportTouristPointDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportTouristPoint
     */
    select?: reportTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportTouristPoint
     */
    omit?: reportTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportTouristPointInclude<ExtArgs> | null
    /**
     * Filter which reportTouristPoint to delete.
     */
    where: reportTouristPointWhereUniqueInput
  }

  /**
   * reportTouristPoint deleteMany
   */
  export type reportTouristPointDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reportTouristPoints to delete
     */
    where?: reportTouristPointWhereInput
    /**
     * Limit how many reportTouristPoints to delete.
     */
    limit?: number
  }

  /**
   * reportTouristPoint without action
   */
  export type reportTouristPointDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportTouristPoint
     */
    select?: reportTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportTouristPoint
     */
    omit?: reportTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportTouristPointInclude<ExtArgs> | null
  }


  /**
   * Model reportCommercialPoint
   */

  export type AggregateReportCommercialPoint = {
    _count: ReportCommercialPointCountAggregateOutputType | null
    _min: ReportCommercialPointMinAggregateOutputType | null
    _max: ReportCommercialPointMaxAggregateOutputType | null
  }

  export type ReportCommercialPointMinAggregateOutputType = {
    id: string | null
    content: string | null
    idCommercialPoint: string | null
    idUserReport: string | null
  }

  export type ReportCommercialPointMaxAggregateOutputType = {
    id: string | null
    content: string | null
    idCommercialPoint: string | null
    idUserReport: string | null
  }

  export type ReportCommercialPointCountAggregateOutputType = {
    id: number
    content: number
    idCommercialPoint: number
    idUserReport: number
    _all: number
  }


  export type ReportCommercialPointMinAggregateInputType = {
    id?: true
    content?: true
    idCommercialPoint?: true
    idUserReport?: true
  }

  export type ReportCommercialPointMaxAggregateInputType = {
    id?: true
    content?: true
    idCommercialPoint?: true
    idUserReport?: true
  }

  export type ReportCommercialPointCountAggregateInputType = {
    id?: true
    content?: true
    idCommercialPoint?: true
    idUserReport?: true
    _all?: true
  }

  export type ReportCommercialPointAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reportCommercialPoint to aggregate.
     */
    where?: reportCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportCommercialPoints to fetch.
     */
    orderBy?: reportCommercialPointOrderByWithRelationInput | reportCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: reportCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportCommercialPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reportCommercialPoints
    **/
    _count?: true | ReportCommercialPointCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReportCommercialPointMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReportCommercialPointMaxAggregateInputType
  }

  export type GetReportCommercialPointAggregateType<T extends ReportCommercialPointAggregateArgs> = {
        [P in keyof T & keyof AggregateReportCommercialPoint]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReportCommercialPoint[P]>
      : GetScalarType<T[P], AggregateReportCommercialPoint[P]>
  }




  export type reportCommercialPointGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportCommercialPointWhereInput
    orderBy?: reportCommercialPointOrderByWithAggregationInput | reportCommercialPointOrderByWithAggregationInput[]
    by: ReportCommercialPointScalarFieldEnum[] | ReportCommercialPointScalarFieldEnum
    having?: reportCommercialPointScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReportCommercialPointCountAggregateInputType | true
    _min?: ReportCommercialPointMinAggregateInputType
    _max?: ReportCommercialPointMaxAggregateInputType
  }

  export type ReportCommercialPointGroupByOutputType = {
    id: string
    content: string
    idCommercialPoint: string
    idUserReport: string
    _count: ReportCommercialPointCountAggregateOutputType | null
    _min: ReportCommercialPointMinAggregateOutputType | null
    _max: ReportCommercialPointMaxAggregateOutputType | null
  }

  type GetReportCommercialPointGroupByPayload<T extends reportCommercialPointGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReportCommercialPointGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReportCommercialPointGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReportCommercialPointGroupByOutputType[P]>
            : GetScalarType<T[P], ReportCommercialPointGroupByOutputType[P]>
        }
      >
    >


  export type reportCommercialPointSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    idCommercialPoint?: boolean
    idUserReport?: boolean
    userReportCommercialPointByIdCommercialPoint?: boolean | Ponto_ComercialDefaultArgs<ExtArgs>
    userReportCommercialPointByIdUserReport?: boolean | User_ClientDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reportCommercialPoint"]>



  export type reportCommercialPointSelectScalar = {
    id?: boolean
    content?: boolean
    idCommercialPoint?: boolean
    idUserReport?: boolean
  }

  export type reportCommercialPointOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "content" | "idCommercialPoint" | "idUserReport", ExtArgs["result"]["reportCommercialPoint"]>
  export type reportCommercialPointInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userReportCommercialPointByIdCommercialPoint?: boolean | Ponto_ComercialDefaultArgs<ExtArgs>
    userReportCommercialPointByIdUserReport?: boolean | User_ClientDefaultArgs<ExtArgs>
  }

  export type $reportCommercialPointPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "reportCommercialPoint"
    objects: {
      userReportCommercialPointByIdCommercialPoint: Prisma.$Ponto_ComercialPayload<ExtArgs>
      userReportCommercialPointByIdUserReport: Prisma.$User_ClientPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      content: string
      idCommercialPoint: string
      idUserReport: string
    }, ExtArgs["result"]["reportCommercialPoint"]>
    composites: {}
  }

  type reportCommercialPointGetPayload<S extends boolean | null | undefined | reportCommercialPointDefaultArgs> = $Result.GetResult<Prisma.$reportCommercialPointPayload, S>

  type reportCommercialPointCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<reportCommercialPointFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReportCommercialPointCountAggregateInputType | true
    }

  export interface reportCommercialPointDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['reportCommercialPoint'], meta: { name: 'reportCommercialPoint' } }
    /**
     * Find zero or one ReportCommercialPoint that matches the filter.
     * @param {reportCommercialPointFindUniqueArgs} args - Arguments to find a ReportCommercialPoint
     * @example
     * // Get one ReportCommercialPoint
     * const reportCommercialPoint = await prisma.reportCommercialPoint.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends reportCommercialPointFindUniqueArgs>(args: SelectSubset<T, reportCommercialPointFindUniqueArgs<ExtArgs>>): Prisma__reportCommercialPointClient<$Result.GetResult<Prisma.$reportCommercialPointPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReportCommercialPoint that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {reportCommercialPointFindUniqueOrThrowArgs} args - Arguments to find a ReportCommercialPoint
     * @example
     * // Get one ReportCommercialPoint
     * const reportCommercialPoint = await prisma.reportCommercialPoint.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends reportCommercialPointFindUniqueOrThrowArgs>(args: SelectSubset<T, reportCommercialPointFindUniqueOrThrowArgs<ExtArgs>>): Prisma__reportCommercialPointClient<$Result.GetResult<Prisma.$reportCommercialPointPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReportCommercialPoint that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportCommercialPointFindFirstArgs} args - Arguments to find a ReportCommercialPoint
     * @example
     * // Get one ReportCommercialPoint
     * const reportCommercialPoint = await prisma.reportCommercialPoint.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends reportCommercialPointFindFirstArgs>(args?: SelectSubset<T, reportCommercialPointFindFirstArgs<ExtArgs>>): Prisma__reportCommercialPointClient<$Result.GetResult<Prisma.$reportCommercialPointPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReportCommercialPoint that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportCommercialPointFindFirstOrThrowArgs} args - Arguments to find a ReportCommercialPoint
     * @example
     * // Get one ReportCommercialPoint
     * const reportCommercialPoint = await prisma.reportCommercialPoint.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends reportCommercialPointFindFirstOrThrowArgs>(args?: SelectSubset<T, reportCommercialPointFindFirstOrThrowArgs<ExtArgs>>): Prisma__reportCommercialPointClient<$Result.GetResult<Prisma.$reportCommercialPointPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReportCommercialPoints that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportCommercialPointFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReportCommercialPoints
     * const reportCommercialPoints = await prisma.reportCommercialPoint.findMany()
     * 
     * // Get first 10 ReportCommercialPoints
     * const reportCommercialPoints = await prisma.reportCommercialPoint.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reportCommercialPointWithIdOnly = await prisma.reportCommercialPoint.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends reportCommercialPointFindManyArgs>(args?: SelectSubset<T, reportCommercialPointFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportCommercialPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReportCommercialPoint.
     * @param {reportCommercialPointCreateArgs} args - Arguments to create a ReportCommercialPoint.
     * @example
     * // Create one ReportCommercialPoint
     * const ReportCommercialPoint = await prisma.reportCommercialPoint.create({
     *   data: {
     *     // ... data to create a ReportCommercialPoint
     *   }
     * })
     * 
     */
    create<T extends reportCommercialPointCreateArgs>(args: SelectSubset<T, reportCommercialPointCreateArgs<ExtArgs>>): Prisma__reportCommercialPointClient<$Result.GetResult<Prisma.$reportCommercialPointPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReportCommercialPoints.
     * @param {reportCommercialPointCreateManyArgs} args - Arguments to create many ReportCommercialPoints.
     * @example
     * // Create many ReportCommercialPoints
     * const reportCommercialPoint = await prisma.reportCommercialPoint.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends reportCommercialPointCreateManyArgs>(args?: SelectSubset<T, reportCommercialPointCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ReportCommercialPoint.
     * @param {reportCommercialPointDeleteArgs} args - Arguments to delete one ReportCommercialPoint.
     * @example
     * // Delete one ReportCommercialPoint
     * const ReportCommercialPoint = await prisma.reportCommercialPoint.delete({
     *   where: {
     *     // ... filter to delete one ReportCommercialPoint
     *   }
     * })
     * 
     */
    delete<T extends reportCommercialPointDeleteArgs>(args: SelectSubset<T, reportCommercialPointDeleteArgs<ExtArgs>>): Prisma__reportCommercialPointClient<$Result.GetResult<Prisma.$reportCommercialPointPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReportCommercialPoint.
     * @param {reportCommercialPointUpdateArgs} args - Arguments to update one ReportCommercialPoint.
     * @example
     * // Update one ReportCommercialPoint
     * const reportCommercialPoint = await prisma.reportCommercialPoint.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends reportCommercialPointUpdateArgs>(args: SelectSubset<T, reportCommercialPointUpdateArgs<ExtArgs>>): Prisma__reportCommercialPointClient<$Result.GetResult<Prisma.$reportCommercialPointPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReportCommercialPoints.
     * @param {reportCommercialPointDeleteManyArgs} args - Arguments to filter ReportCommercialPoints to delete.
     * @example
     * // Delete a few ReportCommercialPoints
     * const { count } = await prisma.reportCommercialPoint.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends reportCommercialPointDeleteManyArgs>(args?: SelectSubset<T, reportCommercialPointDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReportCommercialPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportCommercialPointUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReportCommercialPoints
     * const reportCommercialPoint = await prisma.reportCommercialPoint.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends reportCommercialPointUpdateManyArgs>(args: SelectSubset<T, reportCommercialPointUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ReportCommercialPoint.
     * @param {reportCommercialPointUpsertArgs} args - Arguments to update or create a ReportCommercialPoint.
     * @example
     * // Update or create a ReportCommercialPoint
     * const reportCommercialPoint = await prisma.reportCommercialPoint.upsert({
     *   create: {
     *     // ... data to create a ReportCommercialPoint
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReportCommercialPoint we want to update
     *   }
     * })
     */
    upsert<T extends reportCommercialPointUpsertArgs>(args: SelectSubset<T, reportCommercialPointUpsertArgs<ExtArgs>>): Prisma__reportCommercialPointClient<$Result.GetResult<Prisma.$reportCommercialPointPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReportCommercialPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportCommercialPointCountArgs} args - Arguments to filter ReportCommercialPoints to count.
     * @example
     * // Count the number of ReportCommercialPoints
     * const count = await prisma.reportCommercialPoint.count({
     *   where: {
     *     // ... the filter for the ReportCommercialPoints we want to count
     *   }
     * })
    **/
    count<T extends reportCommercialPointCountArgs>(
      args?: Subset<T, reportCommercialPointCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReportCommercialPointCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReportCommercialPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportCommercialPointAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReportCommercialPointAggregateArgs>(args: Subset<T, ReportCommercialPointAggregateArgs>): Prisma.PrismaPromise<GetReportCommercialPointAggregateType<T>>

    /**
     * Group by ReportCommercialPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportCommercialPointGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends reportCommercialPointGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: reportCommercialPointGroupByArgs['orderBy'] }
        : { orderBy?: reportCommercialPointGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, reportCommercialPointGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReportCommercialPointGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the reportCommercialPoint model
   */
  readonly fields: reportCommercialPointFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for reportCommercialPoint.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__reportCommercialPointClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userReportCommercialPointByIdCommercialPoint<T extends Ponto_ComercialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_ComercialDefaultArgs<ExtArgs>>): Prisma__Ponto_ComercialClient<$Result.GetResult<Prisma.$Ponto_ComercialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userReportCommercialPointByIdUserReport<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the reportCommercialPoint model
   */
  interface reportCommercialPointFieldRefs {
    readonly id: FieldRef<"reportCommercialPoint", 'String'>
    readonly content: FieldRef<"reportCommercialPoint", 'String'>
    readonly idCommercialPoint: FieldRef<"reportCommercialPoint", 'String'>
    readonly idUserReport: FieldRef<"reportCommercialPoint", 'String'>
  }
    

  // Custom InputTypes
  /**
   * reportCommercialPoint findUnique
   */
  export type reportCommercialPointFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportCommercialPoint
     */
    select?: reportCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportCommercialPoint
     */
    omit?: reportCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which reportCommercialPoint to fetch.
     */
    where: reportCommercialPointWhereUniqueInput
  }

  /**
   * reportCommercialPoint findUniqueOrThrow
   */
  export type reportCommercialPointFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportCommercialPoint
     */
    select?: reportCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportCommercialPoint
     */
    omit?: reportCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which reportCommercialPoint to fetch.
     */
    where: reportCommercialPointWhereUniqueInput
  }

  /**
   * reportCommercialPoint findFirst
   */
  export type reportCommercialPointFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportCommercialPoint
     */
    select?: reportCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportCommercialPoint
     */
    omit?: reportCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which reportCommercialPoint to fetch.
     */
    where?: reportCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportCommercialPoints to fetch.
     */
    orderBy?: reportCommercialPointOrderByWithRelationInput | reportCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reportCommercialPoints.
     */
    cursor?: reportCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportCommercialPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reportCommercialPoints.
     */
    distinct?: ReportCommercialPointScalarFieldEnum | ReportCommercialPointScalarFieldEnum[]
  }

  /**
   * reportCommercialPoint findFirstOrThrow
   */
  export type reportCommercialPointFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportCommercialPoint
     */
    select?: reportCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportCommercialPoint
     */
    omit?: reportCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which reportCommercialPoint to fetch.
     */
    where?: reportCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportCommercialPoints to fetch.
     */
    orderBy?: reportCommercialPointOrderByWithRelationInput | reportCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reportCommercialPoints.
     */
    cursor?: reportCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportCommercialPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reportCommercialPoints.
     */
    distinct?: ReportCommercialPointScalarFieldEnum | ReportCommercialPointScalarFieldEnum[]
  }

  /**
   * reportCommercialPoint findMany
   */
  export type reportCommercialPointFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportCommercialPoint
     */
    select?: reportCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportCommercialPoint
     */
    omit?: reportCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportCommercialPointInclude<ExtArgs> | null
    /**
     * Filter, which reportCommercialPoints to fetch.
     */
    where?: reportCommercialPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportCommercialPoints to fetch.
     */
    orderBy?: reportCommercialPointOrderByWithRelationInput | reportCommercialPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reportCommercialPoints.
     */
    cursor?: reportCommercialPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportCommercialPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportCommercialPoints.
     */
    skip?: number
    distinct?: ReportCommercialPointScalarFieldEnum | ReportCommercialPointScalarFieldEnum[]
  }

  /**
   * reportCommercialPoint create
   */
  export type reportCommercialPointCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportCommercialPoint
     */
    select?: reportCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportCommercialPoint
     */
    omit?: reportCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportCommercialPointInclude<ExtArgs> | null
    /**
     * The data needed to create a reportCommercialPoint.
     */
    data: XOR<reportCommercialPointCreateInput, reportCommercialPointUncheckedCreateInput>
  }

  /**
   * reportCommercialPoint createMany
   */
  export type reportCommercialPointCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reportCommercialPoints.
     */
    data: reportCommercialPointCreateManyInput | reportCommercialPointCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * reportCommercialPoint update
   */
  export type reportCommercialPointUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportCommercialPoint
     */
    select?: reportCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportCommercialPoint
     */
    omit?: reportCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportCommercialPointInclude<ExtArgs> | null
    /**
     * The data needed to update a reportCommercialPoint.
     */
    data: XOR<reportCommercialPointUpdateInput, reportCommercialPointUncheckedUpdateInput>
    /**
     * Choose, which reportCommercialPoint to update.
     */
    where: reportCommercialPointWhereUniqueInput
  }

  /**
   * reportCommercialPoint updateMany
   */
  export type reportCommercialPointUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reportCommercialPoints.
     */
    data: XOR<reportCommercialPointUpdateManyMutationInput, reportCommercialPointUncheckedUpdateManyInput>
    /**
     * Filter which reportCommercialPoints to update
     */
    where?: reportCommercialPointWhereInput
    /**
     * Limit how many reportCommercialPoints to update.
     */
    limit?: number
  }

  /**
   * reportCommercialPoint upsert
   */
  export type reportCommercialPointUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportCommercialPoint
     */
    select?: reportCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportCommercialPoint
     */
    omit?: reportCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportCommercialPointInclude<ExtArgs> | null
    /**
     * The filter to search for the reportCommercialPoint to update in case it exists.
     */
    where: reportCommercialPointWhereUniqueInput
    /**
     * In case the reportCommercialPoint found by the `where` argument doesn't exist, create a new reportCommercialPoint with this data.
     */
    create: XOR<reportCommercialPointCreateInput, reportCommercialPointUncheckedCreateInput>
    /**
     * In case the reportCommercialPoint was found with the provided `where` argument, update it with this data.
     */
    update: XOR<reportCommercialPointUpdateInput, reportCommercialPointUncheckedUpdateInput>
  }

  /**
   * reportCommercialPoint delete
   */
  export type reportCommercialPointDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportCommercialPoint
     */
    select?: reportCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportCommercialPoint
     */
    omit?: reportCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportCommercialPointInclude<ExtArgs> | null
    /**
     * Filter which reportCommercialPoint to delete.
     */
    where: reportCommercialPointWhereUniqueInput
  }

  /**
   * reportCommercialPoint deleteMany
   */
  export type reportCommercialPointDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reportCommercialPoints to delete
     */
    where?: reportCommercialPointWhereInput
    /**
     * Limit how many reportCommercialPoints to delete.
     */
    limit?: number
  }

  /**
   * reportCommercialPoint without action
   */
  export type reportCommercialPointDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportCommercialPoint
     */
    select?: reportCommercialPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportCommercialPoint
     */
    omit?: reportCommercialPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportCommercialPointInclude<ExtArgs> | null
  }


  /**
   * Model reportRoadMap
   */

  export type AggregateReportRoadMap = {
    _count: ReportRoadMapCountAggregateOutputType | null
    _min: ReportRoadMapMinAggregateOutputType | null
    _max: ReportRoadMapMaxAggregateOutputType | null
  }

  export type ReportRoadMapMinAggregateOutputType = {
    id: string | null
    content: string | null
    idRoadMap: string | null
    idUserReport: string | null
  }

  export type ReportRoadMapMaxAggregateOutputType = {
    id: string | null
    content: string | null
    idRoadMap: string | null
    idUserReport: string | null
  }

  export type ReportRoadMapCountAggregateOutputType = {
    id: number
    content: number
    idRoadMap: number
    idUserReport: number
    _all: number
  }


  export type ReportRoadMapMinAggregateInputType = {
    id?: true
    content?: true
    idRoadMap?: true
    idUserReport?: true
  }

  export type ReportRoadMapMaxAggregateInputType = {
    id?: true
    content?: true
    idRoadMap?: true
    idUserReport?: true
  }

  export type ReportRoadMapCountAggregateInputType = {
    id?: true
    content?: true
    idRoadMap?: true
    idUserReport?: true
    _all?: true
  }

  export type ReportRoadMapAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reportRoadMap to aggregate.
     */
    where?: reportRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportRoadMaps to fetch.
     */
    orderBy?: reportRoadMapOrderByWithRelationInput | reportRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: reportRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportRoadMaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reportRoadMaps
    **/
    _count?: true | ReportRoadMapCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReportRoadMapMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReportRoadMapMaxAggregateInputType
  }

  export type GetReportRoadMapAggregateType<T extends ReportRoadMapAggregateArgs> = {
        [P in keyof T & keyof AggregateReportRoadMap]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReportRoadMap[P]>
      : GetScalarType<T[P], AggregateReportRoadMap[P]>
  }




  export type reportRoadMapGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportRoadMapWhereInput
    orderBy?: reportRoadMapOrderByWithAggregationInput | reportRoadMapOrderByWithAggregationInput[]
    by: ReportRoadMapScalarFieldEnum[] | ReportRoadMapScalarFieldEnum
    having?: reportRoadMapScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReportRoadMapCountAggregateInputType | true
    _min?: ReportRoadMapMinAggregateInputType
    _max?: ReportRoadMapMaxAggregateInputType
  }

  export type ReportRoadMapGroupByOutputType = {
    id: string
    content: string
    idRoadMap: string
    idUserReport: string
    _count: ReportRoadMapCountAggregateOutputType | null
    _min: ReportRoadMapMinAggregateOutputType | null
    _max: ReportRoadMapMaxAggregateOutputType | null
  }

  type GetReportRoadMapGroupByPayload<T extends reportRoadMapGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReportRoadMapGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReportRoadMapGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReportRoadMapGroupByOutputType[P]>
            : GetScalarType<T[P], ReportRoadMapGroupByOutputType[P]>
        }
      >
    >


  export type reportRoadMapSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    idRoadMap?: boolean
    idUserReport?: boolean
    userReportRoadMapByIdRoadMap?: boolean | Travel_Road_MapDefaultArgs<ExtArgs>
    userReportRoadMapByIdUserReport?: boolean | User_ClientDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reportRoadMap"]>



  export type reportRoadMapSelectScalar = {
    id?: boolean
    content?: boolean
    idRoadMap?: boolean
    idUserReport?: boolean
  }

  export type reportRoadMapOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "content" | "idRoadMap" | "idUserReport", ExtArgs["result"]["reportRoadMap"]>
  export type reportRoadMapInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userReportRoadMapByIdRoadMap?: boolean | Travel_Road_MapDefaultArgs<ExtArgs>
    userReportRoadMapByIdUserReport?: boolean | User_ClientDefaultArgs<ExtArgs>
  }

  export type $reportRoadMapPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "reportRoadMap"
    objects: {
      userReportRoadMapByIdRoadMap: Prisma.$Travel_Road_MapPayload<ExtArgs>
      userReportRoadMapByIdUserReport: Prisma.$User_ClientPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      content: string
      idRoadMap: string
      idUserReport: string
    }, ExtArgs["result"]["reportRoadMap"]>
    composites: {}
  }

  type reportRoadMapGetPayload<S extends boolean | null | undefined | reportRoadMapDefaultArgs> = $Result.GetResult<Prisma.$reportRoadMapPayload, S>

  type reportRoadMapCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<reportRoadMapFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReportRoadMapCountAggregateInputType | true
    }

  export interface reportRoadMapDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['reportRoadMap'], meta: { name: 'reportRoadMap' } }
    /**
     * Find zero or one ReportRoadMap that matches the filter.
     * @param {reportRoadMapFindUniqueArgs} args - Arguments to find a ReportRoadMap
     * @example
     * // Get one ReportRoadMap
     * const reportRoadMap = await prisma.reportRoadMap.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends reportRoadMapFindUniqueArgs>(args: SelectSubset<T, reportRoadMapFindUniqueArgs<ExtArgs>>): Prisma__reportRoadMapClient<$Result.GetResult<Prisma.$reportRoadMapPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReportRoadMap that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {reportRoadMapFindUniqueOrThrowArgs} args - Arguments to find a ReportRoadMap
     * @example
     * // Get one ReportRoadMap
     * const reportRoadMap = await prisma.reportRoadMap.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends reportRoadMapFindUniqueOrThrowArgs>(args: SelectSubset<T, reportRoadMapFindUniqueOrThrowArgs<ExtArgs>>): Prisma__reportRoadMapClient<$Result.GetResult<Prisma.$reportRoadMapPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReportRoadMap that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportRoadMapFindFirstArgs} args - Arguments to find a ReportRoadMap
     * @example
     * // Get one ReportRoadMap
     * const reportRoadMap = await prisma.reportRoadMap.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends reportRoadMapFindFirstArgs>(args?: SelectSubset<T, reportRoadMapFindFirstArgs<ExtArgs>>): Prisma__reportRoadMapClient<$Result.GetResult<Prisma.$reportRoadMapPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReportRoadMap that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportRoadMapFindFirstOrThrowArgs} args - Arguments to find a ReportRoadMap
     * @example
     * // Get one ReportRoadMap
     * const reportRoadMap = await prisma.reportRoadMap.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends reportRoadMapFindFirstOrThrowArgs>(args?: SelectSubset<T, reportRoadMapFindFirstOrThrowArgs<ExtArgs>>): Prisma__reportRoadMapClient<$Result.GetResult<Prisma.$reportRoadMapPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReportRoadMaps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportRoadMapFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReportRoadMaps
     * const reportRoadMaps = await prisma.reportRoadMap.findMany()
     * 
     * // Get first 10 ReportRoadMaps
     * const reportRoadMaps = await prisma.reportRoadMap.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reportRoadMapWithIdOnly = await prisma.reportRoadMap.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends reportRoadMapFindManyArgs>(args?: SelectSubset<T, reportRoadMapFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportRoadMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReportRoadMap.
     * @param {reportRoadMapCreateArgs} args - Arguments to create a ReportRoadMap.
     * @example
     * // Create one ReportRoadMap
     * const ReportRoadMap = await prisma.reportRoadMap.create({
     *   data: {
     *     // ... data to create a ReportRoadMap
     *   }
     * })
     * 
     */
    create<T extends reportRoadMapCreateArgs>(args: SelectSubset<T, reportRoadMapCreateArgs<ExtArgs>>): Prisma__reportRoadMapClient<$Result.GetResult<Prisma.$reportRoadMapPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReportRoadMaps.
     * @param {reportRoadMapCreateManyArgs} args - Arguments to create many ReportRoadMaps.
     * @example
     * // Create many ReportRoadMaps
     * const reportRoadMap = await prisma.reportRoadMap.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends reportRoadMapCreateManyArgs>(args?: SelectSubset<T, reportRoadMapCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ReportRoadMap.
     * @param {reportRoadMapDeleteArgs} args - Arguments to delete one ReportRoadMap.
     * @example
     * // Delete one ReportRoadMap
     * const ReportRoadMap = await prisma.reportRoadMap.delete({
     *   where: {
     *     // ... filter to delete one ReportRoadMap
     *   }
     * })
     * 
     */
    delete<T extends reportRoadMapDeleteArgs>(args: SelectSubset<T, reportRoadMapDeleteArgs<ExtArgs>>): Prisma__reportRoadMapClient<$Result.GetResult<Prisma.$reportRoadMapPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReportRoadMap.
     * @param {reportRoadMapUpdateArgs} args - Arguments to update one ReportRoadMap.
     * @example
     * // Update one ReportRoadMap
     * const reportRoadMap = await prisma.reportRoadMap.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends reportRoadMapUpdateArgs>(args: SelectSubset<T, reportRoadMapUpdateArgs<ExtArgs>>): Prisma__reportRoadMapClient<$Result.GetResult<Prisma.$reportRoadMapPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReportRoadMaps.
     * @param {reportRoadMapDeleteManyArgs} args - Arguments to filter ReportRoadMaps to delete.
     * @example
     * // Delete a few ReportRoadMaps
     * const { count } = await prisma.reportRoadMap.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends reportRoadMapDeleteManyArgs>(args?: SelectSubset<T, reportRoadMapDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReportRoadMaps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportRoadMapUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReportRoadMaps
     * const reportRoadMap = await prisma.reportRoadMap.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends reportRoadMapUpdateManyArgs>(args: SelectSubset<T, reportRoadMapUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ReportRoadMap.
     * @param {reportRoadMapUpsertArgs} args - Arguments to update or create a ReportRoadMap.
     * @example
     * // Update or create a ReportRoadMap
     * const reportRoadMap = await prisma.reportRoadMap.upsert({
     *   create: {
     *     // ... data to create a ReportRoadMap
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReportRoadMap we want to update
     *   }
     * })
     */
    upsert<T extends reportRoadMapUpsertArgs>(args: SelectSubset<T, reportRoadMapUpsertArgs<ExtArgs>>): Prisma__reportRoadMapClient<$Result.GetResult<Prisma.$reportRoadMapPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReportRoadMaps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportRoadMapCountArgs} args - Arguments to filter ReportRoadMaps to count.
     * @example
     * // Count the number of ReportRoadMaps
     * const count = await prisma.reportRoadMap.count({
     *   where: {
     *     // ... the filter for the ReportRoadMaps we want to count
     *   }
     * })
    **/
    count<T extends reportRoadMapCountArgs>(
      args?: Subset<T, reportRoadMapCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReportRoadMapCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReportRoadMap.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportRoadMapAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReportRoadMapAggregateArgs>(args: Subset<T, ReportRoadMapAggregateArgs>): Prisma.PrismaPromise<GetReportRoadMapAggregateType<T>>

    /**
     * Group by ReportRoadMap.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportRoadMapGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends reportRoadMapGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: reportRoadMapGroupByArgs['orderBy'] }
        : { orderBy?: reportRoadMapGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, reportRoadMapGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReportRoadMapGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the reportRoadMap model
   */
  readonly fields: reportRoadMapFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for reportRoadMap.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__reportRoadMapClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userReportRoadMapByIdRoadMap<T extends Travel_Road_MapDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Travel_Road_MapDefaultArgs<ExtArgs>>): Prisma__Travel_Road_MapClient<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userReportRoadMapByIdUserReport<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the reportRoadMap model
   */
  interface reportRoadMapFieldRefs {
    readonly id: FieldRef<"reportRoadMap", 'String'>
    readonly content: FieldRef<"reportRoadMap", 'String'>
    readonly idRoadMap: FieldRef<"reportRoadMap", 'String'>
    readonly idUserReport: FieldRef<"reportRoadMap", 'String'>
  }
    

  // Custom InputTypes
  /**
   * reportRoadMap findUnique
   */
  export type reportRoadMapFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportRoadMap
     */
    select?: reportRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportRoadMap
     */
    omit?: reportRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which reportRoadMap to fetch.
     */
    where: reportRoadMapWhereUniqueInput
  }

  /**
   * reportRoadMap findUniqueOrThrow
   */
  export type reportRoadMapFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportRoadMap
     */
    select?: reportRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportRoadMap
     */
    omit?: reportRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which reportRoadMap to fetch.
     */
    where: reportRoadMapWhereUniqueInput
  }

  /**
   * reportRoadMap findFirst
   */
  export type reportRoadMapFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportRoadMap
     */
    select?: reportRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportRoadMap
     */
    omit?: reportRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which reportRoadMap to fetch.
     */
    where?: reportRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportRoadMaps to fetch.
     */
    orderBy?: reportRoadMapOrderByWithRelationInput | reportRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reportRoadMaps.
     */
    cursor?: reportRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportRoadMaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reportRoadMaps.
     */
    distinct?: ReportRoadMapScalarFieldEnum | ReportRoadMapScalarFieldEnum[]
  }

  /**
   * reportRoadMap findFirstOrThrow
   */
  export type reportRoadMapFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportRoadMap
     */
    select?: reportRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportRoadMap
     */
    omit?: reportRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which reportRoadMap to fetch.
     */
    where?: reportRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportRoadMaps to fetch.
     */
    orderBy?: reportRoadMapOrderByWithRelationInput | reportRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reportRoadMaps.
     */
    cursor?: reportRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportRoadMaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reportRoadMaps.
     */
    distinct?: ReportRoadMapScalarFieldEnum | ReportRoadMapScalarFieldEnum[]
  }

  /**
   * reportRoadMap findMany
   */
  export type reportRoadMapFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportRoadMap
     */
    select?: reportRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportRoadMap
     */
    omit?: reportRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which reportRoadMaps to fetch.
     */
    where?: reportRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportRoadMaps to fetch.
     */
    orderBy?: reportRoadMapOrderByWithRelationInput | reportRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reportRoadMaps.
     */
    cursor?: reportRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportRoadMaps.
     */
    skip?: number
    distinct?: ReportRoadMapScalarFieldEnum | ReportRoadMapScalarFieldEnum[]
  }

  /**
   * reportRoadMap create
   */
  export type reportRoadMapCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportRoadMap
     */
    select?: reportRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportRoadMap
     */
    omit?: reportRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportRoadMapInclude<ExtArgs> | null
    /**
     * The data needed to create a reportRoadMap.
     */
    data: XOR<reportRoadMapCreateInput, reportRoadMapUncheckedCreateInput>
  }

  /**
   * reportRoadMap createMany
   */
  export type reportRoadMapCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reportRoadMaps.
     */
    data: reportRoadMapCreateManyInput | reportRoadMapCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * reportRoadMap update
   */
  export type reportRoadMapUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportRoadMap
     */
    select?: reportRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportRoadMap
     */
    omit?: reportRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportRoadMapInclude<ExtArgs> | null
    /**
     * The data needed to update a reportRoadMap.
     */
    data: XOR<reportRoadMapUpdateInput, reportRoadMapUncheckedUpdateInput>
    /**
     * Choose, which reportRoadMap to update.
     */
    where: reportRoadMapWhereUniqueInput
  }

  /**
   * reportRoadMap updateMany
   */
  export type reportRoadMapUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reportRoadMaps.
     */
    data: XOR<reportRoadMapUpdateManyMutationInput, reportRoadMapUncheckedUpdateManyInput>
    /**
     * Filter which reportRoadMaps to update
     */
    where?: reportRoadMapWhereInput
    /**
     * Limit how many reportRoadMaps to update.
     */
    limit?: number
  }

  /**
   * reportRoadMap upsert
   */
  export type reportRoadMapUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportRoadMap
     */
    select?: reportRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportRoadMap
     */
    omit?: reportRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportRoadMapInclude<ExtArgs> | null
    /**
     * The filter to search for the reportRoadMap to update in case it exists.
     */
    where: reportRoadMapWhereUniqueInput
    /**
     * In case the reportRoadMap found by the `where` argument doesn't exist, create a new reportRoadMap with this data.
     */
    create: XOR<reportRoadMapCreateInput, reportRoadMapUncheckedCreateInput>
    /**
     * In case the reportRoadMap was found with the provided `where` argument, update it with this data.
     */
    update: XOR<reportRoadMapUpdateInput, reportRoadMapUncheckedUpdateInput>
  }

  /**
   * reportRoadMap delete
   */
  export type reportRoadMapDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportRoadMap
     */
    select?: reportRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportRoadMap
     */
    omit?: reportRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportRoadMapInclude<ExtArgs> | null
    /**
     * Filter which reportRoadMap to delete.
     */
    where: reportRoadMapWhereUniqueInput
  }

  /**
   * reportRoadMap deleteMany
   */
  export type reportRoadMapDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reportRoadMaps to delete
     */
    where?: reportRoadMapWhereInput
    /**
     * Limit how many reportRoadMaps to delete.
     */
    limit?: number
  }

  /**
   * reportRoadMap without action
   */
  export type reportRoadMapDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportRoadMap
     */
    select?: reportRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportRoadMap
     */
    omit?: reportRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportRoadMapInclude<ExtArgs> | null
  }


  /**
   * Model notificationRoadMap
   */

  export type AggregateNotificationRoadMap = {
    _count: NotificationRoadMapCountAggregateOutputType | null
    _min: NotificationRoadMapMinAggregateOutputType | null
    _max: NotificationRoadMapMaxAggregateOutputType | null
  }

  export type NotificationRoadMapMinAggregateOutputType = {
    id: string | null
    idClient: string | null
    idRoadMap: string | null
  }

  export type NotificationRoadMapMaxAggregateOutputType = {
    id: string | null
    idClient: string | null
    idRoadMap: string | null
  }

  export type NotificationRoadMapCountAggregateOutputType = {
    id: number
    idClient: number
    idRoadMap: number
    _all: number
  }


  export type NotificationRoadMapMinAggregateInputType = {
    id?: true
    idClient?: true
    idRoadMap?: true
  }

  export type NotificationRoadMapMaxAggregateInputType = {
    id?: true
    idClient?: true
    idRoadMap?: true
  }

  export type NotificationRoadMapCountAggregateInputType = {
    id?: true
    idClient?: true
    idRoadMap?: true
    _all?: true
  }

  export type NotificationRoadMapAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notificationRoadMap to aggregate.
     */
    where?: notificationRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notificationRoadMaps to fetch.
     */
    orderBy?: notificationRoadMapOrderByWithRelationInput | notificationRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: notificationRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notificationRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notificationRoadMaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned notificationRoadMaps
    **/
    _count?: true | NotificationRoadMapCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationRoadMapMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationRoadMapMaxAggregateInputType
  }

  export type GetNotificationRoadMapAggregateType<T extends NotificationRoadMapAggregateArgs> = {
        [P in keyof T & keyof AggregateNotificationRoadMap]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotificationRoadMap[P]>
      : GetScalarType<T[P], AggregateNotificationRoadMap[P]>
  }




  export type notificationRoadMapGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationRoadMapWhereInput
    orderBy?: notificationRoadMapOrderByWithAggregationInput | notificationRoadMapOrderByWithAggregationInput[]
    by: NotificationRoadMapScalarFieldEnum[] | NotificationRoadMapScalarFieldEnum
    having?: notificationRoadMapScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationRoadMapCountAggregateInputType | true
    _min?: NotificationRoadMapMinAggregateInputType
    _max?: NotificationRoadMapMaxAggregateInputType
  }

  export type NotificationRoadMapGroupByOutputType = {
    id: string
    idClient: string
    idRoadMap: string
    _count: NotificationRoadMapCountAggregateOutputType | null
    _min: NotificationRoadMapMinAggregateOutputType | null
    _max: NotificationRoadMapMaxAggregateOutputType | null
  }

  type GetNotificationRoadMapGroupByPayload<T extends notificationRoadMapGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationRoadMapGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationRoadMapGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationRoadMapGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationRoadMapGroupByOutputType[P]>
        }
      >
    >


  export type notificationRoadMapSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    idClient?: boolean
    idRoadMap?: boolean
    userNotificationRoadMapByIdClient?: boolean | User_ClientDefaultArgs<ExtArgs>
    userNotificationRoadMapByIdRoadMap?: boolean | Travel_Road_MapDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notificationRoadMap"]>



  export type notificationRoadMapSelectScalar = {
    id?: boolean
    idClient?: boolean
    idRoadMap?: boolean
  }

  export type notificationRoadMapOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "idClient" | "idRoadMap", ExtArgs["result"]["notificationRoadMap"]>
  export type notificationRoadMapInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userNotificationRoadMapByIdClient?: boolean | User_ClientDefaultArgs<ExtArgs>
    userNotificationRoadMapByIdRoadMap?: boolean | Travel_Road_MapDefaultArgs<ExtArgs>
  }

  export type $notificationRoadMapPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "notificationRoadMap"
    objects: {
      userNotificationRoadMapByIdClient: Prisma.$User_ClientPayload<ExtArgs>
      userNotificationRoadMapByIdRoadMap: Prisma.$Travel_Road_MapPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      idClient: string
      idRoadMap: string
    }, ExtArgs["result"]["notificationRoadMap"]>
    composites: {}
  }

  type notificationRoadMapGetPayload<S extends boolean | null | undefined | notificationRoadMapDefaultArgs> = $Result.GetResult<Prisma.$notificationRoadMapPayload, S>

  type notificationRoadMapCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<notificationRoadMapFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificationRoadMapCountAggregateInputType | true
    }

  export interface notificationRoadMapDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['notificationRoadMap'], meta: { name: 'notificationRoadMap' } }
    /**
     * Find zero or one NotificationRoadMap that matches the filter.
     * @param {notificationRoadMapFindUniqueArgs} args - Arguments to find a NotificationRoadMap
     * @example
     * // Get one NotificationRoadMap
     * const notificationRoadMap = await prisma.notificationRoadMap.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends notificationRoadMapFindUniqueArgs>(args: SelectSubset<T, notificationRoadMapFindUniqueArgs<ExtArgs>>): Prisma__notificationRoadMapClient<$Result.GetResult<Prisma.$notificationRoadMapPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one NotificationRoadMap that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {notificationRoadMapFindUniqueOrThrowArgs} args - Arguments to find a NotificationRoadMap
     * @example
     * // Get one NotificationRoadMap
     * const notificationRoadMap = await prisma.notificationRoadMap.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends notificationRoadMapFindUniqueOrThrowArgs>(args: SelectSubset<T, notificationRoadMapFindUniqueOrThrowArgs<ExtArgs>>): Prisma__notificationRoadMapClient<$Result.GetResult<Prisma.$notificationRoadMapPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first NotificationRoadMap that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationRoadMapFindFirstArgs} args - Arguments to find a NotificationRoadMap
     * @example
     * // Get one NotificationRoadMap
     * const notificationRoadMap = await prisma.notificationRoadMap.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends notificationRoadMapFindFirstArgs>(args?: SelectSubset<T, notificationRoadMapFindFirstArgs<ExtArgs>>): Prisma__notificationRoadMapClient<$Result.GetResult<Prisma.$notificationRoadMapPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first NotificationRoadMap that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationRoadMapFindFirstOrThrowArgs} args - Arguments to find a NotificationRoadMap
     * @example
     * // Get one NotificationRoadMap
     * const notificationRoadMap = await prisma.notificationRoadMap.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends notificationRoadMapFindFirstOrThrowArgs>(args?: SelectSubset<T, notificationRoadMapFindFirstOrThrowArgs<ExtArgs>>): Prisma__notificationRoadMapClient<$Result.GetResult<Prisma.$notificationRoadMapPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more NotificationRoadMaps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationRoadMapFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all NotificationRoadMaps
     * const notificationRoadMaps = await prisma.notificationRoadMap.findMany()
     * 
     * // Get first 10 NotificationRoadMaps
     * const notificationRoadMaps = await prisma.notificationRoadMap.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationRoadMapWithIdOnly = await prisma.notificationRoadMap.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends notificationRoadMapFindManyArgs>(args?: SelectSubset<T, notificationRoadMapFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationRoadMapPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a NotificationRoadMap.
     * @param {notificationRoadMapCreateArgs} args - Arguments to create a NotificationRoadMap.
     * @example
     * // Create one NotificationRoadMap
     * const NotificationRoadMap = await prisma.notificationRoadMap.create({
     *   data: {
     *     // ... data to create a NotificationRoadMap
     *   }
     * })
     * 
     */
    create<T extends notificationRoadMapCreateArgs>(args: SelectSubset<T, notificationRoadMapCreateArgs<ExtArgs>>): Prisma__notificationRoadMapClient<$Result.GetResult<Prisma.$notificationRoadMapPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many NotificationRoadMaps.
     * @param {notificationRoadMapCreateManyArgs} args - Arguments to create many NotificationRoadMaps.
     * @example
     * // Create many NotificationRoadMaps
     * const notificationRoadMap = await prisma.notificationRoadMap.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends notificationRoadMapCreateManyArgs>(args?: SelectSubset<T, notificationRoadMapCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a NotificationRoadMap.
     * @param {notificationRoadMapDeleteArgs} args - Arguments to delete one NotificationRoadMap.
     * @example
     * // Delete one NotificationRoadMap
     * const NotificationRoadMap = await prisma.notificationRoadMap.delete({
     *   where: {
     *     // ... filter to delete one NotificationRoadMap
     *   }
     * })
     * 
     */
    delete<T extends notificationRoadMapDeleteArgs>(args: SelectSubset<T, notificationRoadMapDeleteArgs<ExtArgs>>): Prisma__notificationRoadMapClient<$Result.GetResult<Prisma.$notificationRoadMapPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one NotificationRoadMap.
     * @param {notificationRoadMapUpdateArgs} args - Arguments to update one NotificationRoadMap.
     * @example
     * // Update one NotificationRoadMap
     * const notificationRoadMap = await prisma.notificationRoadMap.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends notificationRoadMapUpdateArgs>(args: SelectSubset<T, notificationRoadMapUpdateArgs<ExtArgs>>): Prisma__notificationRoadMapClient<$Result.GetResult<Prisma.$notificationRoadMapPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more NotificationRoadMaps.
     * @param {notificationRoadMapDeleteManyArgs} args - Arguments to filter NotificationRoadMaps to delete.
     * @example
     * // Delete a few NotificationRoadMaps
     * const { count } = await prisma.notificationRoadMap.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends notificationRoadMapDeleteManyArgs>(args?: SelectSubset<T, notificationRoadMapDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more NotificationRoadMaps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationRoadMapUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many NotificationRoadMaps
     * const notificationRoadMap = await prisma.notificationRoadMap.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends notificationRoadMapUpdateManyArgs>(args: SelectSubset<T, notificationRoadMapUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one NotificationRoadMap.
     * @param {notificationRoadMapUpsertArgs} args - Arguments to update or create a NotificationRoadMap.
     * @example
     * // Update or create a NotificationRoadMap
     * const notificationRoadMap = await prisma.notificationRoadMap.upsert({
     *   create: {
     *     // ... data to create a NotificationRoadMap
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the NotificationRoadMap we want to update
     *   }
     * })
     */
    upsert<T extends notificationRoadMapUpsertArgs>(args: SelectSubset<T, notificationRoadMapUpsertArgs<ExtArgs>>): Prisma__notificationRoadMapClient<$Result.GetResult<Prisma.$notificationRoadMapPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of NotificationRoadMaps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationRoadMapCountArgs} args - Arguments to filter NotificationRoadMaps to count.
     * @example
     * // Count the number of NotificationRoadMaps
     * const count = await prisma.notificationRoadMap.count({
     *   where: {
     *     // ... the filter for the NotificationRoadMaps we want to count
     *   }
     * })
    **/
    count<T extends notificationRoadMapCountArgs>(
      args?: Subset<T, notificationRoadMapCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationRoadMapCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a NotificationRoadMap.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationRoadMapAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationRoadMapAggregateArgs>(args: Subset<T, NotificationRoadMapAggregateArgs>): Prisma.PrismaPromise<GetNotificationRoadMapAggregateType<T>>

    /**
     * Group by NotificationRoadMap.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationRoadMapGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends notificationRoadMapGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: notificationRoadMapGroupByArgs['orderBy'] }
        : { orderBy?: notificationRoadMapGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, notificationRoadMapGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationRoadMapGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the notificationRoadMap model
   */
  readonly fields: notificationRoadMapFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for notificationRoadMap.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__notificationRoadMapClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userNotificationRoadMapByIdClient<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userNotificationRoadMapByIdRoadMap<T extends Travel_Road_MapDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Travel_Road_MapDefaultArgs<ExtArgs>>): Prisma__Travel_Road_MapClient<$Result.GetResult<Prisma.$Travel_Road_MapPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the notificationRoadMap model
   */
  interface notificationRoadMapFieldRefs {
    readonly id: FieldRef<"notificationRoadMap", 'String'>
    readonly idClient: FieldRef<"notificationRoadMap", 'String'>
    readonly idRoadMap: FieldRef<"notificationRoadMap", 'String'>
  }
    

  // Custom InputTypes
  /**
   * notificationRoadMap findUnique
   */
  export type notificationRoadMapFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationRoadMap
     */
    select?: notificationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationRoadMap
     */
    omit?: notificationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which notificationRoadMap to fetch.
     */
    where: notificationRoadMapWhereUniqueInput
  }

  /**
   * notificationRoadMap findUniqueOrThrow
   */
  export type notificationRoadMapFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationRoadMap
     */
    select?: notificationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationRoadMap
     */
    omit?: notificationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which notificationRoadMap to fetch.
     */
    where: notificationRoadMapWhereUniqueInput
  }

  /**
   * notificationRoadMap findFirst
   */
  export type notificationRoadMapFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationRoadMap
     */
    select?: notificationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationRoadMap
     */
    omit?: notificationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which notificationRoadMap to fetch.
     */
    where?: notificationRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notificationRoadMaps to fetch.
     */
    orderBy?: notificationRoadMapOrderByWithRelationInput | notificationRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notificationRoadMaps.
     */
    cursor?: notificationRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notificationRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notificationRoadMaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notificationRoadMaps.
     */
    distinct?: NotificationRoadMapScalarFieldEnum | NotificationRoadMapScalarFieldEnum[]
  }

  /**
   * notificationRoadMap findFirstOrThrow
   */
  export type notificationRoadMapFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationRoadMap
     */
    select?: notificationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationRoadMap
     */
    omit?: notificationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which notificationRoadMap to fetch.
     */
    where?: notificationRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notificationRoadMaps to fetch.
     */
    orderBy?: notificationRoadMapOrderByWithRelationInput | notificationRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notificationRoadMaps.
     */
    cursor?: notificationRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notificationRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notificationRoadMaps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notificationRoadMaps.
     */
    distinct?: NotificationRoadMapScalarFieldEnum | NotificationRoadMapScalarFieldEnum[]
  }

  /**
   * notificationRoadMap findMany
   */
  export type notificationRoadMapFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationRoadMap
     */
    select?: notificationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationRoadMap
     */
    omit?: notificationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationRoadMapInclude<ExtArgs> | null
    /**
     * Filter, which notificationRoadMaps to fetch.
     */
    where?: notificationRoadMapWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notificationRoadMaps to fetch.
     */
    orderBy?: notificationRoadMapOrderByWithRelationInput | notificationRoadMapOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing notificationRoadMaps.
     */
    cursor?: notificationRoadMapWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notificationRoadMaps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notificationRoadMaps.
     */
    skip?: number
    distinct?: NotificationRoadMapScalarFieldEnum | NotificationRoadMapScalarFieldEnum[]
  }

  /**
   * notificationRoadMap create
   */
  export type notificationRoadMapCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationRoadMap
     */
    select?: notificationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationRoadMap
     */
    omit?: notificationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationRoadMapInclude<ExtArgs> | null
    /**
     * The data needed to create a notificationRoadMap.
     */
    data: XOR<notificationRoadMapCreateInput, notificationRoadMapUncheckedCreateInput>
  }

  /**
   * notificationRoadMap createMany
   */
  export type notificationRoadMapCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many notificationRoadMaps.
     */
    data: notificationRoadMapCreateManyInput | notificationRoadMapCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * notificationRoadMap update
   */
  export type notificationRoadMapUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationRoadMap
     */
    select?: notificationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationRoadMap
     */
    omit?: notificationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationRoadMapInclude<ExtArgs> | null
    /**
     * The data needed to update a notificationRoadMap.
     */
    data: XOR<notificationRoadMapUpdateInput, notificationRoadMapUncheckedUpdateInput>
    /**
     * Choose, which notificationRoadMap to update.
     */
    where: notificationRoadMapWhereUniqueInput
  }

  /**
   * notificationRoadMap updateMany
   */
  export type notificationRoadMapUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update notificationRoadMaps.
     */
    data: XOR<notificationRoadMapUpdateManyMutationInput, notificationRoadMapUncheckedUpdateManyInput>
    /**
     * Filter which notificationRoadMaps to update
     */
    where?: notificationRoadMapWhereInput
    /**
     * Limit how many notificationRoadMaps to update.
     */
    limit?: number
  }

  /**
   * notificationRoadMap upsert
   */
  export type notificationRoadMapUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationRoadMap
     */
    select?: notificationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationRoadMap
     */
    omit?: notificationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationRoadMapInclude<ExtArgs> | null
    /**
     * The filter to search for the notificationRoadMap to update in case it exists.
     */
    where: notificationRoadMapWhereUniqueInput
    /**
     * In case the notificationRoadMap found by the `where` argument doesn't exist, create a new notificationRoadMap with this data.
     */
    create: XOR<notificationRoadMapCreateInput, notificationRoadMapUncheckedCreateInput>
    /**
     * In case the notificationRoadMap was found with the provided `where` argument, update it with this data.
     */
    update: XOR<notificationRoadMapUpdateInput, notificationRoadMapUncheckedUpdateInput>
  }

  /**
   * notificationRoadMap delete
   */
  export type notificationRoadMapDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationRoadMap
     */
    select?: notificationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationRoadMap
     */
    omit?: notificationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationRoadMapInclude<ExtArgs> | null
    /**
     * Filter which notificationRoadMap to delete.
     */
    where: notificationRoadMapWhereUniqueInput
  }

  /**
   * notificationRoadMap deleteMany
   */
  export type notificationRoadMapDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notificationRoadMaps to delete
     */
    where?: notificationRoadMapWhereInput
    /**
     * Limit how many notificationRoadMaps to delete.
     */
    limit?: number
  }

  /**
   * notificationRoadMap without action
   */
  export type notificationRoadMapDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationRoadMap
     */
    select?: notificationRoadMapSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationRoadMap
     */
    omit?: notificationRoadMapOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationRoadMapInclude<ExtArgs> | null
  }


  /**
   * Model notificationTouristPoint
   */

  export type AggregateNotificationTouristPoint = {
    _count: NotificationTouristPointCountAggregateOutputType | null
    _min: NotificationTouristPointMinAggregateOutputType | null
    _max: NotificationTouristPointMaxAggregateOutputType | null
  }

  export type NotificationTouristPointMinAggregateOutputType = {
    id: string | null
    idClient: string | null
    idTouristPoint: string | null
  }

  export type NotificationTouristPointMaxAggregateOutputType = {
    id: string | null
    idClient: string | null
    idTouristPoint: string | null
  }

  export type NotificationTouristPointCountAggregateOutputType = {
    id: number
    idClient: number
    idTouristPoint: number
    _all: number
  }


  export type NotificationTouristPointMinAggregateInputType = {
    id?: true
    idClient?: true
    idTouristPoint?: true
  }

  export type NotificationTouristPointMaxAggregateInputType = {
    id?: true
    idClient?: true
    idTouristPoint?: true
  }

  export type NotificationTouristPointCountAggregateInputType = {
    id?: true
    idClient?: true
    idTouristPoint?: true
    _all?: true
  }

  export type NotificationTouristPointAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notificationTouristPoint to aggregate.
     */
    where?: notificationTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notificationTouristPoints to fetch.
     */
    orderBy?: notificationTouristPointOrderByWithRelationInput | notificationTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: notificationTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notificationTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notificationTouristPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned notificationTouristPoints
    **/
    _count?: true | NotificationTouristPointCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationTouristPointMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationTouristPointMaxAggregateInputType
  }

  export type GetNotificationTouristPointAggregateType<T extends NotificationTouristPointAggregateArgs> = {
        [P in keyof T & keyof AggregateNotificationTouristPoint]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotificationTouristPoint[P]>
      : GetScalarType<T[P], AggregateNotificationTouristPoint[P]>
  }




  export type notificationTouristPointGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationTouristPointWhereInput
    orderBy?: notificationTouristPointOrderByWithAggregationInput | notificationTouristPointOrderByWithAggregationInput[]
    by: NotificationTouristPointScalarFieldEnum[] | NotificationTouristPointScalarFieldEnum
    having?: notificationTouristPointScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationTouristPointCountAggregateInputType | true
    _min?: NotificationTouristPointMinAggregateInputType
    _max?: NotificationTouristPointMaxAggregateInputType
  }

  export type NotificationTouristPointGroupByOutputType = {
    id: string
    idClient: string
    idTouristPoint: string
    _count: NotificationTouristPointCountAggregateOutputType | null
    _min: NotificationTouristPointMinAggregateOutputType | null
    _max: NotificationTouristPointMaxAggregateOutputType | null
  }

  type GetNotificationTouristPointGroupByPayload<T extends notificationTouristPointGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationTouristPointGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationTouristPointGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationTouristPointGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationTouristPointGroupByOutputType[P]>
        }
      >
    >


  export type notificationTouristPointSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    idClient?: boolean
    idTouristPoint?: boolean
    userNotificationTouristPointByIdClient?: boolean | User_ClientDefaultArgs<ExtArgs>
    userNotificationTouristPointByIdTouristPoint?: boolean | Ponto_TuristicoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notificationTouristPoint"]>



  export type notificationTouristPointSelectScalar = {
    id?: boolean
    idClient?: boolean
    idTouristPoint?: boolean
  }

  export type notificationTouristPointOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "idClient" | "idTouristPoint", ExtArgs["result"]["notificationTouristPoint"]>
  export type notificationTouristPointInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userNotificationTouristPointByIdClient?: boolean | User_ClientDefaultArgs<ExtArgs>
    userNotificationTouristPointByIdTouristPoint?: boolean | Ponto_TuristicoDefaultArgs<ExtArgs>
  }

  export type $notificationTouristPointPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "notificationTouristPoint"
    objects: {
      userNotificationTouristPointByIdClient: Prisma.$User_ClientPayload<ExtArgs>
      userNotificationTouristPointByIdTouristPoint: Prisma.$Ponto_TuristicoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      idClient: string
      idTouristPoint: string
    }, ExtArgs["result"]["notificationTouristPoint"]>
    composites: {}
  }

  type notificationTouristPointGetPayload<S extends boolean | null | undefined | notificationTouristPointDefaultArgs> = $Result.GetResult<Prisma.$notificationTouristPointPayload, S>

  type notificationTouristPointCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<notificationTouristPointFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificationTouristPointCountAggregateInputType | true
    }

  export interface notificationTouristPointDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['notificationTouristPoint'], meta: { name: 'notificationTouristPoint' } }
    /**
     * Find zero or one NotificationTouristPoint that matches the filter.
     * @param {notificationTouristPointFindUniqueArgs} args - Arguments to find a NotificationTouristPoint
     * @example
     * // Get one NotificationTouristPoint
     * const notificationTouristPoint = await prisma.notificationTouristPoint.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends notificationTouristPointFindUniqueArgs>(args: SelectSubset<T, notificationTouristPointFindUniqueArgs<ExtArgs>>): Prisma__notificationTouristPointClient<$Result.GetResult<Prisma.$notificationTouristPointPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one NotificationTouristPoint that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {notificationTouristPointFindUniqueOrThrowArgs} args - Arguments to find a NotificationTouristPoint
     * @example
     * // Get one NotificationTouristPoint
     * const notificationTouristPoint = await prisma.notificationTouristPoint.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends notificationTouristPointFindUniqueOrThrowArgs>(args: SelectSubset<T, notificationTouristPointFindUniqueOrThrowArgs<ExtArgs>>): Prisma__notificationTouristPointClient<$Result.GetResult<Prisma.$notificationTouristPointPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first NotificationTouristPoint that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationTouristPointFindFirstArgs} args - Arguments to find a NotificationTouristPoint
     * @example
     * // Get one NotificationTouristPoint
     * const notificationTouristPoint = await prisma.notificationTouristPoint.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends notificationTouristPointFindFirstArgs>(args?: SelectSubset<T, notificationTouristPointFindFirstArgs<ExtArgs>>): Prisma__notificationTouristPointClient<$Result.GetResult<Prisma.$notificationTouristPointPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first NotificationTouristPoint that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationTouristPointFindFirstOrThrowArgs} args - Arguments to find a NotificationTouristPoint
     * @example
     * // Get one NotificationTouristPoint
     * const notificationTouristPoint = await prisma.notificationTouristPoint.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends notificationTouristPointFindFirstOrThrowArgs>(args?: SelectSubset<T, notificationTouristPointFindFirstOrThrowArgs<ExtArgs>>): Prisma__notificationTouristPointClient<$Result.GetResult<Prisma.$notificationTouristPointPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more NotificationTouristPoints that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationTouristPointFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all NotificationTouristPoints
     * const notificationTouristPoints = await prisma.notificationTouristPoint.findMany()
     * 
     * // Get first 10 NotificationTouristPoints
     * const notificationTouristPoints = await prisma.notificationTouristPoint.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationTouristPointWithIdOnly = await prisma.notificationTouristPoint.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends notificationTouristPointFindManyArgs>(args?: SelectSubset<T, notificationTouristPointFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationTouristPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a NotificationTouristPoint.
     * @param {notificationTouristPointCreateArgs} args - Arguments to create a NotificationTouristPoint.
     * @example
     * // Create one NotificationTouristPoint
     * const NotificationTouristPoint = await prisma.notificationTouristPoint.create({
     *   data: {
     *     // ... data to create a NotificationTouristPoint
     *   }
     * })
     * 
     */
    create<T extends notificationTouristPointCreateArgs>(args: SelectSubset<T, notificationTouristPointCreateArgs<ExtArgs>>): Prisma__notificationTouristPointClient<$Result.GetResult<Prisma.$notificationTouristPointPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many NotificationTouristPoints.
     * @param {notificationTouristPointCreateManyArgs} args - Arguments to create many NotificationTouristPoints.
     * @example
     * // Create many NotificationTouristPoints
     * const notificationTouristPoint = await prisma.notificationTouristPoint.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends notificationTouristPointCreateManyArgs>(args?: SelectSubset<T, notificationTouristPointCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a NotificationTouristPoint.
     * @param {notificationTouristPointDeleteArgs} args - Arguments to delete one NotificationTouristPoint.
     * @example
     * // Delete one NotificationTouristPoint
     * const NotificationTouristPoint = await prisma.notificationTouristPoint.delete({
     *   where: {
     *     // ... filter to delete one NotificationTouristPoint
     *   }
     * })
     * 
     */
    delete<T extends notificationTouristPointDeleteArgs>(args: SelectSubset<T, notificationTouristPointDeleteArgs<ExtArgs>>): Prisma__notificationTouristPointClient<$Result.GetResult<Prisma.$notificationTouristPointPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one NotificationTouristPoint.
     * @param {notificationTouristPointUpdateArgs} args - Arguments to update one NotificationTouristPoint.
     * @example
     * // Update one NotificationTouristPoint
     * const notificationTouristPoint = await prisma.notificationTouristPoint.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends notificationTouristPointUpdateArgs>(args: SelectSubset<T, notificationTouristPointUpdateArgs<ExtArgs>>): Prisma__notificationTouristPointClient<$Result.GetResult<Prisma.$notificationTouristPointPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more NotificationTouristPoints.
     * @param {notificationTouristPointDeleteManyArgs} args - Arguments to filter NotificationTouristPoints to delete.
     * @example
     * // Delete a few NotificationTouristPoints
     * const { count } = await prisma.notificationTouristPoint.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends notificationTouristPointDeleteManyArgs>(args?: SelectSubset<T, notificationTouristPointDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more NotificationTouristPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationTouristPointUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many NotificationTouristPoints
     * const notificationTouristPoint = await prisma.notificationTouristPoint.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends notificationTouristPointUpdateManyArgs>(args: SelectSubset<T, notificationTouristPointUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one NotificationTouristPoint.
     * @param {notificationTouristPointUpsertArgs} args - Arguments to update or create a NotificationTouristPoint.
     * @example
     * // Update or create a NotificationTouristPoint
     * const notificationTouristPoint = await prisma.notificationTouristPoint.upsert({
     *   create: {
     *     // ... data to create a NotificationTouristPoint
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the NotificationTouristPoint we want to update
     *   }
     * })
     */
    upsert<T extends notificationTouristPointUpsertArgs>(args: SelectSubset<T, notificationTouristPointUpsertArgs<ExtArgs>>): Prisma__notificationTouristPointClient<$Result.GetResult<Prisma.$notificationTouristPointPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of NotificationTouristPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationTouristPointCountArgs} args - Arguments to filter NotificationTouristPoints to count.
     * @example
     * // Count the number of NotificationTouristPoints
     * const count = await prisma.notificationTouristPoint.count({
     *   where: {
     *     // ... the filter for the NotificationTouristPoints we want to count
     *   }
     * })
    **/
    count<T extends notificationTouristPointCountArgs>(
      args?: Subset<T, notificationTouristPointCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationTouristPointCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a NotificationTouristPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationTouristPointAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationTouristPointAggregateArgs>(args: Subset<T, NotificationTouristPointAggregateArgs>): Prisma.PrismaPromise<GetNotificationTouristPointAggregateType<T>>

    /**
     * Group by NotificationTouristPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationTouristPointGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends notificationTouristPointGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: notificationTouristPointGroupByArgs['orderBy'] }
        : { orderBy?: notificationTouristPointGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, notificationTouristPointGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationTouristPointGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the notificationTouristPoint model
   */
  readonly fields: notificationTouristPointFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for notificationTouristPoint.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__notificationTouristPointClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userNotificationTouristPointByIdClient<T extends User_ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, User_ClientDefaultArgs<ExtArgs>>): Prisma__User_ClientClient<$Result.GetResult<Prisma.$User_ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    userNotificationTouristPointByIdTouristPoint<T extends Ponto_TuristicoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Ponto_TuristicoDefaultArgs<ExtArgs>>): Prisma__Ponto_TuristicoClient<$Result.GetResult<Prisma.$Ponto_TuristicoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the notificationTouristPoint model
   */
  interface notificationTouristPointFieldRefs {
    readonly id: FieldRef<"notificationTouristPoint", 'String'>
    readonly idClient: FieldRef<"notificationTouristPoint", 'String'>
    readonly idTouristPoint: FieldRef<"notificationTouristPoint", 'String'>
  }
    

  // Custom InputTypes
  /**
   * notificationTouristPoint findUnique
   */
  export type notificationTouristPointFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationTouristPoint
     */
    select?: notificationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationTouristPoint
     */
    omit?: notificationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which notificationTouristPoint to fetch.
     */
    where: notificationTouristPointWhereUniqueInput
  }

  /**
   * notificationTouristPoint findUniqueOrThrow
   */
  export type notificationTouristPointFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationTouristPoint
     */
    select?: notificationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationTouristPoint
     */
    omit?: notificationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which notificationTouristPoint to fetch.
     */
    where: notificationTouristPointWhereUniqueInput
  }

  /**
   * notificationTouristPoint findFirst
   */
  export type notificationTouristPointFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationTouristPoint
     */
    select?: notificationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationTouristPoint
     */
    omit?: notificationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which notificationTouristPoint to fetch.
     */
    where?: notificationTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notificationTouristPoints to fetch.
     */
    orderBy?: notificationTouristPointOrderByWithRelationInput | notificationTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notificationTouristPoints.
     */
    cursor?: notificationTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notificationTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notificationTouristPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notificationTouristPoints.
     */
    distinct?: NotificationTouristPointScalarFieldEnum | NotificationTouristPointScalarFieldEnum[]
  }

  /**
   * notificationTouristPoint findFirstOrThrow
   */
  export type notificationTouristPointFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationTouristPoint
     */
    select?: notificationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationTouristPoint
     */
    omit?: notificationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which notificationTouristPoint to fetch.
     */
    where?: notificationTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notificationTouristPoints to fetch.
     */
    orderBy?: notificationTouristPointOrderByWithRelationInput | notificationTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notificationTouristPoints.
     */
    cursor?: notificationTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notificationTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notificationTouristPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notificationTouristPoints.
     */
    distinct?: NotificationTouristPointScalarFieldEnum | NotificationTouristPointScalarFieldEnum[]
  }

  /**
   * notificationTouristPoint findMany
   */
  export type notificationTouristPointFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationTouristPoint
     */
    select?: notificationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationTouristPoint
     */
    omit?: notificationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationTouristPointInclude<ExtArgs> | null
    /**
     * Filter, which notificationTouristPoints to fetch.
     */
    where?: notificationTouristPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notificationTouristPoints to fetch.
     */
    orderBy?: notificationTouristPointOrderByWithRelationInput | notificationTouristPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing notificationTouristPoints.
     */
    cursor?: notificationTouristPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notificationTouristPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notificationTouristPoints.
     */
    skip?: number
    distinct?: NotificationTouristPointScalarFieldEnum | NotificationTouristPointScalarFieldEnum[]
  }

  /**
   * notificationTouristPoint create
   */
  export type notificationTouristPointCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationTouristPoint
     */
    select?: notificationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationTouristPoint
     */
    omit?: notificationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationTouristPointInclude<ExtArgs> | null
    /**
     * The data needed to create a notificationTouristPoint.
     */
    data: XOR<notificationTouristPointCreateInput, notificationTouristPointUncheckedCreateInput>
  }

  /**
   * notificationTouristPoint createMany
   */
  export type notificationTouristPointCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many notificationTouristPoints.
     */
    data: notificationTouristPointCreateManyInput | notificationTouristPointCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * notificationTouristPoint update
   */
  export type notificationTouristPointUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationTouristPoint
     */
    select?: notificationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationTouristPoint
     */
    omit?: notificationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationTouristPointInclude<ExtArgs> | null
    /**
     * The data needed to update a notificationTouristPoint.
     */
    data: XOR<notificationTouristPointUpdateInput, notificationTouristPointUncheckedUpdateInput>
    /**
     * Choose, which notificationTouristPoint to update.
     */
    where: notificationTouristPointWhereUniqueInput
  }

  /**
   * notificationTouristPoint updateMany
   */
  export type notificationTouristPointUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update notificationTouristPoints.
     */
    data: XOR<notificationTouristPointUpdateManyMutationInput, notificationTouristPointUncheckedUpdateManyInput>
    /**
     * Filter which notificationTouristPoints to update
     */
    where?: notificationTouristPointWhereInput
    /**
     * Limit how many notificationTouristPoints to update.
     */
    limit?: number
  }

  /**
   * notificationTouristPoint upsert
   */
  export type notificationTouristPointUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationTouristPoint
     */
    select?: notificationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationTouristPoint
     */
    omit?: notificationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationTouristPointInclude<ExtArgs> | null
    /**
     * The filter to search for the notificationTouristPoint to update in case it exists.
     */
    where: notificationTouristPointWhereUniqueInput
    /**
     * In case the notificationTouristPoint found by the `where` argument doesn't exist, create a new notificationTouristPoint with this data.
     */
    create: XOR<notificationTouristPointCreateInput, notificationTouristPointUncheckedCreateInput>
    /**
     * In case the notificationTouristPoint was found with the provided `where` argument, update it with this data.
     */
    update: XOR<notificationTouristPointUpdateInput, notificationTouristPointUncheckedUpdateInput>
  }

  /**
   * notificationTouristPoint delete
   */
  export type notificationTouristPointDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationTouristPoint
     */
    select?: notificationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationTouristPoint
     */
    omit?: notificationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationTouristPointInclude<ExtArgs> | null
    /**
     * Filter which notificationTouristPoint to delete.
     */
    where: notificationTouristPointWhereUniqueInput
  }

  /**
   * notificationTouristPoint deleteMany
   */
  export type notificationTouristPointDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notificationTouristPoints to delete
     */
    where?: notificationTouristPointWhereInput
    /**
     * Limit how many notificationTouristPoints to delete.
     */
    limit?: number
  }

  /**
   * notificationTouristPoint without action
   */
  export type notificationTouristPointDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notificationTouristPoint
     */
    select?: notificationTouristPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notificationTouristPoint
     */
    omit?: notificationTouristPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationTouristPointInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const User_AdminScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    password: 'password'
  };

  export type User_AdminScalarFieldEnum = (typeof User_AdminScalarFieldEnum)[keyof typeof User_AdminScalarFieldEnum]


  export const User_ClientScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    password: 'password',
    userImageUrl: 'userImageUrl'
  };

  export type User_ClientScalarFieldEnum = (typeof User_ClientScalarFieldEnum)[keyof typeof User_ClientScalarFieldEnum]


  export const User_BusinessScalarFieldEnum: {
    id: 'id',
    CNPJ: 'CNPJ',
    name: 'name',
    email: 'email',
    telefone: 'telefone',
    password: 'password',
    userImageUrl: 'userImageUrl'
  };

  export type User_BusinessScalarFieldEnum = (typeof User_BusinessScalarFieldEnum)[keyof typeof User_BusinessScalarFieldEnum]


  export const Ponto_ComercialScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    local: 'local',
    creationDate: 'creationDate',
    userImageUrl: 'userImageUrl',
    reportNumber: 'reportNumber',
    isPublished: 'isPublished',
    businessId: 'businessId'
  };

  export type Ponto_ComercialScalarFieldEnum = (typeof Ponto_ComercialScalarFieldEnum)[keyof typeof Ponto_ComercialScalarFieldEnum]


  export const Ponto_TuristicoScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    creationDate: 'creationDate',
    local: 'local',
    userImageUrl: 'userImageUrl',
    reportNumber: 'reportNumber',
    isPublished: 'isPublished'
  };

  export type Ponto_TuristicoScalarFieldEnum = (typeof Ponto_TuristicoScalarFieldEnum)[keyof typeof Ponto_TuristicoScalarFieldEnum]


  export const Travel_Road_MapScalarFieldEnum: {
    id: 'id',
    title: 'title',
    dataPublication: 'dataPublication',
    description: 'description',
    idCreator: 'idCreator',
    avaliationValue: 'avaliationValue',
    isPublished: 'isPublished',
    userImageUrl: 'userImageUrl',
    reportNumber: 'reportNumber'
  };

  export type Travel_Road_MapScalarFieldEnum = (typeof Travel_Road_MapScalarFieldEnum)[keyof typeof Travel_Road_MapScalarFieldEnum]


  export const CountryScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type CountryScalarFieldEnum = (typeof CountryScalarFieldEnum)[keyof typeof CountryScalarFieldEnum]


  export const StateScalarFieldEnum: {
    id: 'id',
    name: 'name',
    countryName: 'countryName'
  };

  export type StateScalarFieldEnum = (typeof StateScalarFieldEnum)[keyof typeof StateScalarFieldEnum]


  export const CityScalarFieldEnum: {
    id: 'id',
    name: 'name',
    countryName: 'countryName',
    stateName: 'stateName'
  };

  export type CityScalarFieldEnum = (typeof CityScalarFieldEnum)[keyof typeof CityScalarFieldEnum]


  export const ImageTouristPointScalarFieldEnum: {
    id: 'id',
    image: 'image',
    idTouristPoint: 'idTouristPoint'
  };

  export type ImageTouristPointScalarFieldEnum = (typeof ImageTouristPointScalarFieldEnum)[keyof typeof ImageTouristPointScalarFieldEnum]


  export const ImageCommercialPointScalarFieldEnum: {
    id: 'id',
    image: 'image',
    idCommercialPoint: 'idCommercialPoint'
  };

  export type ImageCommercialPointScalarFieldEnum = (typeof ImageCommercialPointScalarFieldEnum)[keyof typeof ImageCommercialPointScalarFieldEnum]


  export const ImageRoadMapScalarFieldEnum: {
    id: 'id',
    image: 'image',
    idRoadMap: 'idRoadMap'
  };

  export type ImageRoadMapScalarFieldEnum = (typeof ImageRoadMapScalarFieldEnum)[keyof typeof ImageRoadMapScalarFieldEnum]


  export const CommentRoadMapScalarFieldEnum: {
    id: 'id',
    dataPublication: 'dataPublication',
    content: 'content',
    userClientEmail: 'userClientEmail',
    idUserClient: 'idUserClient',
    idTravelRoadMap: 'idTravelRoadMap'
  };

  export type CommentRoadMapScalarFieldEnum = (typeof CommentRoadMapScalarFieldEnum)[keyof typeof CommentRoadMapScalarFieldEnum]


  export const CommentTouristPointScalarFieldEnum: {
    id: 'id',
    dataPublication: 'dataPublication',
    content: 'content',
    userClientEmail: 'userClientEmail',
    idUserClient: 'idUserClient',
    idTouristPoint: 'idTouristPoint'
  };

  export type CommentTouristPointScalarFieldEnum = (typeof CommentTouristPointScalarFieldEnum)[keyof typeof CommentTouristPointScalarFieldEnum]


  export const CommentCommercialPointScalarFieldEnum: {
    id: 'id',
    dataPublication: 'dataPublication',
    content: 'content',
    userClientEmail: 'userClientEmail',
    idUserClient: 'idUserClient',
    idCommercialPoint: 'idCommercialPoint'
  };

  export type CommentCommercialPointScalarFieldEnum = (typeof CommentCommercialPointScalarFieldEnum)[keyof typeof CommentCommercialPointScalarFieldEnum]


  export const AvaliationRoadMapScalarFieldEnum: {
    id: 'id',
    dataPublication: 'dataPublication',
    avaliation: 'avaliation',
    userClientEmail: 'userClientEmail',
    idUserClient: 'idUserClient',
    idTravelRoadMap: 'idTravelRoadMap'
  };

  export type AvaliationRoadMapScalarFieldEnum = (typeof AvaliationRoadMapScalarFieldEnum)[keyof typeof AvaliationRoadMapScalarFieldEnum]


  export const AvaliationTouristPointScalarFieldEnum: {
    id: 'id',
    dataPublication: 'dataPublication',
    avaliation: 'avaliation',
    userClientEmail: 'userClientEmail',
    idUserClient: 'idUserClient',
    idTouristPoint: 'idTouristPoint'
  };

  export type AvaliationTouristPointScalarFieldEnum = (typeof AvaliationTouristPointScalarFieldEnum)[keyof typeof AvaliationTouristPointScalarFieldEnum]


  export const AvaliationCommercialPointScalarFieldEnum: {
    id: 'id',
    dataPublication: 'dataPublication',
    avaliation: 'avaliation',
    userClientEmail: 'userClientEmail',
    idUserClient: 'idUserClient',
    idCommercialPoint: 'idCommercialPoint'
  };

  export type AvaliationCommercialPointScalarFieldEnum = (typeof AvaliationCommercialPointScalarFieldEnum)[keyof typeof AvaliationCommercialPointScalarFieldEnum]


  export const FavoriteCommercialPointScalarFieldEnum: {
    id: 'id',
    Favorite: 'Favorite',
    idUserClient: 'idUserClient',
    idCommercialPoint: 'idCommercialPoint'
  };

  export type FavoriteCommercialPointScalarFieldEnum = (typeof FavoriteCommercialPointScalarFieldEnum)[keyof typeof FavoriteCommercialPointScalarFieldEnum]


  export const FavoriteTouristPointScalarFieldEnum: {
    id: 'id',
    Favorite: 'Favorite',
    idUserClient: 'idUserClient',
    idTouristPoint: 'idTouristPoint'
  };

  export type FavoriteTouristPointScalarFieldEnum = (typeof FavoriteTouristPointScalarFieldEnum)[keyof typeof FavoriteTouristPointScalarFieldEnum]


  export const FavoriteRoadMapScalarFieldEnum: {
    id: 'id',
    Favorite: 'Favorite',
    idUserClient: 'idUserClient',
    idRoadMap: 'idRoadMap'
  };

  export type FavoriteRoadMapScalarFieldEnum = (typeof FavoriteRoadMapScalarFieldEnum)[keyof typeof FavoriteRoadMapScalarFieldEnum]


  export const ReportTouristPointScalarFieldEnum: {
    id: 'id',
    content: 'content',
    idTouristPoint: 'idTouristPoint',
    idUserReport: 'idUserReport'
  };

  export type ReportTouristPointScalarFieldEnum = (typeof ReportTouristPointScalarFieldEnum)[keyof typeof ReportTouristPointScalarFieldEnum]


  export const ReportCommercialPointScalarFieldEnum: {
    id: 'id',
    content: 'content',
    idCommercialPoint: 'idCommercialPoint',
    idUserReport: 'idUserReport'
  };

  export type ReportCommercialPointScalarFieldEnum = (typeof ReportCommercialPointScalarFieldEnum)[keyof typeof ReportCommercialPointScalarFieldEnum]


  export const ReportRoadMapScalarFieldEnum: {
    id: 'id',
    content: 'content',
    idRoadMap: 'idRoadMap',
    idUserReport: 'idUserReport'
  };

  export type ReportRoadMapScalarFieldEnum = (typeof ReportRoadMapScalarFieldEnum)[keyof typeof ReportRoadMapScalarFieldEnum]


  export const NotificationRoadMapScalarFieldEnum: {
    id: 'id',
    idClient: 'idClient',
    idRoadMap: 'idRoadMap'
  };

  export type NotificationRoadMapScalarFieldEnum = (typeof NotificationRoadMapScalarFieldEnum)[keyof typeof NotificationRoadMapScalarFieldEnum]


  export const NotificationTouristPointScalarFieldEnum: {
    id: 'id',
    idClient: 'idClient',
    idTouristPoint: 'idTouristPoint'
  };

  export type NotificationTouristPointScalarFieldEnum = (typeof NotificationTouristPointScalarFieldEnum)[keyof typeof NotificationTouristPointScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const User_AdminOrderByRelevanceFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    password: 'password'
  };

  export type User_AdminOrderByRelevanceFieldEnum = (typeof User_AdminOrderByRelevanceFieldEnum)[keyof typeof User_AdminOrderByRelevanceFieldEnum]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const User_ClientOrderByRelevanceFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    password: 'password',
    userImageUrl: 'userImageUrl'
  };

  export type User_ClientOrderByRelevanceFieldEnum = (typeof User_ClientOrderByRelevanceFieldEnum)[keyof typeof User_ClientOrderByRelevanceFieldEnum]


  export const User_BusinessOrderByRelevanceFieldEnum: {
    id: 'id',
    CNPJ: 'CNPJ',
    name: 'name',
    email: 'email',
    telefone: 'telefone',
    password: 'password',
    userImageUrl: 'userImageUrl'
  };

  export type User_BusinessOrderByRelevanceFieldEnum = (typeof User_BusinessOrderByRelevanceFieldEnum)[keyof typeof User_BusinessOrderByRelevanceFieldEnum]


  export const Ponto_ComercialOrderByRelevanceFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    local: 'local',
    userImageUrl: 'userImageUrl',
    businessId: 'businessId'
  };

  export type Ponto_ComercialOrderByRelevanceFieldEnum = (typeof Ponto_ComercialOrderByRelevanceFieldEnum)[keyof typeof Ponto_ComercialOrderByRelevanceFieldEnum]


  export const Ponto_TuristicoOrderByRelevanceFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    local: 'local',
    userImageUrl: 'userImageUrl'
  };

  export type Ponto_TuristicoOrderByRelevanceFieldEnum = (typeof Ponto_TuristicoOrderByRelevanceFieldEnum)[keyof typeof Ponto_TuristicoOrderByRelevanceFieldEnum]


  export const Travel_Road_MapOrderByRelevanceFieldEnum: {
    id: 'id',
    title: 'title',
    description: 'description',
    idCreator: 'idCreator',
    userImageUrl: 'userImageUrl'
  };

  export type Travel_Road_MapOrderByRelevanceFieldEnum = (typeof Travel_Road_MapOrderByRelevanceFieldEnum)[keyof typeof Travel_Road_MapOrderByRelevanceFieldEnum]


  export const CountryOrderByRelevanceFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type CountryOrderByRelevanceFieldEnum = (typeof CountryOrderByRelevanceFieldEnum)[keyof typeof CountryOrderByRelevanceFieldEnum]


  export const StateOrderByRelevanceFieldEnum: {
    id: 'id',
    name: 'name',
    countryName: 'countryName'
  };

  export type StateOrderByRelevanceFieldEnum = (typeof StateOrderByRelevanceFieldEnum)[keyof typeof StateOrderByRelevanceFieldEnum]


  export const CityOrderByRelevanceFieldEnum: {
    id: 'id',
    name: 'name',
    countryName: 'countryName',
    stateName: 'stateName'
  };

  export type CityOrderByRelevanceFieldEnum = (typeof CityOrderByRelevanceFieldEnum)[keyof typeof CityOrderByRelevanceFieldEnum]


  export const ImageTouristPointOrderByRelevanceFieldEnum: {
    id: 'id',
    image: 'image',
    idTouristPoint: 'idTouristPoint'
  };

  export type ImageTouristPointOrderByRelevanceFieldEnum = (typeof ImageTouristPointOrderByRelevanceFieldEnum)[keyof typeof ImageTouristPointOrderByRelevanceFieldEnum]


  export const ImageCommercialPointOrderByRelevanceFieldEnum: {
    id: 'id',
    image: 'image',
    idCommercialPoint: 'idCommercialPoint'
  };

  export type ImageCommercialPointOrderByRelevanceFieldEnum = (typeof ImageCommercialPointOrderByRelevanceFieldEnum)[keyof typeof ImageCommercialPointOrderByRelevanceFieldEnum]


  export const ImageRoadMapOrderByRelevanceFieldEnum: {
    id: 'id',
    image: 'image',
    idRoadMap: 'idRoadMap'
  };

  export type ImageRoadMapOrderByRelevanceFieldEnum = (typeof ImageRoadMapOrderByRelevanceFieldEnum)[keyof typeof ImageRoadMapOrderByRelevanceFieldEnum]


  export const CommentRoadMapOrderByRelevanceFieldEnum: {
    id: 'id',
    content: 'content',
    userClientEmail: 'userClientEmail',
    idUserClient: 'idUserClient',
    idTravelRoadMap: 'idTravelRoadMap'
  };

  export type CommentRoadMapOrderByRelevanceFieldEnum = (typeof CommentRoadMapOrderByRelevanceFieldEnum)[keyof typeof CommentRoadMapOrderByRelevanceFieldEnum]


  export const CommentTouristPointOrderByRelevanceFieldEnum: {
    id: 'id',
    content: 'content',
    userClientEmail: 'userClientEmail',
    idUserClient: 'idUserClient',
    idTouristPoint: 'idTouristPoint'
  };

  export type CommentTouristPointOrderByRelevanceFieldEnum = (typeof CommentTouristPointOrderByRelevanceFieldEnum)[keyof typeof CommentTouristPointOrderByRelevanceFieldEnum]


  export const CommentCommercialPointOrderByRelevanceFieldEnum: {
    id: 'id',
    content: 'content',
    userClientEmail: 'userClientEmail',
    idUserClient: 'idUserClient',
    idCommercialPoint: 'idCommercialPoint'
  };

  export type CommentCommercialPointOrderByRelevanceFieldEnum = (typeof CommentCommercialPointOrderByRelevanceFieldEnum)[keyof typeof CommentCommercialPointOrderByRelevanceFieldEnum]


  export const AvaliationRoadMapOrderByRelevanceFieldEnum: {
    id: 'id',
    userClientEmail: 'userClientEmail',
    idUserClient: 'idUserClient',
    idTravelRoadMap: 'idTravelRoadMap'
  };

  export type AvaliationRoadMapOrderByRelevanceFieldEnum = (typeof AvaliationRoadMapOrderByRelevanceFieldEnum)[keyof typeof AvaliationRoadMapOrderByRelevanceFieldEnum]


  export const AvaliationTouristPointOrderByRelevanceFieldEnum: {
    id: 'id',
    userClientEmail: 'userClientEmail',
    idUserClient: 'idUserClient',
    idTouristPoint: 'idTouristPoint'
  };

  export type AvaliationTouristPointOrderByRelevanceFieldEnum = (typeof AvaliationTouristPointOrderByRelevanceFieldEnum)[keyof typeof AvaliationTouristPointOrderByRelevanceFieldEnum]


  export const AvaliationCommercialPointOrderByRelevanceFieldEnum: {
    id: 'id',
    userClientEmail: 'userClientEmail',
    idUserClient: 'idUserClient',
    idCommercialPoint: 'idCommercialPoint'
  };

  export type AvaliationCommercialPointOrderByRelevanceFieldEnum = (typeof AvaliationCommercialPointOrderByRelevanceFieldEnum)[keyof typeof AvaliationCommercialPointOrderByRelevanceFieldEnum]


  export const FavoriteCommercialPointOrderByRelevanceFieldEnum: {
    id: 'id',
    idUserClient: 'idUserClient',
    idCommercialPoint: 'idCommercialPoint'
  };

  export type FavoriteCommercialPointOrderByRelevanceFieldEnum = (typeof FavoriteCommercialPointOrderByRelevanceFieldEnum)[keyof typeof FavoriteCommercialPointOrderByRelevanceFieldEnum]


  export const FavoriteTouristPointOrderByRelevanceFieldEnum: {
    id: 'id',
    idUserClient: 'idUserClient',
    idTouristPoint: 'idTouristPoint'
  };

  export type FavoriteTouristPointOrderByRelevanceFieldEnum = (typeof FavoriteTouristPointOrderByRelevanceFieldEnum)[keyof typeof FavoriteTouristPointOrderByRelevanceFieldEnum]


  export const FavoriteRoadMapOrderByRelevanceFieldEnum: {
    id: 'id',
    idUserClient: 'idUserClient',
    idRoadMap: 'idRoadMap'
  };

  export type FavoriteRoadMapOrderByRelevanceFieldEnum = (typeof FavoriteRoadMapOrderByRelevanceFieldEnum)[keyof typeof FavoriteRoadMapOrderByRelevanceFieldEnum]


  export const reportTouristPointOrderByRelevanceFieldEnum: {
    id: 'id',
    content: 'content',
    idTouristPoint: 'idTouristPoint',
    idUserReport: 'idUserReport'
  };

  export type reportTouristPointOrderByRelevanceFieldEnum = (typeof reportTouristPointOrderByRelevanceFieldEnum)[keyof typeof reportTouristPointOrderByRelevanceFieldEnum]


  export const reportCommercialPointOrderByRelevanceFieldEnum: {
    id: 'id',
    content: 'content',
    idCommercialPoint: 'idCommercialPoint',
    idUserReport: 'idUserReport'
  };

  export type reportCommercialPointOrderByRelevanceFieldEnum = (typeof reportCommercialPointOrderByRelevanceFieldEnum)[keyof typeof reportCommercialPointOrderByRelevanceFieldEnum]


  export const reportRoadMapOrderByRelevanceFieldEnum: {
    id: 'id',
    content: 'content',
    idRoadMap: 'idRoadMap',
    idUserReport: 'idUserReport'
  };

  export type reportRoadMapOrderByRelevanceFieldEnum = (typeof reportRoadMapOrderByRelevanceFieldEnum)[keyof typeof reportRoadMapOrderByRelevanceFieldEnum]


  export const notificationRoadMapOrderByRelevanceFieldEnum: {
    id: 'id',
    idClient: 'idClient',
    idRoadMap: 'idRoadMap'
  };

  export type notificationRoadMapOrderByRelevanceFieldEnum = (typeof notificationRoadMapOrderByRelevanceFieldEnum)[keyof typeof notificationRoadMapOrderByRelevanceFieldEnum]


  export const notificationTouristPointOrderByRelevanceFieldEnum: {
    id: 'id',
    idClient: 'idClient',
    idTouristPoint: 'idTouristPoint'
  };

  export type notificationTouristPointOrderByRelevanceFieldEnum = (typeof notificationTouristPointOrderByRelevanceFieldEnum)[keyof typeof notificationTouristPointOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type User_AdminWhereInput = {
    AND?: User_AdminWhereInput | User_AdminWhereInput[]
    OR?: User_AdminWhereInput[]
    NOT?: User_AdminWhereInput | User_AdminWhereInput[]
    id?: StringFilter<"User_Admin"> | string
    name?: StringFilter<"User_Admin"> | string
    email?: StringFilter<"User_Admin"> | string
    password?: StringFilter<"User_Admin"> | string
  }

  export type User_AdminOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    _relevance?: User_AdminOrderByRelevanceInput
  }

  export type User_AdminWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: User_AdminWhereInput | User_AdminWhereInput[]
    OR?: User_AdminWhereInput[]
    NOT?: User_AdminWhereInput | User_AdminWhereInput[]
    name?: StringFilter<"User_Admin"> | string
    password?: StringFilter<"User_Admin"> | string
  }, "id" | "email">

  export type User_AdminOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    _count?: User_AdminCountOrderByAggregateInput
    _max?: User_AdminMaxOrderByAggregateInput
    _min?: User_AdminMinOrderByAggregateInput
  }

  export type User_AdminScalarWhereWithAggregatesInput = {
    AND?: User_AdminScalarWhereWithAggregatesInput | User_AdminScalarWhereWithAggregatesInput[]
    OR?: User_AdminScalarWhereWithAggregatesInput[]
    NOT?: User_AdminScalarWhereWithAggregatesInput | User_AdminScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User_Admin"> | string
    name?: StringWithAggregatesFilter<"User_Admin"> | string
    email?: StringWithAggregatesFilter<"User_Admin"> | string
    password?: StringWithAggregatesFilter<"User_Admin"> | string
  }

  export type User_ClientWhereInput = {
    AND?: User_ClientWhereInput | User_ClientWhereInput[]
    OR?: User_ClientWhereInput[]
    NOT?: User_ClientWhereInput | User_ClientWhereInput[]
    id?: StringFilter<"User_Client"> | string
    name?: StringFilter<"User_Client"> | string
    email?: StringFilter<"User_Client"> | string
    password?: StringFilter<"User_Client"> | string
    userImageUrl?: StringNullableFilter<"User_Client"> | string | null
    avaliationsByEmailClient?: AvaliationRoadMapListRelationFilter
    avaliationsRoadMapByIdClient?: AvaliationRoadMapListRelationFilter
    travelRoadMaps?: Travel_Road_MapListRelationFilter
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointListRelationFilter
    avaliationTouristPointByIdCreator?: AvaliationTouristPointListRelationFilter
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointListRelationFilter
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointListRelationFilter
    commentRoadMapByClientEmail?: CommentRoadMapListRelationFilter
    commentRoadMapByClientId?: CommentRoadMapListRelationFilter
    commentTouristPointByClientEmail?: CommentTouristPointListRelationFilter
    commentTouristPointByClientId?: CommentTouristPointListRelationFilter
    commentCommercialPointByClientEmail?: CommentCommercialPointListRelationFilter
    commentCommercialPointByClientId?: CommentCommercialPointListRelationFilter
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointListRelationFilter
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointListRelationFilter
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapListRelationFilter
    userNotificationTouristPointByIdClient?: NotificationTouristPointListRelationFilter
    userNotificationRoadMapByIdClient?: NotificationRoadMapListRelationFilter
    userReportRoadMapByIdUserReport?: ReportRoadMapListRelationFilter
    userReportCommercialPointByIdUserReport?: ReportCommercialPointListRelationFilter
    userReportTouristPointByIdUserReport?: ReportTouristPointListRelationFilter
  }

  export type User_ClientOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    userImageUrl?: SortOrderInput | SortOrder
    avaliationsByEmailClient?: AvaliationRoadMapOrderByRelationAggregateInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapOrderByRelationAggregateInput
    travelRoadMaps?: Travel_Road_MapOrderByRelationAggregateInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointOrderByRelationAggregateInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointOrderByRelationAggregateInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointOrderByRelationAggregateInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointOrderByRelationAggregateInput
    commentRoadMapByClientEmail?: CommentRoadMapOrderByRelationAggregateInput
    commentRoadMapByClientId?: CommentRoadMapOrderByRelationAggregateInput
    commentTouristPointByClientEmail?: CommentTouristPointOrderByRelationAggregateInput
    commentTouristPointByClientId?: CommentTouristPointOrderByRelationAggregateInput
    commentCommercialPointByClientEmail?: CommentCommercialPointOrderByRelationAggregateInput
    commentCommercialPointByClientId?: CommentCommercialPointOrderByRelationAggregateInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointOrderByRelationAggregateInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointOrderByRelationAggregateInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapOrderByRelationAggregateInput
    userNotificationTouristPointByIdClient?: notificationTouristPointOrderByRelationAggregateInput
    userNotificationRoadMapByIdClient?: notificationRoadMapOrderByRelationAggregateInput
    userReportRoadMapByIdUserReport?: reportRoadMapOrderByRelationAggregateInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointOrderByRelationAggregateInput
    userReportTouristPointByIdUserReport?: reportTouristPointOrderByRelationAggregateInput
    _relevance?: User_ClientOrderByRelevanceInput
  }

  export type User_ClientWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    userImageUrl?: string
    AND?: User_ClientWhereInput | User_ClientWhereInput[]
    OR?: User_ClientWhereInput[]
    NOT?: User_ClientWhereInput | User_ClientWhereInput[]
    name?: StringFilter<"User_Client"> | string
    password?: StringFilter<"User_Client"> | string
    avaliationsByEmailClient?: AvaliationRoadMapListRelationFilter
    avaliationsRoadMapByIdClient?: AvaliationRoadMapListRelationFilter
    travelRoadMaps?: Travel_Road_MapListRelationFilter
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointListRelationFilter
    avaliationTouristPointByIdCreator?: AvaliationTouristPointListRelationFilter
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointListRelationFilter
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointListRelationFilter
    commentRoadMapByClientEmail?: CommentRoadMapListRelationFilter
    commentRoadMapByClientId?: CommentRoadMapListRelationFilter
    commentTouristPointByClientEmail?: CommentTouristPointListRelationFilter
    commentTouristPointByClientId?: CommentTouristPointListRelationFilter
    commentCommercialPointByClientEmail?: CommentCommercialPointListRelationFilter
    commentCommercialPointByClientId?: CommentCommercialPointListRelationFilter
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointListRelationFilter
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointListRelationFilter
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapListRelationFilter
    userNotificationTouristPointByIdClient?: NotificationTouristPointListRelationFilter
    userNotificationRoadMapByIdClient?: NotificationRoadMapListRelationFilter
    userReportRoadMapByIdUserReport?: ReportRoadMapListRelationFilter
    userReportCommercialPointByIdUserReport?: ReportCommercialPointListRelationFilter
    userReportTouristPointByIdUserReport?: ReportTouristPointListRelationFilter
  }, "id" | "email" | "userImageUrl">

  export type User_ClientOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    userImageUrl?: SortOrderInput | SortOrder
    _count?: User_ClientCountOrderByAggregateInput
    _max?: User_ClientMaxOrderByAggregateInput
    _min?: User_ClientMinOrderByAggregateInput
  }

  export type User_ClientScalarWhereWithAggregatesInput = {
    AND?: User_ClientScalarWhereWithAggregatesInput | User_ClientScalarWhereWithAggregatesInput[]
    OR?: User_ClientScalarWhereWithAggregatesInput[]
    NOT?: User_ClientScalarWhereWithAggregatesInput | User_ClientScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User_Client"> | string
    name?: StringWithAggregatesFilter<"User_Client"> | string
    email?: StringWithAggregatesFilter<"User_Client"> | string
    password?: StringWithAggregatesFilter<"User_Client"> | string
    userImageUrl?: StringNullableWithAggregatesFilter<"User_Client"> | string | null
  }

  export type User_BusinessWhereInput = {
    AND?: User_BusinessWhereInput | User_BusinessWhereInput[]
    OR?: User_BusinessWhereInput[]
    NOT?: User_BusinessWhereInput | User_BusinessWhereInput[]
    id?: StringFilter<"User_Business"> | string
    CNPJ?: StringFilter<"User_Business"> | string
    name?: StringFilter<"User_Business"> | string
    email?: StringFilter<"User_Business"> | string
    telefone?: StringFilter<"User_Business"> | string
    password?: StringFilter<"User_Business"> | string
    userImageUrl?: StringNullableFilter<"User_Business"> | string | null
    pontosComerciais?: Ponto_ComercialListRelationFilter
  }

  export type User_BusinessOrderByWithRelationInput = {
    id?: SortOrder
    CNPJ?: SortOrder
    name?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    password?: SortOrder
    userImageUrl?: SortOrderInput | SortOrder
    pontosComerciais?: Ponto_ComercialOrderByRelationAggregateInput
    _relevance?: User_BusinessOrderByRelevanceInput
  }

  export type User_BusinessWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    CNPJ?: string
    email?: string
    telefone?: string
    userImageUrl?: string
    AND?: User_BusinessWhereInput | User_BusinessWhereInput[]
    OR?: User_BusinessWhereInput[]
    NOT?: User_BusinessWhereInput | User_BusinessWhereInput[]
    name?: StringFilter<"User_Business"> | string
    password?: StringFilter<"User_Business"> | string
    pontosComerciais?: Ponto_ComercialListRelationFilter
  }, "id" | "CNPJ" | "email" | "telefone" | "userImageUrl">

  export type User_BusinessOrderByWithAggregationInput = {
    id?: SortOrder
    CNPJ?: SortOrder
    name?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    password?: SortOrder
    userImageUrl?: SortOrderInput | SortOrder
    _count?: User_BusinessCountOrderByAggregateInput
    _max?: User_BusinessMaxOrderByAggregateInput
    _min?: User_BusinessMinOrderByAggregateInput
  }

  export type User_BusinessScalarWhereWithAggregatesInput = {
    AND?: User_BusinessScalarWhereWithAggregatesInput | User_BusinessScalarWhereWithAggregatesInput[]
    OR?: User_BusinessScalarWhereWithAggregatesInput[]
    NOT?: User_BusinessScalarWhereWithAggregatesInput | User_BusinessScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User_Business"> | string
    CNPJ?: StringWithAggregatesFilter<"User_Business"> | string
    name?: StringWithAggregatesFilter<"User_Business"> | string
    email?: StringWithAggregatesFilter<"User_Business"> | string
    telefone?: StringWithAggregatesFilter<"User_Business"> | string
    password?: StringWithAggregatesFilter<"User_Business"> | string
    userImageUrl?: StringNullableWithAggregatesFilter<"User_Business"> | string | null
  }

  export type Ponto_ComercialWhereInput = {
    AND?: Ponto_ComercialWhereInput | Ponto_ComercialWhereInput[]
    OR?: Ponto_ComercialWhereInput[]
    NOT?: Ponto_ComercialWhereInput | Ponto_ComercialWhereInput[]
    id?: StringFilter<"Ponto_Comercial"> | string
    name?: StringFilter<"Ponto_Comercial"> | string
    description?: StringFilter<"Ponto_Comercial"> | string
    local?: StringFilter<"Ponto_Comercial"> | string
    creationDate?: DateTimeFilter<"Ponto_Comercial"> | Date | string
    userImageUrl?: StringNullableFilter<"Ponto_Comercial"> | string | null
    reportNumber?: IntFilter<"Ponto_Comercial"> | number
    isPublished?: BoolFilter<"Ponto_Comercial"> | boolean
    businessId?: StringFilter<"Ponto_Comercial"> | string
    User_Business?: XOR<User_BusinessScalarRelationFilter, User_BusinessWhereInput>
    avaliationCommercialPoint?: AvaliationCommercialPointListRelationFilter
    commentCommercialPointByCommercialPointId?: CommentCommercialPointListRelationFilter
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointListRelationFilter
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointListRelationFilter
    RoadMapRelation?: Travel_Road_MapListRelationFilter
    reportCommercialPointByIdCommercialPoint?: ReportCommercialPointListRelationFilter
  }

  export type Ponto_ComercialOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    local?: SortOrder
    creationDate?: SortOrder
    userImageUrl?: SortOrderInput | SortOrder
    reportNumber?: SortOrder
    isPublished?: SortOrder
    businessId?: SortOrder
    User_Business?: User_BusinessOrderByWithRelationInput
    avaliationCommercialPoint?: AvaliationCommercialPointOrderByRelationAggregateInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointOrderByRelationAggregateInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointOrderByRelationAggregateInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointOrderByRelationAggregateInput
    RoadMapRelation?: Travel_Road_MapOrderByRelationAggregateInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointOrderByRelationAggregateInput
    _relevance?: Ponto_ComercialOrderByRelevanceInput
  }

  export type Ponto_ComercialWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    local?: string
    userImageUrl?: string
    AND?: Ponto_ComercialWhereInput | Ponto_ComercialWhereInput[]
    OR?: Ponto_ComercialWhereInput[]
    NOT?: Ponto_ComercialWhereInput | Ponto_ComercialWhereInput[]
    name?: StringFilter<"Ponto_Comercial"> | string
    description?: StringFilter<"Ponto_Comercial"> | string
    creationDate?: DateTimeFilter<"Ponto_Comercial"> | Date | string
    reportNumber?: IntFilter<"Ponto_Comercial"> | number
    isPublished?: BoolFilter<"Ponto_Comercial"> | boolean
    businessId?: StringFilter<"Ponto_Comercial"> | string
    User_Business?: XOR<User_BusinessScalarRelationFilter, User_BusinessWhereInput>
    avaliationCommercialPoint?: AvaliationCommercialPointListRelationFilter
    commentCommercialPointByCommercialPointId?: CommentCommercialPointListRelationFilter
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointListRelationFilter
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointListRelationFilter
    RoadMapRelation?: Travel_Road_MapListRelationFilter
    reportCommercialPointByIdCommercialPoint?: ReportCommercialPointListRelationFilter
  }, "id" | "local" | "userImageUrl">

  export type Ponto_ComercialOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    local?: SortOrder
    creationDate?: SortOrder
    userImageUrl?: SortOrderInput | SortOrder
    reportNumber?: SortOrder
    isPublished?: SortOrder
    businessId?: SortOrder
    _count?: Ponto_ComercialCountOrderByAggregateInput
    _avg?: Ponto_ComercialAvgOrderByAggregateInput
    _max?: Ponto_ComercialMaxOrderByAggregateInput
    _min?: Ponto_ComercialMinOrderByAggregateInput
    _sum?: Ponto_ComercialSumOrderByAggregateInput
  }

  export type Ponto_ComercialScalarWhereWithAggregatesInput = {
    AND?: Ponto_ComercialScalarWhereWithAggregatesInput | Ponto_ComercialScalarWhereWithAggregatesInput[]
    OR?: Ponto_ComercialScalarWhereWithAggregatesInput[]
    NOT?: Ponto_ComercialScalarWhereWithAggregatesInput | Ponto_ComercialScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Ponto_Comercial"> | string
    name?: StringWithAggregatesFilter<"Ponto_Comercial"> | string
    description?: StringWithAggregatesFilter<"Ponto_Comercial"> | string
    local?: StringWithAggregatesFilter<"Ponto_Comercial"> | string
    creationDate?: DateTimeWithAggregatesFilter<"Ponto_Comercial"> | Date | string
    userImageUrl?: StringNullableWithAggregatesFilter<"Ponto_Comercial"> | string | null
    reportNumber?: IntWithAggregatesFilter<"Ponto_Comercial"> | number
    isPublished?: BoolWithAggregatesFilter<"Ponto_Comercial"> | boolean
    businessId?: StringWithAggregatesFilter<"Ponto_Comercial"> | string
  }

  export type Ponto_TuristicoWhereInput = {
    AND?: Ponto_TuristicoWhereInput | Ponto_TuristicoWhereInput[]
    OR?: Ponto_TuristicoWhereInput[]
    NOT?: Ponto_TuristicoWhereInput | Ponto_TuristicoWhereInput[]
    id?: StringFilter<"Ponto_Turistico"> | string
    name?: StringFilter<"Ponto_Turistico"> | string
    description?: StringFilter<"Ponto_Turistico"> | string
    creationDate?: DateTimeFilter<"Ponto_Turistico"> | Date | string
    local?: StringFilter<"Ponto_Turistico"> | string
    userImageUrl?: StringNullableFilter<"Ponto_Turistico"> | string | null
    reportNumber?: IntFilter<"Ponto_Turistico"> | number
    isPublished?: BoolFilter<"Ponto_Turistico"> | boolean
    avaliationTouristPoint?: AvaliationTouristPointListRelationFilter
    commentTouristPointByTouristPointId?: CommentTouristPointListRelationFilter
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointListRelationFilter
    ImageTouristPointByTouristPointId?: ImageTouristPointListRelationFilter
    RoadMapRelation?: Travel_Road_MapListRelationFilter
    userReportTouristPointByIdTouristPoint?: ReportTouristPointListRelationFilter
    userNotificationTouristPointByIdTouristPoint?: NotificationTouristPointListRelationFilter
  }

  export type Ponto_TuristicoOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    creationDate?: SortOrder
    local?: SortOrder
    userImageUrl?: SortOrderInput | SortOrder
    reportNumber?: SortOrder
    isPublished?: SortOrder
    avaliationTouristPoint?: AvaliationTouristPointOrderByRelationAggregateInput
    commentTouristPointByTouristPointId?: CommentTouristPointOrderByRelationAggregateInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointOrderByRelationAggregateInput
    ImageTouristPointByTouristPointId?: ImageTouristPointOrderByRelationAggregateInput
    RoadMapRelation?: Travel_Road_MapOrderByRelationAggregateInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointOrderByRelationAggregateInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointOrderByRelationAggregateInput
    _relevance?: Ponto_TuristicoOrderByRelevanceInput
  }

  export type Ponto_TuristicoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    local?: string
    userImageUrl?: string
    AND?: Ponto_TuristicoWhereInput | Ponto_TuristicoWhereInput[]
    OR?: Ponto_TuristicoWhereInput[]
    NOT?: Ponto_TuristicoWhereInput | Ponto_TuristicoWhereInput[]
    name?: StringFilter<"Ponto_Turistico"> | string
    description?: StringFilter<"Ponto_Turistico"> | string
    creationDate?: DateTimeFilter<"Ponto_Turistico"> | Date | string
    reportNumber?: IntFilter<"Ponto_Turistico"> | number
    isPublished?: BoolFilter<"Ponto_Turistico"> | boolean
    avaliationTouristPoint?: AvaliationTouristPointListRelationFilter
    commentTouristPointByTouristPointId?: CommentTouristPointListRelationFilter
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointListRelationFilter
    ImageTouristPointByTouristPointId?: ImageTouristPointListRelationFilter
    RoadMapRelation?: Travel_Road_MapListRelationFilter
    userReportTouristPointByIdTouristPoint?: ReportTouristPointListRelationFilter
    userNotificationTouristPointByIdTouristPoint?: NotificationTouristPointListRelationFilter
  }, "id" | "local" | "userImageUrl">

  export type Ponto_TuristicoOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    creationDate?: SortOrder
    local?: SortOrder
    userImageUrl?: SortOrderInput | SortOrder
    reportNumber?: SortOrder
    isPublished?: SortOrder
    _count?: Ponto_TuristicoCountOrderByAggregateInput
    _avg?: Ponto_TuristicoAvgOrderByAggregateInput
    _max?: Ponto_TuristicoMaxOrderByAggregateInput
    _min?: Ponto_TuristicoMinOrderByAggregateInput
    _sum?: Ponto_TuristicoSumOrderByAggregateInput
  }

  export type Ponto_TuristicoScalarWhereWithAggregatesInput = {
    AND?: Ponto_TuristicoScalarWhereWithAggregatesInput | Ponto_TuristicoScalarWhereWithAggregatesInput[]
    OR?: Ponto_TuristicoScalarWhereWithAggregatesInput[]
    NOT?: Ponto_TuristicoScalarWhereWithAggregatesInput | Ponto_TuristicoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Ponto_Turistico"> | string
    name?: StringWithAggregatesFilter<"Ponto_Turistico"> | string
    description?: StringWithAggregatesFilter<"Ponto_Turistico"> | string
    creationDate?: DateTimeWithAggregatesFilter<"Ponto_Turistico"> | Date | string
    local?: StringWithAggregatesFilter<"Ponto_Turistico"> | string
    userImageUrl?: StringNullableWithAggregatesFilter<"Ponto_Turistico"> | string | null
    reportNumber?: IntWithAggregatesFilter<"Ponto_Turistico"> | number
    isPublished?: BoolWithAggregatesFilter<"Ponto_Turistico"> | boolean
  }

  export type Travel_Road_MapWhereInput = {
    AND?: Travel_Road_MapWhereInput | Travel_Road_MapWhereInput[]
    OR?: Travel_Road_MapWhereInput[]
    NOT?: Travel_Road_MapWhereInput | Travel_Road_MapWhereInput[]
    id?: StringFilter<"Travel_Road_Map"> | string
    title?: StringFilter<"Travel_Road_Map"> | string
    dataPublication?: DateTimeNullableFilter<"Travel_Road_Map"> | Date | string | null
    description?: StringFilter<"Travel_Road_Map"> | string
    idCreator?: StringFilter<"Travel_Road_Map"> | string
    avaliationValue?: IntFilter<"Travel_Road_Map"> | number
    isPublished?: BoolFilter<"Travel_Road_Map"> | boolean
    userImageUrl?: StringNullableFilter<"Travel_Road_Map"> | string | null
    reportNumber?: IntFilter<"Travel_Road_Map"> | number
    userClient?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    AvaliationRoadMap?: AvaliationRoadMapListRelationFilter
    commentRoadMapByRoadMapId?: CommentRoadMapListRelationFilter
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapListRelationFilter
    ImageRoadMapByRoadMapId?: ImageRoadMapListRelationFilter
    PontosTuristicosRelation?: Ponto_TuristicoListRelationFilter
    PontosComerciaisRelation?: Ponto_ComercialListRelationFilter
    CountryRelation?: CountryListRelationFilter
    StateRelation?: StateListRelationFilter
    CityRelation?: CityListRelationFilter
    userReportRoadMapByIdRoadMap?: ReportRoadMapListRelationFilter
    userNotificationRoadMapByIdRoadMap?: NotificationRoadMapListRelationFilter
  }

  export type Travel_Road_MapOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    dataPublication?: SortOrderInput | SortOrder
    description?: SortOrder
    idCreator?: SortOrder
    avaliationValue?: SortOrder
    isPublished?: SortOrder
    userImageUrl?: SortOrderInput | SortOrder
    reportNumber?: SortOrder
    userClient?: User_ClientOrderByWithRelationInput
    AvaliationRoadMap?: AvaliationRoadMapOrderByRelationAggregateInput
    commentRoadMapByRoadMapId?: CommentRoadMapOrderByRelationAggregateInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapOrderByRelationAggregateInput
    ImageRoadMapByRoadMapId?: ImageRoadMapOrderByRelationAggregateInput
    PontosTuristicosRelation?: Ponto_TuristicoOrderByRelationAggregateInput
    PontosComerciaisRelation?: Ponto_ComercialOrderByRelationAggregateInput
    CountryRelation?: CountryOrderByRelationAggregateInput
    StateRelation?: StateOrderByRelationAggregateInput
    CityRelation?: CityOrderByRelationAggregateInput
    userReportRoadMapByIdRoadMap?: reportRoadMapOrderByRelationAggregateInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapOrderByRelationAggregateInput
    _relevance?: Travel_Road_MapOrderByRelevanceInput
  }

  export type Travel_Road_MapWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userImageUrl?: string
    AND?: Travel_Road_MapWhereInput | Travel_Road_MapWhereInput[]
    OR?: Travel_Road_MapWhereInput[]
    NOT?: Travel_Road_MapWhereInput | Travel_Road_MapWhereInput[]
    title?: StringFilter<"Travel_Road_Map"> | string
    dataPublication?: DateTimeNullableFilter<"Travel_Road_Map"> | Date | string | null
    description?: StringFilter<"Travel_Road_Map"> | string
    idCreator?: StringFilter<"Travel_Road_Map"> | string
    avaliationValue?: IntFilter<"Travel_Road_Map"> | number
    isPublished?: BoolFilter<"Travel_Road_Map"> | boolean
    reportNumber?: IntFilter<"Travel_Road_Map"> | number
    userClient?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    AvaliationRoadMap?: AvaliationRoadMapListRelationFilter
    commentRoadMapByRoadMapId?: CommentRoadMapListRelationFilter
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapListRelationFilter
    ImageRoadMapByRoadMapId?: ImageRoadMapListRelationFilter
    PontosTuristicosRelation?: Ponto_TuristicoListRelationFilter
    PontosComerciaisRelation?: Ponto_ComercialListRelationFilter
    CountryRelation?: CountryListRelationFilter
    StateRelation?: StateListRelationFilter
    CityRelation?: CityListRelationFilter
    userReportRoadMapByIdRoadMap?: ReportRoadMapListRelationFilter
    userNotificationRoadMapByIdRoadMap?: NotificationRoadMapListRelationFilter
  }, "id" | "userImageUrl">

  export type Travel_Road_MapOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    dataPublication?: SortOrderInput | SortOrder
    description?: SortOrder
    idCreator?: SortOrder
    avaliationValue?: SortOrder
    isPublished?: SortOrder
    userImageUrl?: SortOrderInput | SortOrder
    reportNumber?: SortOrder
    _count?: Travel_Road_MapCountOrderByAggregateInput
    _avg?: Travel_Road_MapAvgOrderByAggregateInput
    _max?: Travel_Road_MapMaxOrderByAggregateInput
    _min?: Travel_Road_MapMinOrderByAggregateInput
    _sum?: Travel_Road_MapSumOrderByAggregateInput
  }

  export type Travel_Road_MapScalarWhereWithAggregatesInput = {
    AND?: Travel_Road_MapScalarWhereWithAggregatesInput | Travel_Road_MapScalarWhereWithAggregatesInput[]
    OR?: Travel_Road_MapScalarWhereWithAggregatesInput[]
    NOT?: Travel_Road_MapScalarWhereWithAggregatesInput | Travel_Road_MapScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Travel_Road_Map"> | string
    title?: StringWithAggregatesFilter<"Travel_Road_Map"> | string
    dataPublication?: DateTimeNullableWithAggregatesFilter<"Travel_Road_Map"> | Date | string | null
    description?: StringWithAggregatesFilter<"Travel_Road_Map"> | string
    idCreator?: StringWithAggregatesFilter<"Travel_Road_Map"> | string
    avaliationValue?: IntWithAggregatesFilter<"Travel_Road_Map"> | number
    isPublished?: BoolWithAggregatesFilter<"Travel_Road_Map"> | boolean
    userImageUrl?: StringNullableWithAggregatesFilter<"Travel_Road_Map"> | string | null
    reportNumber?: IntWithAggregatesFilter<"Travel_Road_Map"> | number
  }

  export type CountryWhereInput = {
    AND?: CountryWhereInput | CountryWhereInput[]
    OR?: CountryWhereInput[]
    NOT?: CountryWhereInput | CountryWhereInput[]
    id?: StringFilter<"Country"> | string
    name?: StringFilter<"Country"> | string
    StateByCountryName?: StateListRelationFilter
    CityByCountryName?: CityListRelationFilter
    RoadMapRelation?: Travel_Road_MapListRelationFilter
  }

  export type CountryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    StateByCountryName?: StateOrderByRelationAggregateInput
    CityByCountryName?: CityOrderByRelationAggregateInput
    RoadMapRelation?: Travel_Road_MapOrderByRelationAggregateInput
    _relevance?: CountryOrderByRelevanceInput
  }

  export type CountryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: CountryWhereInput | CountryWhereInput[]
    OR?: CountryWhereInput[]
    NOT?: CountryWhereInput | CountryWhereInput[]
    StateByCountryName?: StateListRelationFilter
    CityByCountryName?: CityListRelationFilter
    RoadMapRelation?: Travel_Road_MapListRelationFilter
  }, "id" | "name">

  export type CountryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    _count?: CountryCountOrderByAggregateInput
    _max?: CountryMaxOrderByAggregateInput
    _min?: CountryMinOrderByAggregateInput
  }

  export type CountryScalarWhereWithAggregatesInput = {
    AND?: CountryScalarWhereWithAggregatesInput | CountryScalarWhereWithAggregatesInput[]
    OR?: CountryScalarWhereWithAggregatesInput[]
    NOT?: CountryScalarWhereWithAggregatesInput | CountryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Country"> | string
    name?: StringWithAggregatesFilter<"Country"> | string
  }

  export type StateWhereInput = {
    AND?: StateWhereInput | StateWhereInput[]
    OR?: StateWhereInput[]
    NOT?: StateWhereInput | StateWhereInput[]
    id?: StringFilter<"State"> | string
    name?: StringFilter<"State"> | string
    countryName?: StringFilter<"State"> | string
    CountryByCountryName?: XOR<CountryScalarRelationFilter, CountryWhereInput>
    StateByStateName?: CityListRelationFilter
    RoadMapRelation?: Travel_Road_MapListRelationFilter
  }

  export type StateOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    countryName?: SortOrder
    CountryByCountryName?: CountryOrderByWithRelationInput
    StateByStateName?: CityOrderByRelationAggregateInput
    RoadMapRelation?: Travel_Road_MapOrderByRelationAggregateInput
    _relevance?: StateOrderByRelevanceInput
  }

  export type StateWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    countryName?: string
    AND?: StateWhereInput | StateWhereInput[]
    OR?: StateWhereInput[]
    NOT?: StateWhereInput | StateWhereInput[]
    CountryByCountryName?: XOR<CountryScalarRelationFilter, CountryWhereInput>
    StateByStateName?: CityListRelationFilter
    RoadMapRelation?: Travel_Road_MapListRelationFilter
  }, "id" | "name" | "countryName">

  export type StateOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    countryName?: SortOrder
    _count?: StateCountOrderByAggregateInput
    _max?: StateMaxOrderByAggregateInput
    _min?: StateMinOrderByAggregateInput
  }

  export type StateScalarWhereWithAggregatesInput = {
    AND?: StateScalarWhereWithAggregatesInput | StateScalarWhereWithAggregatesInput[]
    OR?: StateScalarWhereWithAggregatesInput[]
    NOT?: StateScalarWhereWithAggregatesInput | StateScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"State"> | string
    name?: StringWithAggregatesFilter<"State"> | string
    countryName?: StringWithAggregatesFilter<"State"> | string
  }

  export type CityWhereInput = {
    AND?: CityWhereInput | CityWhereInput[]
    OR?: CityWhereInput[]
    NOT?: CityWhereInput | CityWhereInput[]
    id?: StringFilter<"City"> | string
    name?: StringFilter<"City"> | string
    countryName?: StringFilter<"City"> | string
    stateName?: StringFilter<"City"> | string
    StateByStateName?: XOR<StateScalarRelationFilter, StateWhereInput>
    CityByCountryName?: XOR<CountryScalarRelationFilter, CountryWhereInput>
    RoadMapRelation?: Travel_Road_MapListRelationFilter
  }

  export type CityOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    countryName?: SortOrder
    stateName?: SortOrder
    StateByStateName?: StateOrderByWithRelationInput
    CityByCountryName?: CountryOrderByWithRelationInput
    RoadMapRelation?: Travel_Road_MapOrderByRelationAggregateInput
    _relevance?: CityOrderByRelevanceInput
  }

  export type CityWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    countryName?: string
    stateName?: string
    AND?: CityWhereInput | CityWhereInput[]
    OR?: CityWhereInput[]
    NOT?: CityWhereInput | CityWhereInput[]
    StateByStateName?: XOR<StateScalarRelationFilter, StateWhereInput>
    CityByCountryName?: XOR<CountryScalarRelationFilter, CountryWhereInput>
    RoadMapRelation?: Travel_Road_MapListRelationFilter
  }, "id" | "name" | "countryName" | "stateName">

  export type CityOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    countryName?: SortOrder
    stateName?: SortOrder
    _count?: CityCountOrderByAggregateInput
    _max?: CityMaxOrderByAggregateInput
    _min?: CityMinOrderByAggregateInput
  }

  export type CityScalarWhereWithAggregatesInput = {
    AND?: CityScalarWhereWithAggregatesInput | CityScalarWhereWithAggregatesInput[]
    OR?: CityScalarWhereWithAggregatesInput[]
    NOT?: CityScalarWhereWithAggregatesInput | CityScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"City"> | string
    name?: StringWithAggregatesFilter<"City"> | string
    countryName?: StringWithAggregatesFilter<"City"> | string
    stateName?: StringWithAggregatesFilter<"City"> | string
  }

  export type ImageTouristPointWhereInput = {
    AND?: ImageTouristPointWhereInput | ImageTouristPointWhereInput[]
    OR?: ImageTouristPointWhereInput[]
    NOT?: ImageTouristPointWhereInput | ImageTouristPointWhereInput[]
    id?: StringFilter<"ImageTouristPoint"> | string
    image?: StringFilter<"ImageTouristPoint"> | string
    idTouristPoint?: StringFilter<"ImageTouristPoint"> | string
    userTouristPointByTouristPointId?: XOR<Ponto_TuristicoScalarRelationFilter, Ponto_TuristicoWhereInput>
  }

  export type ImageTouristPointOrderByWithRelationInput = {
    id?: SortOrder
    image?: SortOrder
    idTouristPoint?: SortOrder
    userTouristPointByTouristPointId?: Ponto_TuristicoOrderByWithRelationInput
    _relevance?: ImageTouristPointOrderByRelevanceInput
  }

  export type ImageTouristPointWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    image?: string
    idTouristPoint?: string
    AND?: ImageTouristPointWhereInput | ImageTouristPointWhereInput[]
    OR?: ImageTouristPointWhereInput[]
    NOT?: ImageTouristPointWhereInput | ImageTouristPointWhereInput[]
    userTouristPointByTouristPointId?: XOR<Ponto_TuristicoScalarRelationFilter, Ponto_TuristicoWhereInput>
  }, "id" | "image" | "idTouristPoint">

  export type ImageTouristPointOrderByWithAggregationInput = {
    id?: SortOrder
    image?: SortOrder
    idTouristPoint?: SortOrder
    _count?: ImageTouristPointCountOrderByAggregateInput
    _max?: ImageTouristPointMaxOrderByAggregateInput
    _min?: ImageTouristPointMinOrderByAggregateInput
  }

  export type ImageTouristPointScalarWhereWithAggregatesInput = {
    AND?: ImageTouristPointScalarWhereWithAggregatesInput | ImageTouristPointScalarWhereWithAggregatesInput[]
    OR?: ImageTouristPointScalarWhereWithAggregatesInput[]
    NOT?: ImageTouristPointScalarWhereWithAggregatesInput | ImageTouristPointScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ImageTouristPoint"> | string
    image?: StringWithAggregatesFilter<"ImageTouristPoint"> | string
    idTouristPoint?: StringWithAggregatesFilter<"ImageTouristPoint"> | string
  }

  export type ImageCommercialPointWhereInput = {
    AND?: ImageCommercialPointWhereInput | ImageCommercialPointWhereInput[]
    OR?: ImageCommercialPointWhereInput[]
    NOT?: ImageCommercialPointWhereInput | ImageCommercialPointWhereInput[]
    id?: StringFilter<"ImageCommercialPoint"> | string
    image?: StringFilter<"ImageCommercialPoint"> | string
    idCommercialPoint?: StringFilter<"ImageCommercialPoint"> | string
    userCommercialPointByCommercialPointId?: XOR<Ponto_ComercialScalarRelationFilter, Ponto_ComercialWhereInput>
  }

  export type ImageCommercialPointOrderByWithRelationInput = {
    id?: SortOrder
    image?: SortOrder
    idCommercialPoint?: SortOrder
    userCommercialPointByCommercialPointId?: Ponto_ComercialOrderByWithRelationInput
    _relevance?: ImageCommercialPointOrderByRelevanceInput
  }

  export type ImageCommercialPointWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    image?: string
    idCommercialPoint?: string
    AND?: ImageCommercialPointWhereInput | ImageCommercialPointWhereInput[]
    OR?: ImageCommercialPointWhereInput[]
    NOT?: ImageCommercialPointWhereInput | ImageCommercialPointWhereInput[]
    userCommercialPointByCommercialPointId?: XOR<Ponto_ComercialScalarRelationFilter, Ponto_ComercialWhereInput>
  }, "id" | "image" | "idCommercialPoint">

  export type ImageCommercialPointOrderByWithAggregationInput = {
    id?: SortOrder
    image?: SortOrder
    idCommercialPoint?: SortOrder
    _count?: ImageCommercialPointCountOrderByAggregateInput
    _max?: ImageCommercialPointMaxOrderByAggregateInput
    _min?: ImageCommercialPointMinOrderByAggregateInput
  }

  export type ImageCommercialPointScalarWhereWithAggregatesInput = {
    AND?: ImageCommercialPointScalarWhereWithAggregatesInput | ImageCommercialPointScalarWhereWithAggregatesInput[]
    OR?: ImageCommercialPointScalarWhereWithAggregatesInput[]
    NOT?: ImageCommercialPointScalarWhereWithAggregatesInput | ImageCommercialPointScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ImageCommercialPoint"> | string
    image?: StringWithAggregatesFilter<"ImageCommercialPoint"> | string
    idCommercialPoint?: StringWithAggregatesFilter<"ImageCommercialPoint"> | string
  }

  export type ImageRoadMapWhereInput = {
    AND?: ImageRoadMapWhereInput | ImageRoadMapWhereInput[]
    OR?: ImageRoadMapWhereInput[]
    NOT?: ImageRoadMapWhereInput | ImageRoadMapWhereInput[]
    id?: StringFilter<"ImageRoadMap"> | string
    image?: StringFilter<"ImageRoadMap"> | string
    idRoadMap?: StringFilter<"ImageRoadMap"> | string
    userRoadMapByRoadMapId?: XOR<Travel_Road_MapScalarRelationFilter, Travel_Road_MapWhereInput>
  }

  export type ImageRoadMapOrderByWithRelationInput = {
    id?: SortOrder
    image?: SortOrder
    idRoadMap?: SortOrder
    userRoadMapByRoadMapId?: Travel_Road_MapOrderByWithRelationInput
    _relevance?: ImageRoadMapOrderByRelevanceInput
  }

  export type ImageRoadMapWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    image?: string
    idRoadMap?: string
    AND?: ImageRoadMapWhereInput | ImageRoadMapWhereInput[]
    OR?: ImageRoadMapWhereInput[]
    NOT?: ImageRoadMapWhereInput | ImageRoadMapWhereInput[]
    userRoadMapByRoadMapId?: XOR<Travel_Road_MapScalarRelationFilter, Travel_Road_MapWhereInput>
  }, "id" | "image" | "idRoadMap">

  export type ImageRoadMapOrderByWithAggregationInput = {
    id?: SortOrder
    image?: SortOrder
    idRoadMap?: SortOrder
    _count?: ImageRoadMapCountOrderByAggregateInput
    _max?: ImageRoadMapMaxOrderByAggregateInput
    _min?: ImageRoadMapMinOrderByAggregateInput
  }

  export type ImageRoadMapScalarWhereWithAggregatesInput = {
    AND?: ImageRoadMapScalarWhereWithAggregatesInput | ImageRoadMapScalarWhereWithAggregatesInput[]
    OR?: ImageRoadMapScalarWhereWithAggregatesInput[]
    NOT?: ImageRoadMapScalarWhereWithAggregatesInput | ImageRoadMapScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ImageRoadMap"> | string
    image?: StringWithAggregatesFilter<"ImageRoadMap"> | string
    idRoadMap?: StringWithAggregatesFilter<"ImageRoadMap"> | string
  }

  export type CommentRoadMapWhereInput = {
    AND?: CommentRoadMapWhereInput | CommentRoadMapWhereInput[]
    OR?: CommentRoadMapWhereInput[]
    NOT?: CommentRoadMapWhereInput | CommentRoadMapWhereInput[]
    id?: StringFilter<"CommentRoadMap"> | string
    dataPublication?: DateTimeFilter<"CommentRoadMap"> | Date | string
    content?: StringFilter<"CommentRoadMap"> | string
    userClientEmail?: StringFilter<"CommentRoadMap"> | string
    idUserClient?: StringFilter<"CommentRoadMap"> | string
    idTravelRoadMap?: StringFilter<"CommentRoadMap"> | string
    userClientByClientEmail?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userClientByClientId?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userRoadMapByRoadMapId?: XOR<Travel_Road_MapScalarRelationFilter, Travel_Road_MapWhereInput>
  }

  export type CommentRoadMapOrderByWithRelationInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    content?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTravelRoadMap?: SortOrder
    userClientByClientEmail?: User_ClientOrderByWithRelationInput
    userClientByClientId?: User_ClientOrderByWithRelationInput
    userRoadMapByRoadMapId?: Travel_Road_MapOrderByWithRelationInput
    _relevance?: CommentRoadMapOrderByRelevanceInput
  }

  export type CommentRoadMapWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userClientEmail?: string
    idUserClient?: string
    idTravelRoadMap?: string
    AND?: CommentRoadMapWhereInput | CommentRoadMapWhereInput[]
    OR?: CommentRoadMapWhereInput[]
    NOT?: CommentRoadMapWhereInput | CommentRoadMapWhereInput[]
    dataPublication?: DateTimeFilter<"CommentRoadMap"> | Date | string
    content?: StringFilter<"CommentRoadMap"> | string
    userClientByClientEmail?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userClientByClientId?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userRoadMapByRoadMapId?: XOR<Travel_Road_MapScalarRelationFilter, Travel_Road_MapWhereInput>
  }, "id" | "userClientEmail" | "idUserClient" | "idTravelRoadMap">

  export type CommentRoadMapOrderByWithAggregationInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    content?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTravelRoadMap?: SortOrder
    _count?: CommentRoadMapCountOrderByAggregateInput
    _max?: CommentRoadMapMaxOrderByAggregateInput
    _min?: CommentRoadMapMinOrderByAggregateInput
  }

  export type CommentRoadMapScalarWhereWithAggregatesInput = {
    AND?: CommentRoadMapScalarWhereWithAggregatesInput | CommentRoadMapScalarWhereWithAggregatesInput[]
    OR?: CommentRoadMapScalarWhereWithAggregatesInput[]
    NOT?: CommentRoadMapScalarWhereWithAggregatesInput | CommentRoadMapScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CommentRoadMap"> | string
    dataPublication?: DateTimeWithAggregatesFilter<"CommentRoadMap"> | Date | string
    content?: StringWithAggregatesFilter<"CommentRoadMap"> | string
    userClientEmail?: StringWithAggregatesFilter<"CommentRoadMap"> | string
    idUserClient?: StringWithAggregatesFilter<"CommentRoadMap"> | string
    idTravelRoadMap?: StringWithAggregatesFilter<"CommentRoadMap"> | string
  }

  export type CommentTouristPointWhereInput = {
    AND?: CommentTouristPointWhereInput | CommentTouristPointWhereInput[]
    OR?: CommentTouristPointWhereInput[]
    NOT?: CommentTouristPointWhereInput | CommentTouristPointWhereInput[]
    id?: StringFilter<"CommentTouristPoint"> | string
    dataPublication?: DateTimeFilter<"CommentTouristPoint"> | Date | string
    content?: StringFilter<"CommentTouristPoint"> | string
    userClientEmail?: StringFilter<"CommentTouristPoint"> | string
    idUserClient?: StringFilter<"CommentTouristPoint"> | string
    idTouristPoint?: StringFilter<"CommentTouristPoint"> | string
    userClientByClientEmail?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userClientByClientId?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userTouristPointByTouristPointId?: XOR<Ponto_TuristicoScalarRelationFilter, Ponto_TuristicoWhereInput>
  }

  export type CommentTouristPointOrderByWithRelationInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    content?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTouristPoint?: SortOrder
    userClientByClientEmail?: User_ClientOrderByWithRelationInput
    userClientByClientId?: User_ClientOrderByWithRelationInput
    userTouristPointByTouristPointId?: Ponto_TuristicoOrderByWithRelationInput
    _relevance?: CommentTouristPointOrderByRelevanceInput
  }

  export type CommentTouristPointWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userClientEmail?: string
    idUserClient?: string
    idTouristPoint?: string
    AND?: CommentTouristPointWhereInput | CommentTouristPointWhereInput[]
    OR?: CommentTouristPointWhereInput[]
    NOT?: CommentTouristPointWhereInput | CommentTouristPointWhereInput[]
    dataPublication?: DateTimeFilter<"CommentTouristPoint"> | Date | string
    content?: StringFilter<"CommentTouristPoint"> | string
    userClientByClientEmail?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userClientByClientId?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userTouristPointByTouristPointId?: XOR<Ponto_TuristicoScalarRelationFilter, Ponto_TuristicoWhereInput>
  }, "id" | "userClientEmail" | "idUserClient" | "idTouristPoint">

  export type CommentTouristPointOrderByWithAggregationInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    content?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTouristPoint?: SortOrder
    _count?: CommentTouristPointCountOrderByAggregateInput
    _max?: CommentTouristPointMaxOrderByAggregateInput
    _min?: CommentTouristPointMinOrderByAggregateInput
  }

  export type CommentTouristPointScalarWhereWithAggregatesInput = {
    AND?: CommentTouristPointScalarWhereWithAggregatesInput | CommentTouristPointScalarWhereWithAggregatesInput[]
    OR?: CommentTouristPointScalarWhereWithAggregatesInput[]
    NOT?: CommentTouristPointScalarWhereWithAggregatesInput | CommentTouristPointScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CommentTouristPoint"> | string
    dataPublication?: DateTimeWithAggregatesFilter<"CommentTouristPoint"> | Date | string
    content?: StringWithAggregatesFilter<"CommentTouristPoint"> | string
    userClientEmail?: StringWithAggregatesFilter<"CommentTouristPoint"> | string
    idUserClient?: StringWithAggregatesFilter<"CommentTouristPoint"> | string
    idTouristPoint?: StringWithAggregatesFilter<"CommentTouristPoint"> | string
  }

  export type CommentCommercialPointWhereInput = {
    AND?: CommentCommercialPointWhereInput | CommentCommercialPointWhereInput[]
    OR?: CommentCommercialPointWhereInput[]
    NOT?: CommentCommercialPointWhereInput | CommentCommercialPointWhereInput[]
    id?: StringFilter<"CommentCommercialPoint"> | string
    dataPublication?: DateTimeFilter<"CommentCommercialPoint"> | Date | string
    content?: StringFilter<"CommentCommercialPoint"> | string
    userClientEmail?: StringFilter<"CommentCommercialPoint"> | string
    idUserClient?: StringFilter<"CommentCommercialPoint"> | string
    idCommercialPoint?: StringFilter<"CommentCommercialPoint"> | string
    userClientByClientEmail?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userClientByClientId?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userCommercialPointByCommercialPointId?: XOR<Ponto_ComercialScalarRelationFilter, Ponto_ComercialWhereInput>
  }

  export type CommentCommercialPointOrderByWithRelationInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    content?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idCommercialPoint?: SortOrder
    userClientByClientEmail?: User_ClientOrderByWithRelationInput
    userClientByClientId?: User_ClientOrderByWithRelationInput
    userCommercialPointByCommercialPointId?: Ponto_ComercialOrderByWithRelationInput
    _relevance?: CommentCommercialPointOrderByRelevanceInput
  }

  export type CommentCommercialPointWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userClientEmail?: string
    idUserClient?: string
    idCommercialPoint?: string
    AND?: CommentCommercialPointWhereInput | CommentCommercialPointWhereInput[]
    OR?: CommentCommercialPointWhereInput[]
    NOT?: CommentCommercialPointWhereInput | CommentCommercialPointWhereInput[]
    dataPublication?: DateTimeFilter<"CommentCommercialPoint"> | Date | string
    content?: StringFilter<"CommentCommercialPoint"> | string
    userClientByClientEmail?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userClientByClientId?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userCommercialPointByCommercialPointId?: XOR<Ponto_ComercialScalarRelationFilter, Ponto_ComercialWhereInput>
  }, "id" | "userClientEmail" | "idUserClient" | "idCommercialPoint">

  export type CommentCommercialPointOrderByWithAggregationInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    content?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idCommercialPoint?: SortOrder
    _count?: CommentCommercialPointCountOrderByAggregateInput
    _max?: CommentCommercialPointMaxOrderByAggregateInput
    _min?: CommentCommercialPointMinOrderByAggregateInput
  }

  export type CommentCommercialPointScalarWhereWithAggregatesInput = {
    AND?: CommentCommercialPointScalarWhereWithAggregatesInput | CommentCommercialPointScalarWhereWithAggregatesInput[]
    OR?: CommentCommercialPointScalarWhereWithAggregatesInput[]
    NOT?: CommentCommercialPointScalarWhereWithAggregatesInput | CommentCommercialPointScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CommentCommercialPoint"> | string
    dataPublication?: DateTimeWithAggregatesFilter<"CommentCommercialPoint"> | Date | string
    content?: StringWithAggregatesFilter<"CommentCommercialPoint"> | string
    userClientEmail?: StringWithAggregatesFilter<"CommentCommercialPoint"> | string
    idUserClient?: StringWithAggregatesFilter<"CommentCommercialPoint"> | string
    idCommercialPoint?: StringWithAggregatesFilter<"CommentCommercialPoint"> | string
  }

  export type AvaliationRoadMapWhereInput = {
    AND?: AvaliationRoadMapWhereInput | AvaliationRoadMapWhereInput[]
    OR?: AvaliationRoadMapWhereInput[]
    NOT?: AvaliationRoadMapWhereInput | AvaliationRoadMapWhereInput[]
    id?: StringFilter<"AvaliationRoadMap"> | string
    dataPublication?: DateTimeFilter<"AvaliationRoadMap"> | Date | string
    avaliation?: IntFilter<"AvaliationRoadMap"> | number
    userClientEmail?: StringFilter<"AvaliationRoadMap"> | string
    idUserClient?: StringFilter<"AvaliationRoadMap"> | string
    idTravelRoadMap?: StringFilter<"AvaliationRoadMap"> | string
    userClientByEmail?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userClientByIdClient?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userRoadMapByIdRoadMap?: XOR<Travel_Road_MapScalarRelationFilter, Travel_Road_MapWhereInput>
  }

  export type AvaliationRoadMapOrderByWithRelationInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    avaliation?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTravelRoadMap?: SortOrder
    userClientByEmail?: User_ClientOrderByWithRelationInput
    userClientByIdClient?: User_ClientOrderByWithRelationInput
    userRoadMapByIdRoadMap?: Travel_Road_MapOrderByWithRelationInput
    _relevance?: AvaliationRoadMapOrderByRelevanceInput
  }

  export type AvaliationRoadMapWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    idUserClient?: string
    idTravelRoadMap?: string
    AND?: AvaliationRoadMapWhereInput | AvaliationRoadMapWhereInput[]
    OR?: AvaliationRoadMapWhereInput[]
    NOT?: AvaliationRoadMapWhereInput | AvaliationRoadMapWhereInput[]
    dataPublication?: DateTimeFilter<"AvaliationRoadMap"> | Date | string
    avaliation?: IntFilter<"AvaliationRoadMap"> | number
    userClientEmail?: StringFilter<"AvaliationRoadMap"> | string
    userClientByEmail?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userClientByIdClient?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userRoadMapByIdRoadMap?: XOR<Travel_Road_MapScalarRelationFilter, Travel_Road_MapWhereInput>
  }, "id" | "idUserClient" | "idTravelRoadMap">

  export type AvaliationRoadMapOrderByWithAggregationInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    avaliation?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTravelRoadMap?: SortOrder
    _count?: AvaliationRoadMapCountOrderByAggregateInput
    _avg?: AvaliationRoadMapAvgOrderByAggregateInput
    _max?: AvaliationRoadMapMaxOrderByAggregateInput
    _min?: AvaliationRoadMapMinOrderByAggregateInput
    _sum?: AvaliationRoadMapSumOrderByAggregateInput
  }

  export type AvaliationRoadMapScalarWhereWithAggregatesInput = {
    AND?: AvaliationRoadMapScalarWhereWithAggregatesInput | AvaliationRoadMapScalarWhereWithAggregatesInput[]
    OR?: AvaliationRoadMapScalarWhereWithAggregatesInput[]
    NOT?: AvaliationRoadMapScalarWhereWithAggregatesInput | AvaliationRoadMapScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AvaliationRoadMap"> | string
    dataPublication?: DateTimeWithAggregatesFilter<"AvaliationRoadMap"> | Date | string
    avaliation?: IntWithAggregatesFilter<"AvaliationRoadMap"> | number
    userClientEmail?: StringWithAggregatesFilter<"AvaliationRoadMap"> | string
    idUserClient?: StringWithAggregatesFilter<"AvaliationRoadMap"> | string
    idTravelRoadMap?: StringWithAggregatesFilter<"AvaliationRoadMap"> | string
  }

  export type AvaliationTouristPointWhereInput = {
    AND?: AvaliationTouristPointWhereInput | AvaliationTouristPointWhereInput[]
    OR?: AvaliationTouristPointWhereInput[]
    NOT?: AvaliationTouristPointWhereInput | AvaliationTouristPointWhereInput[]
    id?: StringFilter<"AvaliationTouristPoint"> | string
    dataPublication?: DateTimeFilter<"AvaliationTouristPoint"> | Date | string
    avaliation?: IntFilter<"AvaliationTouristPoint"> | number
    userClientEmail?: StringFilter<"AvaliationTouristPoint"> | string
    idUserClient?: StringFilter<"AvaliationTouristPoint"> | string
    idTouristPoint?: StringFilter<"AvaliationTouristPoint"> | string
    userClientByEmail?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userClientByIdClient?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userTouristPointByIdTouristPoint?: XOR<Ponto_TuristicoScalarRelationFilter, Ponto_TuristicoWhereInput>
  }

  export type AvaliationTouristPointOrderByWithRelationInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    avaliation?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTouristPoint?: SortOrder
    userClientByEmail?: User_ClientOrderByWithRelationInput
    userClientByIdClient?: User_ClientOrderByWithRelationInput
    userTouristPointByIdTouristPoint?: Ponto_TuristicoOrderByWithRelationInput
    _relevance?: AvaliationTouristPointOrderByRelevanceInput
  }

  export type AvaliationTouristPointWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userClientEmail?: string
    idUserClient?: string
    idTouristPoint?: string
    AND?: AvaliationTouristPointWhereInput | AvaliationTouristPointWhereInput[]
    OR?: AvaliationTouristPointWhereInput[]
    NOT?: AvaliationTouristPointWhereInput | AvaliationTouristPointWhereInput[]
    dataPublication?: DateTimeFilter<"AvaliationTouristPoint"> | Date | string
    avaliation?: IntFilter<"AvaliationTouristPoint"> | number
    userClientByEmail?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userClientByIdClient?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userTouristPointByIdTouristPoint?: XOR<Ponto_TuristicoScalarRelationFilter, Ponto_TuristicoWhereInput>
  }, "id" | "userClientEmail" | "idUserClient" | "idTouristPoint">

  export type AvaliationTouristPointOrderByWithAggregationInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    avaliation?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTouristPoint?: SortOrder
    _count?: AvaliationTouristPointCountOrderByAggregateInput
    _avg?: AvaliationTouristPointAvgOrderByAggregateInput
    _max?: AvaliationTouristPointMaxOrderByAggregateInput
    _min?: AvaliationTouristPointMinOrderByAggregateInput
    _sum?: AvaliationTouristPointSumOrderByAggregateInput
  }

  export type AvaliationTouristPointScalarWhereWithAggregatesInput = {
    AND?: AvaliationTouristPointScalarWhereWithAggregatesInput | AvaliationTouristPointScalarWhereWithAggregatesInput[]
    OR?: AvaliationTouristPointScalarWhereWithAggregatesInput[]
    NOT?: AvaliationTouristPointScalarWhereWithAggregatesInput | AvaliationTouristPointScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AvaliationTouristPoint"> | string
    dataPublication?: DateTimeWithAggregatesFilter<"AvaliationTouristPoint"> | Date | string
    avaliation?: IntWithAggregatesFilter<"AvaliationTouristPoint"> | number
    userClientEmail?: StringWithAggregatesFilter<"AvaliationTouristPoint"> | string
    idUserClient?: StringWithAggregatesFilter<"AvaliationTouristPoint"> | string
    idTouristPoint?: StringWithAggregatesFilter<"AvaliationTouristPoint"> | string
  }

  export type AvaliationCommercialPointWhereInput = {
    AND?: AvaliationCommercialPointWhereInput | AvaliationCommercialPointWhereInput[]
    OR?: AvaliationCommercialPointWhereInput[]
    NOT?: AvaliationCommercialPointWhereInput | AvaliationCommercialPointWhereInput[]
    id?: StringFilter<"AvaliationCommercialPoint"> | string
    dataPublication?: DateTimeFilter<"AvaliationCommercialPoint"> | Date | string
    avaliation?: IntFilter<"AvaliationCommercialPoint"> | number
    userClientEmail?: StringFilter<"AvaliationCommercialPoint"> | string
    idUserClient?: StringFilter<"AvaliationCommercialPoint"> | string
    idCommercialPoint?: StringFilter<"AvaliationCommercialPoint"> | string
    userClientByEmailClient?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userClientByIdClient?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userCommercialPointByIdCommercialPoint?: XOR<Ponto_ComercialScalarRelationFilter, Ponto_ComercialWhereInput>
  }

  export type AvaliationCommercialPointOrderByWithRelationInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    avaliation?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idCommercialPoint?: SortOrder
    userClientByEmailClient?: User_ClientOrderByWithRelationInput
    userClientByIdClient?: User_ClientOrderByWithRelationInput
    userCommercialPointByIdCommercialPoint?: Ponto_ComercialOrderByWithRelationInput
    _relevance?: AvaliationCommercialPointOrderByRelevanceInput
  }

  export type AvaliationCommercialPointWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userClientEmail?: string
    idUserClient?: string
    idCommercialPoint?: string
    AND?: AvaliationCommercialPointWhereInput | AvaliationCommercialPointWhereInput[]
    OR?: AvaliationCommercialPointWhereInput[]
    NOT?: AvaliationCommercialPointWhereInput | AvaliationCommercialPointWhereInput[]
    dataPublication?: DateTimeFilter<"AvaliationCommercialPoint"> | Date | string
    avaliation?: IntFilter<"AvaliationCommercialPoint"> | number
    userClientByEmailClient?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userClientByIdClient?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userCommercialPointByIdCommercialPoint?: XOR<Ponto_ComercialScalarRelationFilter, Ponto_ComercialWhereInput>
  }, "id" | "userClientEmail" | "idUserClient" | "idCommercialPoint">

  export type AvaliationCommercialPointOrderByWithAggregationInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    avaliation?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idCommercialPoint?: SortOrder
    _count?: AvaliationCommercialPointCountOrderByAggregateInput
    _avg?: AvaliationCommercialPointAvgOrderByAggregateInput
    _max?: AvaliationCommercialPointMaxOrderByAggregateInput
    _min?: AvaliationCommercialPointMinOrderByAggregateInput
    _sum?: AvaliationCommercialPointSumOrderByAggregateInput
  }

  export type AvaliationCommercialPointScalarWhereWithAggregatesInput = {
    AND?: AvaliationCommercialPointScalarWhereWithAggregatesInput | AvaliationCommercialPointScalarWhereWithAggregatesInput[]
    OR?: AvaliationCommercialPointScalarWhereWithAggregatesInput[]
    NOT?: AvaliationCommercialPointScalarWhereWithAggregatesInput | AvaliationCommercialPointScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AvaliationCommercialPoint"> | string
    dataPublication?: DateTimeWithAggregatesFilter<"AvaliationCommercialPoint"> | Date | string
    avaliation?: IntWithAggregatesFilter<"AvaliationCommercialPoint"> | number
    userClientEmail?: StringWithAggregatesFilter<"AvaliationCommercialPoint"> | string
    idUserClient?: StringWithAggregatesFilter<"AvaliationCommercialPoint"> | string
    idCommercialPoint?: StringWithAggregatesFilter<"AvaliationCommercialPoint"> | string
  }

  export type FavoriteCommercialPointWhereInput = {
    AND?: FavoriteCommercialPointWhereInput | FavoriteCommercialPointWhereInput[]
    OR?: FavoriteCommercialPointWhereInput[]
    NOT?: FavoriteCommercialPointWhereInput | FavoriteCommercialPointWhereInput[]
    id?: StringFilter<"FavoriteCommercialPoint"> | string
    Favorite?: BoolFilter<"FavoriteCommercialPoint"> | boolean
    idUserClient?: StringFilter<"FavoriteCommercialPoint"> | string
    idCommercialPoint?: StringFilter<"FavoriteCommercialPoint"> | string
    userClientByClientId?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userCommercialPointByCommercialPointId?: XOR<Ponto_ComercialScalarRelationFilter, Ponto_ComercialWhereInput>
  }

  export type FavoriteCommercialPointOrderByWithRelationInput = {
    id?: SortOrder
    Favorite?: SortOrder
    idUserClient?: SortOrder
    idCommercialPoint?: SortOrder
    userClientByClientId?: User_ClientOrderByWithRelationInput
    userCommercialPointByCommercialPointId?: Ponto_ComercialOrderByWithRelationInput
    _relevance?: FavoriteCommercialPointOrderByRelevanceInput
  }

  export type FavoriteCommercialPointWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    idUserClient?: string
    idCommercialPoint?: string
    AND?: FavoriteCommercialPointWhereInput | FavoriteCommercialPointWhereInput[]
    OR?: FavoriteCommercialPointWhereInput[]
    NOT?: FavoriteCommercialPointWhereInput | FavoriteCommercialPointWhereInput[]
    Favorite?: BoolFilter<"FavoriteCommercialPoint"> | boolean
    userClientByClientId?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userCommercialPointByCommercialPointId?: XOR<Ponto_ComercialScalarRelationFilter, Ponto_ComercialWhereInput>
  }, "id" | "idUserClient" | "idCommercialPoint">

  export type FavoriteCommercialPointOrderByWithAggregationInput = {
    id?: SortOrder
    Favorite?: SortOrder
    idUserClient?: SortOrder
    idCommercialPoint?: SortOrder
    _count?: FavoriteCommercialPointCountOrderByAggregateInput
    _max?: FavoriteCommercialPointMaxOrderByAggregateInput
    _min?: FavoriteCommercialPointMinOrderByAggregateInput
  }

  export type FavoriteCommercialPointScalarWhereWithAggregatesInput = {
    AND?: FavoriteCommercialPointScalarWhereWithAggregatesInput | FavoriteCommercialPointScalarWhereWithAggregatesInput[]
    OR?: FavoriteCommercialPointScalarWhereWithAggregatesInput[]
    NOT?: FavoriteCommercialPointScalarWhereWithAggregatesInput | FavoriteCommercialPointScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FavoriteCommercialPoint"> | string
    Favorite?: BoolWithAggregatesFilter<"FavoriteCommercialPoint"> | boolean
    idUserClient?: StringWithAggregatesFilter<"FavoriteCommercialPoint"> | string
    idCommercialPoint?: StringWithAggregatesFilter<"FavoriteCommercialPoint"> | string
  }

  export type FavoriteTouristPointWhereInput = {
    AND?: FavoriteTouristPointWhereInput | FavoriteTouristPointWhereInput[]
    OR?: FavoriteTouristPointWhereInput[]
    NOT?: FavoriteTouristPointWhereInput | FavoriteTouristPointWhereInput[]
    id?: StringFilter<"FavoriteTouristPoint"> | string
    Favorite?: BoolFilter<"FavoriteTouristPoint"> | boolean
    idUserClient?: StringFilter<"FavoriteTouristPoint"> | string
    idTouristPoint?: StringFilter<"FavoriteTouristPoint"> | string
    userClientByClientId?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userTouristPointByTouristPointId?: XOR<Ponto_TuristicoScalarRelationFilter, Ponto_TuristicoWhereInput>
  }

  export type FavoriteTouristPointOrderByWithRelationInput = {
    id?: SortOrder
    Favorite?: SortOrder
    idUserClient?: SortOrder
    idTouristPoint?: SortOrder
    userClientByClientId?: User_ClientOrderByWithRelationInput
    userTouristPointByTouristPointId?: Ponto_TuristicoOrderByWithRelationInput
    _relevance?: FavoriteTouristPointOrderByRelevanceInput
  }

  export type FavoriteTouristPointWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    idUserClient?: string
    idTouristPoint?: string
    AND?: FavoriteTouristPointWhereInput | FavoriteTouristPointWhereInput[]
    OR?: FavoriteTouristPointWhereInput[]
    NOT?: FavoriteTouristPointWhereInput | FavoriteTouristPointWhereInput[]
    Favorite?: BoolFilter<"FavoriteTouristPoint"> | boolean
    userClientByClientId?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userTouristPointByTouristPointId?: XOR<Ponto_TuristicoScalarRelationFilter, Ponto_TuristicoWhereInput>
  }, "id" | "idUserClient" | "idTouristPoint">

  export type FavoriteTouristPointOrderByWithAggregationInput = {
    id?: SortOrder
    Favorite?: SortOrder
    idUserClient?: SortOrder
    idTouristPoint?: SortOrder
    _count?: FavoriteTouristPointCountOrderByAggregateInput
    _max?: FavoriteTouristPointMaxOrderByAggregateInput
    _min?: FavoriteTouristPointMinOrderByAggregateInput
  }

  export type FavoriteTouristPointScalarWhereWithAggregatesInput = {
    AND?: FavoriteTouristPointScalarWhereWithAggregatesInput | FavoriteTouristPointScalarWhereWithAggregatesInput[]
    OR?: FavoriteTouristPointScalarWhereWithAggregatesInput[]
    NOT?: FavoriteTouristPointScalarWhereWithAggregatesInput | FavoriteTouristPointScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FavoriteTouristPoint"> | string
    Favorite?: BoolWithAggregatesFilter<"FavoriteTouristPoint"> | boolean
    idUserClient?: StringWithAggregatesFilter<"FavoriteTouristPoint"> | string
    idTouristPoint?: StringWithAggregatesFilter<"FavoriteTouristPoint"> | string
  }

  export type FavoriteRoadMapWhereInput = {
    AND?: FavoriteRoadMapWhereInput | FavoriteRoadMapWhereInput[]
    OR?: FavoriteRoadMapWhereInput[]
    NOT?: FavoriteRoadMapWhereInput | FavoriteRoadMapWhereInput[]
    id?: StringFilter<"FavoriteRoadMap"> | string
    Favorite?: BoolFilter<"FavoriteRoadMap"> | boolean
    idUserClient?: StringFilter<"FavoriteRoadMap"> | string
    idRoadMap?: StringFilter<"FavoriteRoadMap"> | string
    userClientByClientId?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userRoadMapPointByRoadMapId?: XOR<Travel_Road_MapScalarRelationFilter, Travel_Road_MapWhereInput>
  }

  export type FavoriteRoadMapOrderByWithRelationInput = {
    id?: SortOrder
    Favorite?: SortOrder
    idUserClient?: SortOrder
    idRoadMap?: SortOrder
    userClientByClientId?: User_ClientOrderByWithRelationInput
    userRoadMapPointByRoadMapId?: Travel_Road_MapOrderByWithRelationInput
    _relevance?: FavoriteRoadMapOrderByRelevanceInput
  }

  export type FavoriteRoadMapWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    idUserClient?: string
    idRoadMap?: string
    AND?: FavoriteRoadMapWhereInput | FavoriteRoadMapWhereInput[]
    OR?: FavoriteRoadMapWhereInput[]
    NOT?: FavoriteRoadMapWhereInput | FavoriteRoadMapWhereInput[]
    Favorite?: BoolFilter<"FavoriteRoadMap"> | boolean
    userClientByClientId?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userRoadMapPointByRoadMapId?: XOR<Travel_Road_MapScalarRelationFilter, Travel_Road_MapWhereInput>
  }, "id" | "idUserClient" | "idRoadMap">

  export type FavoriteRoadMapOrderByWithAggregationInput = {
    id?: SortOrder
    Favorite?: SortOrder
    idUserClient?: SortOrder
    idRoadMap?: SortOrder
    _count?: FavoriteRoadMapCountOrderByAggregateInput
    _max?: FavoriteRoadMapMaxOrderByAggregateInput
    _min?: FavoriteRoadMapMinOrderByAggregateInput
  }

  export type FavoriteRoadMapScalarWhereWithAggregatesInput = {
    AND?: FavoriteRoadMapScalarWhereWithAggregatesInput | FavoriteRoadMapScalarWhereWithAggregatesInput[]
    OR?: FavoriteRoadMapScalarWhereWithAggregatesInput[]
    NOT?: FavoriteRoadMapScalarWhereWithAggregatesInput | FavoriteRoadMapScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FavoriteRoadMap"> | string
    Favorite?: BoolWithAggregatesFilter<"FavoriteRoadMap"> | boolean
    idUserClient?: StringWithAggregatesFilter<"FavoriteRoadMap"> | string
    idRoadMap?: StringWithAggregatesFilter<"FavoriteRoadMap"> | string
  }

  export type reportTouristPointWhereInput = {
    AND?: reportTouristPointWhereInput | reportTouristPointWhereInput[]
    OR?: reportTouristPointWhereInput[]
    NOT?: reportTouristPointWhereInput | reportTouristPointWhereInput[]
    id?: StringFilter<"reportTouristPoint"> | string
    content?: StringFilter<"reportTouristPoint"> | string
    idTouristPoint?: StringFilter<"reportTouristPoint"> | string
    idUserReport?: StringFilter<"reportTouristPoint"> | string
    userReportTouristPointByIdTouristPoint?: XOR<Ponto_TuristicoScalarRelationFilter, Ponto_TuristicoWhereInput>
    userReportTouristPointByIdUserReport?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
  }

  export type reportTouristPointOrderByWithRelationInput = {
    id?: SortOrder
    content?: SortOrder
    idTouristPoint?: SortOrder
    idUserReport?: SortOrder
    userReportTouristPointByIdTouristPoint?: Ponto_TuristicoOrderByWithRelationInput
    userReportTouristPointByIdUserReport?: User_ClientOrderByWithRelationInput
    _relevance?: reportTouristPointOrderByRelevanceInput
  }

  export type reportTouristPointWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    idTouristPoint?: string
    idUserReport?: string
    AND?: reportTouristPointWhereInput | reportTouristPointWhereInput[]
    OR?: reportTouristPointWhereInput[]
    NOT?: reportTouristPointWhereInput | reportTouristPointWhereInput[]
    content?: StringFilter<"reportTouristPoint"> | string
    userReportTouristPointByIdTouristPoint?: XOR<Ponto_TuristicoScalarRelationFilter, Ponto_TuristicoWhereInput>
    userReportTouristPointByIdUserReport?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
  }, "id" | "idTouristPoint" | "idUserReport">

  export type reportTouristPointOrderByWithAggregationInput = {
    id?: SortOrder
    content?: SortOrder
    idTouristPoint?: SortOrder
    idUserReport?: SortOrder
    _count?: reportTouristPointCountOrderByAggregateInput
    _max?: reportTouristPointMaxOrderByAggregateInput
    _min?: reportTouristPointMinOrderByAggregateInput
  }

  export type reportTouristPointScalarWhereWithAggregatesInput = {
    AND?: reportTouristPointScalarWhereWithAggregatesInput | reportTouristPointScalarWhereWithAggregatesInput[]
    OR?: reportTouristPointScalarWhereWithAggregatesInput[]
    NOT?: reportTouristPointScalarWhereWithAggregatesInput | reportTouristPointScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"reportTouristPoint"> | string
    content?: StringWithAggregatesFilter<"reportTouristPoint"> | string
    idTouristPoint?: StringWithAggregatesFilter<"reportTouristPoint"> | string
    idUserReport?: StringWithAggregatesFilter<"reportTouristPoint"> | string
  }

  export type reportCommercialPointWhereInput = {
    AND?: reportCommercialPointWhereInput | reportCommercialPointWhereInput[]
    OR?: reportCommercialPointWhereInput[]
    NOT?: reportCommercialPointWhereInput | reportCommercialPointWhereInput[]
    id?: StringFilter<"reportCommercialPoint"> | string
    content?: StringFilter<"reportCommercialPoint"> | string
    idCommercialPoint?: StringFilter<"reportCommercialPoint"> | string
    idUserReport?: StringFilter<"reportCommercialPoint"> | string
    userReportCommercialPointByIdCommercialPoint?: XOR<Ponto_ComercialScalarRelationFilter, Ponto_ComercialWhereInput>
    userReportCommercialPointByIdUserReport?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
  }

  export type reportCommercialPointOrderByWithRelationInput = {
    id?: SortOrder
    content?: SortOrder
    idCommercialPoint?: SortOrder
    idUserReport?: SortOrder
    userReportCommercialPointByIdCommercialPoint?: Ponto_ComercialOrderByWithRelationInput
    userReportCommercialPointByIdUserReport?: User_ClientOrderByWithRelationInput
    _relevance?: reportCommercialPointOrderByRelevanceInput
  }

  export type reportCommercialPointWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    idCommercialPoint?: string
    idUserReport?: string
    AND?: reportCommercialPointWhereInput | reportCommercialPointWhereInput[]
    OR?: reportCommercialPointWhereInput[]
    NOT?: reportCommercialPointWhereInput | reportCommercialPointWhereInput[]
    content?: StringFilter<"reportCommercialPoint"> | string
    userReportCommercialPointByIdCommercialPoint?: XOR<Ponto_ComercialScalarRelationFilter, Ponto_ComercialWhereInput>
    userReportCommercialPointByIdUserReport?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
  }, "id" | "idCommercialPoint" | "idUserReport">

  export type reportCommercialPointOrderByWithAggregationInput = {
    id?: SortOrder
    content?: SortOrder
    idCommercialPoint?: SortOrder
    idUserReport?: SortOrder
    _count?: reportCommercialPointCountOrderByAggregateInput
    _max?: reportCommercialPointMaxOrderByAggregateInput
    _min?: reportCommercialPointMinOrderByAggregateInput
  }

  export type reportCommercialPointScalarWhereWithAggregatesInput = {
    AND?: reportCommercialPointScalarWhereWithAggregatesInput | reportCommercialPointScalarWhereWithAggregatesInput[]
    OR?: reportCommercialPointScalarWhereWithAggregatesInput[]
    NOT?: reportCommercialPointScalarWhereWithAggregatesInput | reportCommercialPointScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"reportCommercialPoint"> | string
    content?: StringWithAggregatesFilter<"reportCommercialPoint"> | string
    idCommercialPoint?: StringWithAggregatesFilter<"reportCommercialPoint"> | string
    idUserReport?: StringWithAggregatesFilter<"reportCommercialPoint"> | string
  }

  export type reportRoadMapWhereInput = {
    AND?: reportRoadMapWhereInput | reportRoadMapWhereInput[]
    OR?: reportRoadMapWhereInput[]
    NOT?: reportRoadMapWhereInput | reportRoadMapWhereInput[]
    id?: StringFilter<"reportRoadMap"> | string
    content?: StringFilter<"reportRoadMap"> | string
    idRoadMap?: StringFilter<"reportRoadMap"> | string
    idUserReport?: StringFilter<"reportRoadMap"> | string
    userReportRoadMapByIdRoadMap?: XOR<Travel_Road_MapScalarRelationFilter, Travel_Road_MapWhereInput>
    userReportRoadMapByIdUserReport?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
  }

  export type reportRoadMapOrderByWithRelationInput = {
    id?: SortOrder
    content?: SortOrder
    idRoadMap?: SortOrder
    idUserReport?: SortOrder
    userReportRoadMapByIdRoadMap?: Travel_Road_MapOrderByWithRelationInput
    userReportRoadMapByIdUserReport?: User_ClientOrderByWithRelationInput
    _relevance?: reportRoadMapOrderByRelevanceInput
  }

  export type reportRoadMapWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    idRoadMap?: string
    idUserReport?: string
    AND?: reportRoadMapWhereInput | reportRoadMapWhereInput[]
    OR?: reportRoadMapWhereInput[]
    NOT?: reportRoadMapWhereInput | reportRoadMapWhereInput[]
    content?: StringFilter<"reportRoadMap"> | string
    userReportRoadMapByIdRoadMap?: XOR<Travel_Road_MapScalarRelationFilter, Travel_Road_MapWhereInput>
    userReportRoadMapByIdUserReport?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
  }, "id" | "idRoadMap" | "idUserReport">

  export type reportRoadMapOrderByWithAggregationInput = {
    id?: SortOrder
    content?: SortOrder
    idRoadMap?: SortOrder
    idUserReport?: SortOrder
    _count?: reportRoadMapCountOrderByAggregateInput
    _max?: reportRoadMapMaxOrderByAggregateInput
    _min?: reportRoadMapMinOrderByAggregateInput
  }

  export type reportRoadMapScalarWhereWithAggregatesInput = {
    AND?: reportRoadMapScalarWhereWithAggregatesInput | reportRoadMapScalarWhereWithAggregatesInput[]
    OR?: reportRoadMapScalarWhereWithAggregatesInput[]
    NOT?: reportRoadMapScalarWhereWithAggregatesInput | reportRoadMapScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"reportRoadMap"> | string
    content?: StringWithAggregatesFilter<"reportRoadMap"> | string
    idRoadMap?: StringWithAggregatesFilter<"reportRoadMap"> | string
    idUserReport?: StringWithAggregatesFilter<"reportRoadMap"> | string
  }

  export type notificationRoadMapWhereInput = {
    AND?: notificationRoadMapWhereInput | notificationRoadMapWhereInput[]
    OR?: notificationRoadMapWhereInput[]
    NOT?: notificationRoadMapWhereInput | notificationRoadMapWhereInput[]
    id?: StringFilter<"notificationRoadMap"> | string
    idClient?: StringFilter<"notificationRoadMap"> | string
    idRoadMap?: StringFilter<"notificationRoadMap"> | string
    userNotificationRoadMapByIdClient?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userNotificationRoadMapByIdRoadMap?: XOR<Travel_Road_MapScalarRelationFilter, Travel_Road_MapWhereInput>
  }

  export type notificationRoadMapOrderByWithRelationInput = {
    id?: SortOrder
    idClient?: SortOrder
    idRoadMap?: SortOrder
    userNotificationRoadMapByIdClient?: User_ClientOrderByWithRelationInput
    userNotificationRoadMapByIdRoadMap?: Travel_Road_MapOrderByWithRelationInput
    _relevance?: notificationRoadMapOrderByRelevanceInput
  }

  export type notificationRoadMapWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    idClient?: string
    idRoadMap?: string
    AND?: notificationRoadMapWhereInput | notificationRoadMapWhereInput[]
    OR?: notificationRoadMapWhereInput[]
    NOT?: notificationRoadMapWhereInput | notificationRoadMapWhereInput[]
    userNotificationRoadMapByIdClient?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userNotificationRoadMapByIdRoadMap?: XOR<Travel_Road_MapScalarRelationFilter, Travel_Road_MapWhereInput>
  }, "id" | "idClient" | "idRoadMap">

  export type notificationRoadMapOrderByWithAggregationInput = {
    id?: SortOrder
    idClient?: SortOrder
    idRoadMap?: SortOrder
    _count?: notificationRoadMapCountOrderByAggregateInput
    _max?: notificationRoadMapMaxOrderByAggregateInput
    _min?: notificationRoadMapMinOrderByAggregateInput
  }

  export type notificationRoadMapScalarWhereWithAggregatesInput = {
    AND?: notificationRoadMapScalarWhereWithAggregatesInput | notificationRoadMapScalarWhereWithAggregatesInput[]
    OR?: notificationRoadMapScalarWhereWithAggregatesInput[]
    NOT?: notificationRoadMapScalarWhereWithAggregatesInput | notificationRoadMapScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"notificationRoadMap"> | string
    idClient?: StringWithAggregatesFilter<"notificationRoadMap"> | string
    idRoadMap?: StringWithAggregatesFilter<"notificationRoadMap"> | string
  }

  export type notificationTouristPointWhereInput = {
    AND?: notificationTouristPointWhereInput | notificationTouristPointWhereInput[]
    OR?: notificationTouristPointWhereInput[]
    NOT?: notificationTouristPointWhereInput | notificationTouristPointWhereInput[]
    id?: StringFilter<"notificationTouristPoint"> | string
    idClient?: StringFilter<"notificationTouristPoint"> | string
    idTouristPoint?: StringFilter<"notificationTouristPoint"> | string
    userNotificationTouristPointByIdClient?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userNotificationTouristPointByIdTouristPoint?: XOR<Ponto_TuristicoScalarRelationFilter, Ponto_TuristicoWhereInput>
  }

  export type notificationTouristPointOrderByWithRelationInput = {
    id?: SortOrder
    idClient?: SortOrder
    idTouristPoint?: SortOrder
    userNotificationTouristPointByIdClient?: User_ClientOrderByWithRelationInput
    userNotificationTouristPointByIdTouristPoint?: Ponto_TuristicoOrderByWithRelationInput
    _relevance?: notificationTouristPointOrderByRelevanceInput
  }

  export type notificationTouristPointWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    idClient?: string
    idTouristPoint?: string
    AND?: notificationTouristPointWhereInput | notificationTouristPointWhereInput[]
    OR?: notificationTouristPointWhereInput[]
    NOT?: notificationTouristPointWhereInput | notificationTouristPointWhereInput[]
    userNotificationTouristPointByIdClient?: XOR<User_ClientScalarRelationFilter, User_ClientWhereInput>
    userNotificationTouristPointByIdTouristPoint?: XOR<Ponto_TuristicoScalarRelationFilter, Ponto_TuristicoWhereInput>
  }, "id" | "idClient" | "idTouristPoint">

  export type notificationTouristPointOrderByWithAggregationInput = {
    id?: SortOrder
    idClient?: SortOrder
    idTouristPoint?: SortOrder
    _count?: notificationTouristPointCountOrderByAggregateInput
    _max?: notificationTouristPointMaxOrderByAggregateInput
    _min?: notificationTouristPointMinOrderByAggregateInput
  }

  export type notificationTouristPointScalarWhereWithAggregatesInput = {
    AND?: notificationTouristPointScalarWhereWithAggregatesInput | notificationTouristPointScalarWhereWithAggregatesInput[]
    OR?: notificationTouristPointScalarWhereWithAggregatesInput[]
    NOT?: notificationTouristPointScalarWhereWithAggregatesInput | notificationTouristPointScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"notificationTouristPoint"> | string
    idClient?: StringWithAggregatesFilter<"notificationTouristPoint"> | string
    idTouristPoint?: StringWithAggregatesFilter<"notificationTouristPoint"> | string
  }

  export type User_AdminCreateInput = {
    id?: string
    name: string
    email: string
    password: string
  }

  export type User_AdminUncheckedCreateInput = {
    id?: string
    name: string
    email: string
    password: string
  }

  export type User_AdminUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
  }

  export type User_AdminUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
  }

  export type User_AdminCreateManyInput = {
    id?: string
    name: string
    email: string
    password: string
  }

  export type User_AdminUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
  }

  export type User_AdminUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
  }

  export type User_ClientCreateInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientCreateManyInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
  }

  export type User_ClientUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type User_ClientUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type User_BusinessCreateInput = {
    id?: string
    CNPJ: string
    name: string
    email: string
    telefone: string
    password: string
    userImageUrl?: string | null
    pontosComerciais?: Ponto_ComercialCreateNestedManyWithoutUser_BusinessInput
  }

  export type User_BusinessUncheckedCreateInput = {
    id?: string
    CNPJ: string
    name: string
    email: string
    telefone: string
    password: string
    userImageUrl?: string | null
    pontosComerciais?: Ponto_ComercialUncheckedCreateNestedManyWithoutUser_BusinessInput
  }

  export type User_BusinessUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    pontosComerciais?: Ponto_ComercialUpdateManyWithoutUser_BusinessNestedInput
  }

  export type User_BusinessUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    pontosComerciais?: Ponto_ComercialUncheckedUpdateManyWithoutUser_BusinessNestedInput
  }

  export type User_BusinessCreateManyInput = {
    id?: string
    CNPJ: string
    name: string
    email: string
    telefone: string
    password: string
    userImageUrl?: string | null
  }

  export type User_BusinessUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type User_BusinessUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Ponto_ComercialCreateInput = {
    id?: string
    name: string
    description: string
    local: string
    creationDate: Date | string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    User_Business: User_BusinessCreateNestedOneWithoutPontosComerciaisInput
    avaliationCommercialPoint?: AvaliationCommercialPointCreateNestedManyWithoutUserCommercialPointByIdCommercialPointInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutPontosComerciaisRelationInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdCommercialPointInput
  }

  export type Ponto_ComercialUncheckedCreateInput = {
    id?: string
    name: string
    description: string
    local: string
    creationDate: Date | string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    businessId: string
    avaliationCommercialPoint?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByIdCommercialPointInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutPontosComerciaisRelationInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdCommercialPointInput
  }

  export type Ponto_ComercialUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    User_Business?: User_BusinessUpdateOneRequiredWithoutPontosComerciaisNestedInput
    avaliationCommercialPoint?: AvaliationCommercialPointUpdateManyWithoutUserCommercialPointByIdCommercialPointNestedInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutPontosComerciaisRelationNestedInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdCommercialPointNestedInput
  }

  export type Ponto_ComercialUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    businessId?: StringFieldUpdateOperationsInput | string
    avaliationCommercialPoint?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByIdCommercialPointNestedInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutPontosComerciaisRelationNestedInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdCommercialPointNestedInput
  }

  export type Ponto_ComercialCreateManyInput = {
    id?: string
    name: string
    description: string
    local: string
    creationDate: Date | string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    businessId: string
  }

  export type Ponto_ComercialUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
  }

  export type Ponto_ComercialUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    businessId?: StringFieldUpdateOperationsInput | string
  }

  export type Ponto_TuristicoCreateInput = {
    id?: string
    name: string
    description: string
    creationDate: Date | string
    local: string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    avaliationTouristPoint?: AvaliationTouristPointCreateNestedManyWithoutUserTouristPointByIdTouristPointInput
    commentTouristPointByTouristPointId?: CommentTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    ImageTouristPointByTouristPointId?: ImageTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutPontosTuristicosRelationInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdTouristPointInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdTouristPointInput
  }

  export type Ponto_TuristicoUncheckedCreateInput = {
    id?: string
    name: string
    description: string
    creationDate: Date | string
    local: string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    avaliationTouristPoint?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByIdTouristPointInput
    commentTouristPointByTouristPointId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutPontosTuristicosRelationInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdTouristPointInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdTouristPointInput
  }

  export type Ponto_TuristicoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    local?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    avaliationTouristPoint?: AvaliationTouristPointUpdateManyWithoutUserTouristPointByIdTouristPointNestedInput
    commentTouristPointByTouristPointId?: CommentTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutPontosTuristicosRelationNestedInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdTouristPointNestedInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdTouristPointNestedInput
  }

  export type Ponto_TuristicoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    local?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    avaliationTouristPoint?: AvaliationTouristPointUncheckedUpdateManyWithoutUserTouristPointByIdTouristPointNestedInput
    commentTouristPointByTouristPointId?: CommentTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutPontosTuristicosRelationNestedInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdTouristPointNestedInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdTouristPointNestedInput
  }

  export type Ponto_TuristicoCreateManyInput = {
    id?: string
    name: string
    description: string
    creationDate: Date | string
    local: string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
  }

  export type Ponto_TuristicoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    local?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
  }

  export type Ponto_TuristicoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    local?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
  }

  export type Travel_Road_MapCreateInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    userClient: User_ClientCreateNestedOneWithoutTravelRoadMapsInput
    AvaliationRoadMap?: AvaliationRoadMapCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapUncheckedCreateInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    idCreator: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryUncheckedCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityUncheckedCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    userClient?: User_ClientUpdateOneRequiredWithoutTravelRoadMapsNestedInput
    AvaliationRoadMap?: AvaliationRoadMapUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    idCreator?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapCreateManyInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    idCreator: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
  }

  export type Travel_Road_MapUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
  }

  export type Travel_Road_MapUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    idCreator?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
  }

  export type CountryCreateInput = {
    id?: string
    name: string
    StateByCountryName?: StateCreateNestedManyWithoutCountryByCountryNameInput
    CityByCountryName?: CityCreateNestedManyWithoutCityByCountryNameInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutCountryRelationInput
  }

  export type CountryUncheckedCreateInput = {
    id?: string
    name: string
    StateByCountryName?: StateUncheckedCreateNestedManyWithoutCountryByCountryNameInput
    CityByCountryName?: CityUncheckedCreateNestedManyWithoutCityByCountryNameInput
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutCountryRelationInput
  }

  export type CountryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    StateByCountryName?: StateUpdateManyWithoutCountryByCountryNameNestedInput
    CityByCountryName?: CityUpdateManyWithoutCityByCountryNameNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutCountryRelationNestedInput
  }

  export type CountryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    StateByCountryName?: StateUncheckedUpdateManyWithoutCountryByCountryNameNestedInput
    CityByCountryName?: CityUncheckedUpdateManyWithoutCityByCountryNameNestedInput
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutCountryRelationNestedInput
  }

  export type CountryCreateManyInput = {
    id?: string
    name: string
  }

  export type CountryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type CountryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type StateCreateInput = {
    id?: string
    name: string
    CountryByCountryName: CountryCreateNestedOneWithoutStateByCountryNameInput
    StateByStateName?: CityCreateNestedManyWithoutStateByStateNameInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutStateRelationInput
  }

  export type StateUncheckedCreateInput = {
    id?: string
    name: string
    countryName: string
    StateByStateName?: CityUncheckedCreateNestedManyWithoutStateByStateNameInput
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutStateRelationInput
  }

  export type StateUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CountryByCountryName?: CountryUpdateOneRequiredWithoutStateByCountryNameNestedInput
    StateByStateName?: CityUpdateManyWithoutStateByStateNameNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutStateRelationNestedInput
  }

  export type StateUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    countryName?: StringFieldUpdateOperationsInput | string
    StateByStateName?: CityUncheckedUpdateManyWithoutStateByStateNameNestedInput
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutStateRelationNestedInput
  }

  export type StateCreateManyInput = {
    id?: string
    name: string
    countryName: string
  }

  export type StateUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type StateUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    countryName?: StringFieldUpdateOperationsInput | string
  }

  export type CityCreateInput = {
    id?: string
    name: string
    StateByStateName: StateCreateNestedOneWithoutStateByStateNameInput
    CityByCountryName: CountryCreateNestedOneWithoutCityByCountryNameInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutCityRelationInput
  }

  export type CityUncheckedCreateInput = {
    id?: string
    name: string
    countryName: string
    stateName: string
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutCityRelationInput
  }

  export type CityUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    StateByStateName?: StateUpdateOneRequiredWithoutStateByStateNameNestedInput
    CityByCountryName?: CountryUpdateOneRequiredWithoutCityByCountryNameNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutCityRelationNestedInput
  }

  export type CityUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    countryName?: StringFieldUpdateOperationsInput | string
    stateName?: StringFieldUpdateOperationsInput | string
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutCityRelationNestedInput
  }

  export type CityCreateManyInput = {
    id?: string
    name: string
    countryName: string
    stateName: string
  }

  export type CityUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type CityUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    countryName?: StringFieldUpdateOperationsInput | string
    stateName?: StringFieldUpdateOperationsInput | string
  }

  export type ImageTouristPointCreateInput = {
    id?: string
    image: string
    userTouristPointByTouristPointId: Ponto_TuristicoCreateNestedOneWithoutImageTouristPointByTouristPointIdInput
  }

  export type ImageTouristPointUncheckedCreateInput = {
    id?: string
    image: string
    idTouristPoint: string
  }

  export type ImageTouristPointUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    userTouristPointByTouristPointId?: Ponto_TuristicoUpdateOneRequiredWithoutImageTouristPointByTouristPointIdNestedInput
  }

  export type ImageTouristPointUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type ImageTouristPointCreateManyInput = {
    id?: string
    image: string
    idTouristPoint: string
  }

  export type ImageTouristPointUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
  }

  export type ImageTouristPointUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type ImageCommercialPointCreateInput = {
    id?: string
    image: string
    userCommercialPointByCommercialPointId: Ponto_ComercialCreateNestedOneWithoutImageCommercialPointByCommercialPointIdInput
  }

  export type ImageCommercialPointUncheckedCreateInput = {
    id?: string
    image: string
    idCommercialPoint: string
  }

  export type ImageCommercialPointUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    userCommercialPointByCommercialPointId?: Ponto_ComercialUpdateOneRequiredWithoutImageCommercialPointByCommercialPointIdNestedInput
  }

  export type ImageCommercialPointUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type ImageCommercialPointCreateManyInput = {
    id?: string
    image: string
    idCommercialPoint: string
  }

  export type ImageCommercialPointUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
  }

  export type ImageCommercialPointUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type ImageRoadMapCreateInput = {
    id?: string
    image: string
    userRoadMapByRoadMapId: Travel_Road_MapCreateNestedOneWithoutImageRoadMapByRoadMapIdInput
  }

  export type ImageRoadMapUncheckedCreateInput = {
    id?: string
    image: string
    idRoadMap: string
  }

  export type ImageRoadMapUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    userRoadMapByRoadMapId?: Travel_Road_MapUpdateOneRequiredWithoutImageRoadMapByRoadMapIdNestedInput
  }

  export type ImageRoadMapUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    idRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type ImageRoadMapCreateManyInput = {
    id?: string
    image: string
    idRoadMap: string
  }

  export type ImageRoadMapUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
  }

  export type ImageRoadMapUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    idRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type CommentRoadMapCreateInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientByClientEmail: User_ClientCreateNestedOneWithoutCommentRoadMapByClientEmailInput
    userClientByClientId: User_ClientCreateNestedOneWithoutCommentRoadMapByClientIdInput
    userRoadMapByRoadMapId: Travel_Road_MapCreateNestedOneWithoutCommentRoadMapByRoadMapIdInput
  }

  export type CommentRoadMapUncheckedCreateInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientEmail: string
    idUserClient: string
    idTravelRoadMap: string
  }

  export type CommentRoadMapUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientByClientEmail?: User_ClientUpdateOneRequiredWithoutCommentRoadMapByClientEmailNestedInput
    userClientByClientId?: User_ClientUpdateOneRequiredWithoutCommentRoadMapByClientIdNestedInput
    userRoadMapByRoadMapId?: Travel_Road_MapUpdateOneRequiredWithoutCommentRoadMapByRoadMapIdNestedInput
  }

  export type CommentRoadMapUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
    idTravelRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type CommentRoadMapCreateManyInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientEmail: string
    idUserClient: string
    idTravelRoadMap: string
  }

  export type CommentRoadMapUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
  }

  export type CommentRoadMapUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
    idTravelRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type CommentTouristPointCreateInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientByClientEmail: User_ClientCreateNestedOneWithoutCommentTouristPointByClientEmailInput
    userClientByClientId: User_ClientCreateNestedOneWithoutCommentTouristPointByClientIdInput
    userTouristPointByTouristPointId: Ponto_TuristicoCreateNestedOneWithoutCommentTouristPointByTouristPointIdInput
  }

  export type CommentTouristPointUncheckedCreateInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientEmail: string
    idUserClient: string
    idTouristPoint: string
  }

  export type CommentTouristPointUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientByClientEmail?: User_ClientUpdateOneRequiredWithoutCommentTouristPointByClientEmailNestedInput
    userClientByClientId?: User_ClientUpdateOneRequiredWithoutCommentTouristPointByClientIdNestedInput
    userTouristPointByTouristPointId?: Ponto_TuristicoUpdateOneRequiredWithoutCommentTouristPointByTouristPointIdNestedInput
  }

  export type CommentTouristPointUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type CommentTouristPointCreateManyInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientEmail: string
    idUserClient: string
    idTouristPoint: string
  }

  export type CommentTouristPointUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
  }

  export type CommentTouristPointUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type CommentCommercialPointCreateInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientByClientEmail: User_ClientCreateNestedOneWithoutCommentCommercialPointByClientEmailInput
    userClientByClientId: User_ClientCreateNestedOneWithoutCommentCommercialPointByClientIdInput
    userCommercialPointByCommercialPointId: Ponto_ComercialCreateNestedOneWithoutCommentCommercialPointByCommercialPointIdInput
  }

  export type CommentCommercialPointUncheckedCreateInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientEmail: string
    idUserClient: string
    idCommercialPoint: string
  }

  export type CommentCommercialPointUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientByClientEmail?: User_ClientUpdateOneRequiredWithoutCommentCommercialPointByClientEmailNestedInput
    userClientByClientId?: User_ClientUpdateOneRequiredWithoutCommentCommercialPointByClientIdNestedInput
    userCommercialPointByCommercialPointId?: Ponto_ComercialUpdateOneRequiredWithoutCommentCommercialPointByCommercialPointIdNestedInput
  }

  export type CommentCommercialPointUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type CommentCommercialPointCreateManyInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientEmail: string
    idUserClient: string
    idCommercialPoint: string
  }

  export type CommentCommercialPointUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
  }

  export type CommentCommercialPointUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationRoadMapCreateInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientByEmail: User_ClientCreateNestedOneWithoutAvaliationsByEmailClientInput
    userClientByIdClient: User_ClientCreateNestedOneWithoutAvaliationsRoadMapByIdClientInput
    userRoadMapByIdRoadMap: Travel_Road_MapCreateNestedOneWithoutAvaliationRoadMapInput
  }

  export type AvaliationRoadMapUncheckedCreateInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientEmail: string
    idUserClient: string
    idTravelRoadMap: string
  }

  export type AvaliationRoadMapUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientByEmail?: User_ClientUpdateOneRequiredWithoutAvaliationsByEmailClientNestedInput
    userClientByIdClient?: User_ClientUpdateOneRequiredWithoutAvaliationsRoadMapByIdClientNestedInput
    userRoadMapByIdRoadMap?: Travel_Road_MapUpdateOneRequiredWithoutAvaliationRoadMapNestedInput
  }

  export type AvaliationRoadMapUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
    idTravelRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationRoadMapCreateManyInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientEmail: string
    idUserClient: string
    idTravelRoadMap: string
  }

  export type AvaliationRoadMapUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
  }

  export type AvaliationRoadMapUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
    idTravelRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationTouristPointCreateInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientByEmail: User_ClientCreateNestedOneWithoutAvaliationTouristPointByUserClientEmailInput
    userClientByIdClient: User_ClientCreateNestedOneWithoutAvaliationTouristPointByIdCreatorInput
    userTouristPointByIdTouristPoint: Ponto_TuristicoCreateNestedOneWithoutAvaliationTouristPointInput
  }

  export type AvaliationTouristPointUncheckedCreateInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientEmail: string
    idUserClient: string
    idTouristPoint: string
  }

  export type AvaliationTouristPointUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientByEmail?: User_ClientUpdateOneRequiredWithoutAvaliationTouristPointByUserClientEmailNestedInput
    userClientByIdClient?: User_ClientUpdateOneRequiredWithoutAvaliationTouristPointByIdCreatorNestedInput
    userTouristPointByIdTouristPoint?: Ponto_TuristicoUpdateOneRequiredWithoutAvaliationTouristPointNestedInput
  }

  export type AvaliationTouristPointUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationTouristPointCreateManyInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientEmail: string
    idUserClient: string
    idTouristPoint: string
  }

  export type AvaliationTouristPointUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
  }

  export type AvaliationTouristPointUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationCommercialPointCreateInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientByEmailClient: User_ClientCreateNestedOneWithoutAvaliationCommercialPointByUserClientEmailInput
    userClientByIdClient: User_ClientCreateNestedOneWithoutAvaliationCommercialPointByIdCreatorInput
    userCommercialPointByIdCommercialPoint: Ponto_ComercialCreateNestedOneWithoutAvaliationCommercialPointInput
  }

  export type AvaliationCommercialPointUncheckedCreateInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientEmail: string
    idUserClient: string
    idCommercialPoint: string
  }

  export type AvaliationCommercialPointUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientByEmailClient?: User_ClientUpdateOneRequiredWithoutAvaliationCommercialPointByUserClientEmailNestedInput
    userClientByIdClient?: User_ClientUpdateOneRequiredWithoutAvaliationCommercialPointByIdCreatorNestedInput
    userCommercialPointByIdCommercialPoint?: Ponto_ComercialUpdateOneRequiredWithoutAvaliationCommercialPointNestedInput
  }

  export type AvaliationCommercialPointUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationCommercialPointCreateManyInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientEmail: string
    idUserClient: string
    idCommercialPoint: string
  }

  export type AvaliationCommercialPointUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
  }

  export type AvaliationCommercialPointUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteCommercialPointCreateInput = {
    id?: string
    Favorite?: boolean
    userClientByClientId: User_ClientCreateNestedOneWithoutFavoriteCommercialPointByClientIdInput
    userCommercialPointByCommercialPointId: Ponto_ComercialCreateNestedOneWithoutFavoriteCommercialPointByCommercialPointIdInput
  }

  export type FavoriteCommercialPointUncheckedCreateInput = {
    id?: string
    Favorite?: boolean
    idUserClient: string
    idCommercialPoint: string
  }

  export type FavoriteCommercialPointUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    userClientByClientId?: User_ClientUpdateOneRequiredWithoutFavoriteCommercialPointByClientIdNestedInput
    userCommercialPointByCommercialPointId?: Ponto_ComercialUpdateOneRequiredWithoutFavoriteCommercialPointByCommercialPointIdNestedInput
  }

  export type FavoriteCommercialPointUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    idUserClient?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteCommercialPointCreateManyInput = {
    id?: string
    Favorite?: boolean
    idUserClient: string
    idCommercialPoint: string
  }

  export type FavoriteCommercialPointUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
  }

  export type FavoriteCommercialPointUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    idUserClient?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteTouristPointCreateInput = {
    id?: string
    Favorite?: boolean
    userClientByClientId: User_ClientCreateNestedOneWithoutFavoriteTouristPointPointByClientIdInput
    userTouristPointByTouristPointId: Ponto_TuristicoCreateNestedOneWithoutFavoriteTouristPointByTouristPointIdInput
  }

  export type FavoriteTouristPointUncheckedCreateInput = {
    id?: string
    Favorite?: boolean
    idUserClient: string
    idTouristPoint: string
  }

  export type FavoriteTouristPointUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    userClientByClientId?: User_ClientUpdateOneRequiredWithoutFavoriteTouristPointPointByClientIdNestedInput
    userTouristPointByTouristPointId?: Ponto_TuristicoUpdateOneRequiredWithoutFavoriteTouristPointByTouristPointIdNestedInput
  }

  export type FavoriteTouristPointUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    idUserClient?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteTouristPointCreateManyInput = {
    id?: string
    Favorite?: boolean
    idUserClient: string
    idTouristPoint: string
  }

  export type FavoriteTouristPointUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
  }

  export type FavoriteTouristPointUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    idUserClient?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteRoadMapCreateInput = {
    id?: string
    Favorite?: boolean
    userClientByClientId: User_ClientCreateNestedOneWithoutFavoriteRoadMapPointByClientIdInput
    userRoadMapPointByRoadMapId: Travel_Road_MapCreateNestedOneWithoutFavoriteRoadMapByRoadMapIdInput
  }

  export type FavoriteRoadMapUncheckedCreateInput = {
    id?: string
    Favorite?: boolean
    idUserClient: string
    idRoadMap: string
  }

  export type FavoriteRoadMapUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    userClientByClientId?: User_ClientUpdateOneRequiredWithoutFavoriteRoadMapPointByClientIdNestedInput
    userRoadMapPointByRoadMapId?: Travel_Road_MapUpdateOneRequiredWithoutFavoriteRoadMapByRoadMapIdNestedInput
  }

  export type FavoriteRoadMapUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    idUserClient?: StringFieldUpdateOperationsInput | string
    idRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteRoadMapCreateManyInput = {
    id?: string
    Favorite?: boolean
    idUserClient: string
    idRoadMap: string
  }

  export type FavoriteRoadMapUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
  }

  export type FavoriteRoadMapUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    idUserClient?: StringFieldUpdateOperationsInput | string
    idRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type reportTouristPointCreateInput = {
    id?: string
    content: string
    userReportTouristPointByIdTouristPoint: Ponto_TuristicoCreateNestedOneWithoutUserReportTouristPointByIdTouristPointInput
    userReportTouristPointByIdUserReport: User_ClientCreateNestedOneWithoutUserReportTouristPointByIdUserReportInput
  }

  export type reportTouristPointUncheckedCreateInput = {
    id?: string
    content: string
    idTouristPoint: string
    idUserReport: string
  }

  export type reportTouristPointUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    userReportTouristPointByIdTouristPoint?: Ponto_TuristicoUpdateOneRequiredWithoutUserReportTouristPointByIdTouristPointNestedInput
    userReportTouristPointByIdUserReport?: User_ClientUpdateOneRequiredWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type reportTouristPointUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
    idUserReport?: StringFieldUpdateOperationsInput | string
  }

  export type reportTouristPointCreateManyInput = {
    id?: string
    content: string
    idTouristPoint: string
    idUserReport: string
  }

  export type reportTouristPointUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
  }

  export type reportTouristPointUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
    idUserReport?: StringFieldUpdateOperationsInput | string
  }

  export type reportCommercialPointCreateInput = {
    id?: string
    content: string
    userReportCommercialPointByIdCommercialPoint: Ponto_ComercialCreateNestedOneWithoutReportCommercialPointByIdCommercialPointInput
    userReportCommercialPointByIdUserReport: User_ClientCreateNestedOneWithoutUserReportCommercialPointByIdUserReportInput
  }

  export type reportCommercialPointUncheckedCreateInput = {
    id?: string
    content: string
    idCommercialPoint: string
    idUserReport: string
  }

  export type reportCommercialPointUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    userReportCommercialPointByIdCommercialPoint?: Ponto_ComercialUpdateOneRequiredWithoutReportCommercialPointByIdCommercialPointNestedInput
    userReportCommercialPointByIdUserReport?: User_ClientUpdateOneRequiredWithoutUserReportCommercialPointByIdUserReportNestedInput
  }

  export type reportCommercialPointUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
    idUserReport?: StringFieldUpdateOperationsInput | string
  }

  export type reportCommercialPointCreateManyInput = {
    id?: string
    content: string
    idCommercialPoint: string
    idUserReport: string
  }

  export type reportCommercialPointUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
  }

  export type reportCommercialPointUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
    idUserReport?: StringFieldUpdateOperationsInput | string
  }

  export type reportRoadMapCreateInput = {
    id?: string
    content: string
    userReportRoadMapByIdRoadMap: Travel_Road_MapCreateNestedOneWithoutUserReportRoadMapByIdRoadMapInput
    userReportRoadMapByIdUserReport: User_ClientCreateNestedOneWithoutUserReportRoadMapByIdUserReportInput
  }

  export type reportRoadMapUncheckedCreateInput = {
    id?: string
    content: string
    idRoadMap: string
    idUserReport: string
  }

  export type reportRoadMapUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    userReportRoadMapByIdRoadMap?: Travel_Road_MapUpdateOneRequiredWithoutUserReportRoadMapByIdRoadMapNestedInput
    userReportRoadMapByIdUserReport?: User_ClientUpdateOneRequiredWithoutUserReportRoadMapByIdUserReportNestedInput
  }

  export type reportRoadMapUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    idRoadMap?: StringFieldUpdateOperationsInput | string
    idUserReport?: StringFieldUpdateOperationsInput | string
  }

  export type reportRoadMapCreateManyInput = {
    id?: string
    content: string
    idRoadMap: string
    idUserReport: string
  }

  export type reportRoadMapUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
  }

  export type reportRoadMapUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    idRoadMap?: StringFieldUpdateOperationsInput | string
    idUserReport?: StringFieldUpdateOperationsInput | string
  }

  export type notificationRoadMapCreateInput = {
    id?: string
    userNotificationRoadMapByIdClient: User_ClientCreateNestedOneWithoutUserNotificationRoadMapByIdClientInput
    userNotificationRoadMapByIdRoadMap: Travel_Road_MapCreateNestedOneWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type notificationRoadMapUncheckedCreateInput = {
    id?: string
    idClient: string
    idRoadMap: string
  }

  export type notificationRoadMapUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userNotificationRoadMapByIdClient?: User_ClientUpdateOneRequiredWithoutUserNotificationRoadMapByIdClientNestedInput
    userNotificationRoadMapByIdRoadMap?: Travel_Road_MapUpdateOneRequiredWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type notificationRoadMapUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    idClient?: StringFieldUpdateOperationsInput | string
    idRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type notificationRoadMapCreateManyInput = {
    id?: string
    idClient: string
    idRoadMap: string
  }

  export type notificationRoadMapUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
  }

  export type notificationRoadMapUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    idClient?: StringFieldUpdateOperationsInput | string
    idRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type notificationTouristPointCreateInput = {
    id?: string
    userNotificationTouristPointByIdClient: User_ClientCreateNestedOneWithoutUserNotificationTouristPointByIdClientInput
    userNotificationTouristPointByIdTouristPoint: Ponto_TuristicoCreateNestedOneWithoutUserNotificationTouristPointByIdTouristPointInput
  }

  export type notificationTouristPointUncheckedCreateInput = {
    id?: string
    idClient: string
    idTouristPoint: string
  }

  export type notificationTouristPointUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userNotificationTouristPointByIdClient?: User_ClientUpdateOneRequiredWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationTouristPointByIdTouristPoint?: Ponto_TuristicoUpdateOneRequiredWithoutUserNotificationTouristPointByIdTouristPointNestedInput
  }

  export type notificationTouristPointUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    idClient?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type notificationTouristPointCreateManyInput = {
    id?: string
    idClient: string
    idTouristPoint: string
  }

  export type notificationTouristPointUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
  }

  export type notificationTouristPointUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    idClient?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type User_AdminOrderByRelevanceInput = {
    fields: User_AdminOrderByRelevanceFieldEnum | User_AdminOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type User_AdminCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
  }

  export type User_AdminMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
  }

  export type User_AdminMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type AvaliationRoadMapListRelationFilter = {
    every?: AvaliationRoadMapWhereInput
    some?: AvaliationRoadMapWhereInput
    none?: AvaliationRoadMapWhereInput
  }

  export type Travel_Road_MapListRelationFilter = {
    every?: Travel_Road_MapWhereInput
    some?: Travel_Road_MapWhereInput
    none?: Travel_Road_MapWhereInput
  }

  export type AvaliationTouristPointListRelationFilter = {
    every?: AvaliationTouristPointWhereInput
    some?: AvaliationTouristPointWhereInput
    none?: AvaliationTouristPointWhereInput
  }

  export type AvaliationCommercialPointListRelationFilter = {
    every?: AvaliationCommercialPointWhereInput
    some?: AvaliationCommercialPointWhereInput
    none?: AvaliationCommercialPointWhereInput
  }

  export type CommentRoadMapListRelationFilter = {
    every?: CommentRoadMapWhereInput
    some?: CommentRoadMapWhereInput
    none?: CommentRoadMapWhereInput
  }

  export type CommentTouristPointListRelationFilter = {
    every?: CommentTouristPointWhereInput
    some?: CommentTouristPointWhereInput
    none?: CommentTouristPointWhereInput
  }

  export type CommentCommercialPointListRelationFilter = {
    every?: CommentCommercialPointWhereInput
    some?: CommentCommercialPointWhereInput
    none?: CommentCommercialPointWhereInput
  }

  export type FavoriteCommercialPointListRelationFilter = {
    every?: FavoriteCommercialPointWhereInput
    some?: FavoriteCommercialPointWhereInput
    none?: FavoriteCommercialPointWhereInput
  }

  export type FavoriteTouristPointListRelationFilter = {
    every?: FavoriteTouristPointWhereInput
    some?: FavoriteTouristPointWhereInput
    none?: FavoriteTouristPointWhereInput
  }

  export type FavoriteRoadMapListRelationFilter = {
    every?: FavoriteRoadMapWhereInput
    some?: FavoriteRoadMapWhereInput
    none?: FavoriteRoadMapWhereInput
  }

  export type NotificationTouristPointListRelationFilter = {
    every?: notificationTouristPointWhereInput
    some?: notificationTouristPointWhereInput
    none?: notificationTouristPointWhereInput
  }

  export type NotificationRoadMapListRelationFilter = {
    every?: notificationRoadMapWhereInput
    some?: notificationRoadMapWhereInput
    none?: notificationRoadMapWhereInput
  }

  export type ReportRoadMapListRelationFilter = {
    every?: reportRoadMapWhereInput
    some?: reportRoadMapWhereInput
    none?: reportRoadMapWhereInput
  }

  export type ReportCommercialPointListRelationFilter = {
    every?: reportCommercialPointWhereInput
    some?: reportCommercialPointWhereInput
    none?: reportCommercialPointWhereInput
  }

  export type ReportTouristPointListRelationFilter = {
    every?: reportTouristPointWhereInput
    some?: reportTouristPointWhereInput
    none?: reportTouristPointWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AvaliationRoadMapOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Travel_Road_MapOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AvaliationTouristPointOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AvaliationCommercialPointOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CommentRoadMapOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CommentTouristPointOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CommentCommercialPointOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FavoriteCommercialPointOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FavoriteTouristPointOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FavoriteRoadMapOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type notificationTouristPointOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type notificationRoadMapOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type reportRoadMapOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type reportCommercialPointOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type reportTouristPointOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type User_ClientOrderByRelevanceInput = {
    fields: User_ClientOrderByRelevanceFieldEnum | User_ClientOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type User_ClientCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    userImageUrl?: SortOrder
  }

  export type User_ClientMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    userImageUrl?: SortOrder
  }

  export type User_ClientMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    userImageUrl?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type Ponto_ComercialListRelationFilter = {
    every?: Ponto_ComercialWhereInput
    some?: Ponto_ComercialWhereInput
    none?: Ponto_ComercialWhereInput
  }

  export type Ponto_ComercialOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type User_BusinessOrderByRelevanceInput = {
    fields: User_BusinessOrderByRelevanceFieldEnum | User_BusinessOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type User_BusinessCountOrderByAggregateInput = {
    id?: SortOrder
    CNPJ?: SortOrder
    name?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    password?: SortOrder
    userImageUrl?: SortOrder
  }

  export type User_BusinessMaxOrderByAggregateInput = {
    id?: SortOrder
    CNPJ?: SortOrder
    name?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    password?: SortOrder
    userImageUrl?: SortOrder
  }

  export type User_BusinessMinOrderByAggregateInput = {
    id?: SortOrder
    CNPJ?: SortOrder
    name?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    password?: SortOrder
    userImageUrl?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type User_BusinessScalarRelationFilter = {
    is?: User_BusinessWhereInput
    isNot?: User_BusinessWhereInput
  }

  export type ImageCommercialPointListRelationFilter = {
    every?: ImageCommercialPointWhereInput
    some?: ImageCommercialPointWhereInput
    none?: ImageCommercialPointWhereInput
  }

  export type ImageCommercialPointOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Ponto_ComercialOrderByRelevanceInput = {
    fields: Ponto_ComercialOrderByRelevanceFieldEnum | Ponto_ComercialOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type Ponto_ComercialCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    local?: SortOrder
    creationDate?: SortOrder
    userImageUrl?: SortOrder
    reportNumber?: SortOrder
    isPublished?: SortOrder
    businessId?: SortOrder
  }

  export type Ponto_ComercialAvgOrderByAggregateInput = {
    reportNumber?: SortOrder
  }

  export type Ponto_ComercialMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    local?: SortOrder
    creationDate?: SortOrder
    userImageUrl?: SortOrder
    reportNumber?: SortOrder
    isPublished?: SortOrder
    businessId?: SortOrder
  }

  export type Ponto_ComercialMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    local?: SortOrder
    creationDate?: SortOrder
    userImageUrl?: SortOrder
    reportNumber?: SortOrder
    isPublished?: SortOrder
    businessId?: SortOrder
  }

  export type Ponto_ComercialSumOrderByAggregateInput = {
    reportNumber?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type ImageTouristPointListRelationFilter = {
    every?: ImageTouristPointWhereInput
    some?: ImageTouristPointWhereInput
    none?: ImageTouristPointWhereInput
  }

  export type ImageTouristPointOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Ponto_TuristicoOrderByRelevanceInput = {
    fields: Ponto_TuristicoOrderByRelevanceFieldEnum | Ponto_TuristicoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type Ponto_TuristicoCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    creationDate?: SortOrder
    local?: SortOrder
    userImageUrl?: SortOrder
    reportNumber?: SortOrder
    isPublished?: SortOrder
  }

  export type Ponto_TuristicoAvgOrderByAggregateInput = {
    reportNumber?: SortOrder
  }

  export type Ponto_TuristicoMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    creationDate?: SortOrder
    local?: SortOrder
    userImageUrl?: SortOrder
    reportNumber?: SortOrder
    isPublished?: SortOrder
  }

  export type Ponto_TuristicoMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    creationDate?: SortOrder
    local?: SortOrder
    userImageUrl?: SortOrder
    reportNumber?: SortOrder
    isPublished?: SortOrder
  }

  export type Ponto_TuristicoSumOrderByAggregateInput = {
    reportNumber?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type User_ClientScalarRelationFilter = {
    is?: User_ClientWhereInput
    isNot?: User_ClientWhereInput
  }

  export type ImageRoadMapListRelationFilter = {
    every?: ImageRoadMapWhereInput
    some?: ImageRoadMapWhereInput
    none?: ImageRoadMapWhereInput
  }

  export type Ponto_TuristicoListRelationFilter = {
    every?: Ponto_TuristicoWhereInput
    some?: Ponto_TuristicoWhereInput
    none?: Ponto_TuristicoWhereInput
  }

  export type CountryListRelationFilter = {
    every?: CountryWhereInput
    some?: CountryWhereInput
    none?: CountryWhereInput
  }

  export type StateListRelationFilter = {
    every?: StateWhereInput
    some?: StateWhereInput
    none?: StateWhereInput
  }

  export type CityListRelationFilter = {
    every?: CityWhereInput
    some?: CityWhereInput
    none?: CityWhereInput
  }

  export type ImageRoadMapOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Ponto_TuristicoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CountryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StateOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Travel_Road_MapOrderByRelevanceInput = {
    fields: Travel_Road_MapOrderByRelevanceFieldEnum | Travel_Road_MapOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type Travel_Road_MapCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    dataPublication?: SortOrder
    description?: SortOrder
    idCreator?: SortOrder
    avaliationValue?: SortOrder
    isPublished?: SortOrder
    userImageUrl?: SortOrder
    reportNumber?: SortOrder
  }

  export type Travel_Road_MapAvgOrderByAggregateInput = {
    avaliationValue?: SortOrder
    reportNumber?: SortOrder
  }

  export type Travel_Road_MapMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    dataPublication?: SortOrder
    description?: SortOrder
    idCreator?: SortOrder
    avaliationValue?: SortOrder
    isPublished?: SortOrder
    userImageUrl?: SortOrder
    reportNumber?: SortOrder
  }

  export type Travel_Road_MapMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    dataPublication?: SortOrder
    description?: SortOrder
    idCreator?: SortOrder
    avaliationValue?: SortOrder
    isPublished?: SortOrder
    userImageUrl?: SortOrder
    reportNumber?: SortOrder
  }

  export type Travel_Road_MapSumOrderByAggregateInput = {
    avaliationValue?: SortOrder
    reportNumber?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type CountryOrderByRelevanceInput = {
    fields: CountryOrderByRelevanceFieldEnum | CountryOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CountryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type CountryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type CountryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type CountryScalarRelationFilter = {
    is?: CountryWhereInput
    isNot?: CountryWhereInput
  }

  export type StateOrderByRelevanceInput = {
    fields: StateOrderByRelevanceFieldEnum | StateOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type StateCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    countryName?: SortOrder
  }

  export type StateMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    countryName?: SortOrder
  }

  export type StateMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    countryName?: SortOrder
  }

  export type StateScalarRelationFilter = {
    is?: StateWhereInput
    isNot?: StateWhereInput
  }

  export type CityOrderByRelevanceInput = {
    fields: CityOrderByRelevanceFieldEnum | CityOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CityCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    countryName?: SortOrder
    stateName?: SortOrder
  }

  export type CityMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    countryName?: SortOrder
    stateName?: SortOrder
  }

  export type CityMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    countryName?: SortOrder
    stateName?: SortOrder
  }

  export type Ponto_TuristicoScalarRelationFilter = {
    is?: Ponto_TuristicoWhereInput
    isNot?: Ponto_TuristicoWhereInput
  }

  export type ImageTouristPointOrderByRelevanceInput = {
    fields: ImageTouristPointOrderByRelevanceFieldEnum | ImageTouristPointOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ImageTouristPointCountOrderByAggregateInput = {
    id?: SortOrder
    image?: SortOrder
    idTouristPoint?: SortOrder
  }

  export type ImageTouristPointMaxOrderByAggregateInput = {
    id?: SortOrder
    image?: SortOrder
    idTouristPoint?: SortOrder
  }

  export type ImageTouristPointMinOrderByAggregateInput = {
    id?: SortOrder
    image?: SortOrder
    idTouristPoint?: SortOrder
  }

  export type Ponto_ComercialScalarRelationFilter = {
    is?: Ponto_ComercialWhereInput
    isNot?: Ponto_ComercialWhereInput
  }

  export type ImageCommercialPointOrderByRelevanceInput = {
    fields: ImageCommercialPointOrderByRelevanceFieldEnum | ImageCommercialPointOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ImageCommercialPointCountOrderByAggregateInput = {
    id?: SortOrder
    image?: SortOrder
    idCommercialPoint?: SortOrder
  }

  export type ImageCommercialPointMaxOrderByAggregateInput = {
    id?: SortOrder
    image?: SortOrder
    idCommercialPoint?: SortOrder
  }

  export type ImageCommercialPointMinOrderByAggregateInput = {
    id?: SortOrder
    image?: SortOrder
    idCommercialPoint?: SortOrder
  }

  export type Travel_Road_MapScalarRelationFilter = {
    is?: Travel_Road_MapWhereInput
    isNot?: Travel_Road_MapWhereInput
  }

  export type ImageRoadMapOrderByRelevanceInput = {
    fields: ImageRoadMapOrderByRelevanceFieldEnum | ImageRoadMapOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ImageRoadMapCountOrderByAggregateInput = {
    id?: SortOrder
    image?: SortOrder
    idRoadMap?: SortOrder
  }

  export type ImageRoadMapMaxOrderByAggregateInput = {
    id?: SortOrder
    image?: SortOrder
    idRoadMap?: SortOrder
  }

  export type ImageRoadMapMinOrderByAggregateInput = {
    id?: SortOrder
    image?: SortOrder
    idRoadMap?: SortOrder
  }

  export type CommentRoadMapOrderByRelevanceInput = {
    fields: CommentRoadMapOrderByRelevanceFieldEnum | CommentRoadMapOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CommentRoadMapCountOrderByAggregateInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    content?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTravelRoadMap?: SortOrder
  }

  export type CommentRoadMapMaxOrderByAggregateInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    content?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTravelRoadMap?: SortOrder
  }

  export type CommentRoadMapMinOrderByAggregateInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    content?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTravelRoadMap?: SortOrder
  }

  export type CommentTouristPointOrderByRelevanceInput = {
    fields: CommentTouristPointOrderByRelevanceFieldEnum | CommentTouristPointOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CommentTouristPointCountOrderByAggregateInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    content?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTouristPoint?: SortOrder
  }

  export type CommentTouristPointMaxOrderByAggregateInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    content?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTouristPoint?: SortOrder
  }

  export type CommentTouristPointMinOrderByAggregateInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    content?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTouristPoint?: SortOrder
  }

  export type CommentCommercialPointOrderByRelevanceInput = {
    fields: CommentCommercialPointOrderByRelevanceFieldEnum | CommentCommercialPointOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CommentCommercialPointCountOrderByAggregateInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    content?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idCommercialPoint?: SortOrder
  }

  export type CommentCommercialPointMaxOrderByAggregateInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    content?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idCommercialPoint?: SortOrder
  }

  export type CommentCommercialPointMinOrderByAggregateInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    content?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idCommercialPoint?: SortOrder
  }

  export type AvaliationRoadMapOrderByRelevanceInput = {
    fields: AvaliationRoadMapOrderByRelevanceFieldEnum | AvaliationRoadMapOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type AvaliationRoadMapCountOrderByAggregateInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    avaliation?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTravelRoadMap?: SortOrder
  }

  export type AvaliationRoadMapAvgOrderByAggregateInput = {
    avaliation?: SortOrder
  }

  export type AvaliationRoadMapMaxOrderByAggregateInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    avaliation?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTravelRoadMap?: SortOrder
  }

  export type AvaliationRoadMapMinOrderByAggregateInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    avaliation?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTravelRoadMap?: SortOrder
  }

  export type AvaliationRoadMapSumOrderByAggregateInput = {
    avaliation?: SortOrder
  }

  export type AvaliationTouristPointOrderByRelevanceInput = {
    fields: AvaliationTouristPointOrderByRelevanceFieldEnum | AvaliationTouristPointOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type AvaliationTouristPointCountOrderByAggregateInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    avaliation?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTouristPoint?: SortOrder
  }

  export type AvaliationTouristPointAvgOrderByAggregateInput = {
    avaliation?: SortOrder
  }

  export type AvaliationTouristPointMaxOrderByAggregateInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    avaliation?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTouristPoint?: SortOrder
  }

  export type AvaliationTouristPointMinOrderByAggregateInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    avaliation?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idTouristPoint?: SortOrder
  }

  export type AvaliationTouristPointSumOrderByAggregateInput = {
    avaliation?: SortOrder
  }

  export type AvaliationCommercialPointOrderByRelevanceInput = {
    fields: AvaliationCommercialPointOrderByRelevanceFieldEnum | AvaliationCommercialPointOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type AvaliationCommercialPointCountOrderByAggregateInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    avaliation?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idCommercialPoint?: SortOrder
  }

  export type AvaliationCommercialPointAvgOrderByAggregateInput = {
    avaliation?: SortOrder
  }

  export type AvaliationCommercialPointMaxOrderByAggregateInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    avaliation?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idCommercialPoint?: SortOrder
  }

  export type AvaliationCommercialPointMinOrderByAggregateInput = {
    id?: SortOrder
    dataPublication?: SortOrder
    avaliation?: SortOrder
    userClientEmail?: SortOrder
    idUserClient?: SortOrder
    idCommercialPoint?: SortOrder
  }

  export type AvaliationCommercialPointSumOrderByAggregateInput = {
    avaliation?: SortOrder
  }

  export type FavoriteCommercialPointOrderByRelevanceInput = {
    fields: FavoriteCommercialPointOrderByRelevanceFieldEnum | FavoriteCommercialPointOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type FavoriteCommercialPointCountOrderByAggregateInput = {
    id?: SortOrder
    Favorite?: SortOrder
    idUserClient?: SortOrder
    idCommercialPoint?: SortOrder
  }

  export type FavoriteCommercialPointMaxOrderByAggregateInput = {
    id?: SortOrder
    Favorite?: SortOrder
    idUserClient?: SortOrder
    idCommercialPoint?: SortOrder
  }

  export type FavoriteCommercialPointMinOrderByAggregateInput = {
    id?: SortOrder
    Favorite?: SortOrder
    idUserClient?: SortOrder
    idCommercialPoint?: SortOrder
  }

  export type FavoriteTouristPointOrderByRelevanceInput = {
    fields: FavoriteTouristPointOrderByRelevanceFieldEnum | FavoriteTouristPointOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type FavoriteTouristPointCountOrderByAggregateInput = {
    id?: SortOrder
    Favorite?: SortOrder
    idUserClient?: SortOrder
    idTouristPoint?: SortOrder
  }

  export type FavoriteTouristPointMaxOrderByAggregateInput = {
    id?: SortOrder
    Favorite?: SortOrder
    idUserClient?: SortOrder
    idTouristPoint?: SortOrder
  }

  export type FavoriteTouristPointMinOrderByAggregateInput = {
    id?: SortOrder
    Favorite?: SortOrder
    idUserClient?: SortOrder
    idTouristPoint?: SortOrder
  }

  export type FavoriteRoadMapOrderByRelevanceInput = {
    fields: FavoriteRoadMapOrderByRelevanceFieldEnum | FavoriteRoadMapOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type FavoriteRoadMapCountOrderByAggregateInput = {
    id?: SortOrder
    Favorite?: SortOrder
    idUserClient?: SortOrder
    idRoadMap?: SortOrder
  }

  export type FavoriteRoadMapMaxOrderByAggregateInput = {
    id?: SortOrder
    Favorite?: SortOrder
    idUserClient?: SortOrder
    idRoadMap?: SortOrder
  }

  export type FavoriteRoadMapMinOrderByAggregateInput = {
    id?: SortOrder
    Favorite?: SortOrder
    idUserClient?: SortOrder
    idRoadMap?: SortOrder
  }

  export type reportTouristPointOrderByRelevanceInput = {
    fields: reportTouristPointOrderByRelevanceFieldEnum | reportTouristPointOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type reportTouristPointCountOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    idTouristPoint?: SortOrder
    idUserReport?: SortOrder
  }

  export type reportTouristPointMaxOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    idTouristPoint?: SortOrder
    idUserReport?: SortOrder
  }

  export type reportTouristPointMinOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    idTouristPoint?: SortOrder
    idUserReport?: SortOrder
  }

  export type reportCommercialPointOrderByRelevanceInput = {
    fields: reportCommercialPointOrderByRelevanceFieldEnum | reportCommercialPointOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type reportCommercialPointCountOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    idCommercialPoint?: SortOrder
    idUserReport?: SortOrder
  }

  export type reportCommercialPointMaxOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    idCommercialPoint?: SortOrder
    idUserReport?: SortOrder
  }

  export type reportCommercialPointMinOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    idCommercialPoint?: SortOrder
    idUserReport?: SortOrder
  }

  export type reportRoadMapOrderByRelevanceInput = {
    fields: reportRoadMapOrderByRelevanceFieldEnum | reportRoadMapOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type reportRoadMapCountOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    idRoadMap?: SortOrder
    idUserReport?: SortOrder
  }

  export type reportRoadMapMaxOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    idRoadMap?: SortOrder
    idUserReport?: SortOrder
  }

  export type reportRoadMapMinOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    idRoadMap?: SortOrder
    idUserReport?: SortOrder
  }

  export type notificationRoadMapOrderByRelevanceInput = {
    fields: notificationRoadMapOrderByRelevanceFieldEnum | notificationRoadMapOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type notificationRoadMapCountOrderByAggregateInput = {
    id?: SortOrder
    idClient?: SortOrder
    idRoadMap?: SortOrder
  }

  export type notificationRoadMapMaxOrderByAggregateInput = {
    id?: SortOrder
    idClient?: SortOrder
    idRoadMap?: SortOrder
  }

  export type notificationRoadMapMinOrderByAggregateInput = {
    id?: SortOrder
    idClient?: SortOrder
    idRoadMap?: SortOrder
  }

  export type notificationTouristPointOrderByRelevanceInput = {
    fields: notificationTouristPointOrderByRelevanceFieldEnum | notificationTouristPointOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type notificationTouristPointCountOrderByAggregateInput = {
    id?: SortOrder
    idClient?: SortOrder
    idTouristPoint?: SortOrder
  }

  export type notificationTouristPointMaxOrderByAggregateInput = {
    id?: SortOrder
    idClient?: SortOrder
    idTouristPoint?: SortOrder
  }

  export type notificationTouristPointMinOrderByAggregateInput = {
    id?: SortOrder
    idClient?: SortOrder
    idTouristPoint?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput = {
    create?: XOR<AvaliationRoadMapCreateWithoutUserClientByEmailInput, AvaliationRoadMapUncheckedCreateWithoutUserClientByEmailInput> | AvaliationRoadMapCreateWithoutUserClientByEmailInput[] | AvaliationRoadMapUncheckedCreateWithoutUserClientByEmailInput[]
    connectOrCreate?: AvaliationRoadMapCreateOrConnectWithoutUserClientByEmailInput | AvaliationRoadMapCreateOrConnectWithoutUserClientByEmailInput[]
    createMany?: AvaliationRoadMapCreateManyUserClientByEmailInputEnvelope
    connect?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
  }

  export type AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput = {
    create?: XOR<AvaliationRoadMapCreateWithoutUserClientByIdClientInput, AvaliationRoadMapUncheckedCreateWithoutUserClientByIdClientInput> | AvaliationRoadMapCreateWithoutUserClientByIdClientInput[] | AvaliationRoadMapUncheckedCreateWithoutUserClientByIdClientInput[]
    connectOrCreate?: AvaliationRoadMapCreateOrConnectWithoutUserClientByIdClientInput | AvaliationRoadMapCreateOrConnectWithoutUserClientByIdClientInput[]
    createMany?: AvaliationRoadMapCreateManyUserClientByIdClientInputEnvelope
    connect?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
  }

  export type Travel_Road_MapCreateNestedManyWithoutUserClientInput = {
    create?: XOR<Travel_Road_MapCreateWithoutUserClientInput, Travel_Road_MapUncheckedCreateWithoutUserClientInput> | Travel_Road_MapCreateWithoutUserClientInput[] | Travel_Road_MapUncheckedCreateWithoutUserClientInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutUserClientInput | Travel_Road_MapCreateOrConnectWithoutUserClientInput[]
    createMany?: Travel_Road_MapCreateManyUserClientInputEnvelope
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
  }

  export type AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput = {
    create?: XOR<AvaliationTouristPointCreateWithoutUserClientByEmailInput, AvaliationTouristPointUncheckedCreateWithoutUserClientByEmailInput> | AvaliationTouristPointCreateWithoutUserClientByEmailInput[] | AvaliationTouristPointUncheckedCreateWithoutUserClientByEmailInput[]
    connectOrCreate?: AvaliationTouristPointCreateOrConnectWithoutUserClientByEmailInput | AvaliationTouristPointCreateOrConnectWithoutUserClientByEmailInput[]
    createMany?: AvaliationTouristPointCreateManyUserClientByEmailInputEnvelope
    connect?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
  }

  export type AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput = {
    create?: XOR<AvaliationTouristPointCreateWithoutUserClientByIdClientInput, AvaliationTouristPointUncheckedCreateWithoutUserClientByIdClientInput> | AvaliationTouristPointCreateWithoutUserClientByIdClientInput[] | AvaliationTouristPointUncheckedCreateWithoutUserClientByIdClientInput[]
    connectOrCreate?: AvaliationTouristPointCreateOrConnectWithoutUserClientByIdClientInput | AvaliationTouristPointCreateOrConnectWithoutUserClientByIdClientInput[]
    createMany?: AvaliationTouristPointCreateManyUserClientByIdClientInputEnvelope
    connect?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
  }

  export type AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput = {
    create?: XOR<AvaliationCommercialPointCreateWithoutUserClientByEmailClientInput, AvaliationCommercialPointUncheckedCreateWithoutUserClientByEmailClientInput> | AvaliationCommercialPointCreateWithoutUserClientByEmailClientInput[] | AvaliationCommercialPointUncheckedCreateWithoutUserClientByEmailClientInput[]
    connectOrCreate?: AvaliationCommercialPointCreateOrConnectWithoutUserClientByEmailClientInput | AvaliationCommercialPointCreateOrConnectWithoutUserClientByEmailClientInput[]
    createMany?: AvaliationCommercialPointCreateManyUserClientByEmailClientInputEnvelope
    connect?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
  }

  export type AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput = {
    create?: XOR<AvaliationCommercialPointCreateWithoutUserClientByIdClientInput, AvaliationCommercialPointUncheckedCreateWithoutUserClientByIdClientInput> | AvaliationCommercialPointCreateWithoutUserClientByIdClientInput[] | AvaliationCommercialPointUncheckedCreateWithoutUserClientByIdClientInput[]
    connectOrCreate?: AvaliationCommercialPointCreateOrConnectWithoutUserClientByIdClientInput | AvaliationCommercialPointCreateOrConnectWithoutUserClientByIdClientInput[]
    createMany?: AvaliationCommercialPointCreateManyUserClientByIdClientInputEnvelope
    connect?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
  }

  export type CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput = {
    create?: XOR<CommentRoadMapCreateWithoutUserClientByClientEmailInput, CommentRoadMapUncheckedCreateWithoutUserClientByClientEmailInput> | CommentRoadMapCreateWithoutUserClientByClientEmailInput[] | CommentRoadMapUncheckedCreateWithoutUserClientByClientEmailInput[]
    connectOrCreate?: CommentRoadMapCreateOrConnectWithoutUserClientByClientEmailInput | CommentRoadMapCreateOrConnectWithoutUserClientByClientEmailInput[]
    createMany?: CommentRoadMapCreateManyUserClientByClientEmailInputEnvelope
    connect?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
  }

  export type CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput = {
    create?: XOR<CommentRoadMapCreateWithoutUserClientByClientIdInput, CommentRoadMapUncheckedCreateWithoutUserClientByClientIdInput> | CommentRoadMapCreateWithoutUserClientByClientIdInput[] | CommentRoadMapUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: CommentRoadMapCreateOrConnectWithoutUserClientByClientIdInput | CommentRoadMapCreateOrConnectWithoutUserClientByClientIdInput[]
    createMany?: CommentRoadMapCreateManyUserClientByClientIdInputEnvelope
    connect?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
  }

  export type CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput = {
    create?: XOR<CommentTouristPointCreateWithoutUserClientByClientEmailInput, CommentTouristPointUncheckedCreateWithoutUserClientByClientEmailInput> | CommentTouristPointCreateWithoutUserClientByClientEmailInput[] | CommentTouristPointUncheckedCreateWithoutUserClientByClientEmailInput[]
    connectOrCreate?: CommentTouristPointCreateOrConnectWithoutUserClientByClientEmailInput | CommentTouristPointCreateOrConnectWithoutUserClientByClientEmailInput[]
    createMany?: CommentTouristPointCreateManyUserClientByClientEmailInputEnvelope
    connect?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
  }

  export type CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput = {
    create?: XOR<CommentTouristPointCreateWithoutUserClientByClientIdInput, CommentTouristPointUncheckedCreateWithoutUserClientByClientIdInput> | CommentTouristPointCreateWithoutUserClientByClientIdInput[] | CommentTouristPointUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: CommentTouristPointCreateOrConnectWithoutUserClientByClientIdInput | CommentTouristPointCreateOrConnectWithoutUserClientByClientIdInput[]
    createMany?: CommentTouristPointCreateManyUserClientByClientIdInputEnvelope
    connect?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
  }

  export type CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput = {
    create?: XOR<CommentCommercialPointCreateWithoutUserClientByClientEmailInput, CommentCommercialPointUncheckedCreateWithoutUserClientByClientEmailInput> | CommentCommercialPointCreateWithoutUserClientByClientEmailInput[] | CommentCommercialPointUncheckedCreateWithoutUserClientByClientEmailInput[]
    connectOrCreate?: CommentCommercialPointCreateOrConnectWithoutUserClientByClientEmailInput | CommentCommercialPointCreateOrConnectWithoutUserClientByClientEmailInput[]
    createMany?: CommentCommercialPointCreateManyUserClientByClientEmailInputEnvelope
    connect?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
  }

  export type CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput = {
    create?: XOR<CommentCommercialPointCreateWithoutUserClientByClientIdInput, CommentCommercialPointUncheckedCreateWithoutUserClientByClientIdInput> | CommentCommercialPointCreateWithoutUserClientByClientIdInput[] | CommentCommercialPointUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: CommentCommercialPointCreateOrConnectWithoutUserClientByClientIdInput | CommentCommercialPointCreateOrConnectWithoutUserClientByClientIdInput[]
    createMany?: CommentCommercialPointCreateManyUserClientByClientIdInputEnvelope
    connect?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
  }

  export type FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput = {
    create?: XOR<FavoriteCommercialPointCreateWithoutUserClientByClientIdInput, FavoriteCommercialPointUncheckedCreateWithoutUserClientByClientIdInput> | FavoriteCommercialPointCreateWithoutUserClientByClientIdInput[] | FavoriteCommercialPointUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: FavoriteCommercialPointCreateOrConnectWithoutUserClientByClientIdInput | FavoriteCommercialPointCreateOrConnectWithoutUserClientByClientIdInput[]
    createMany?: FavoriteCommercialPointCreateManyUserClientByClientIdInputEnvelope
    connect?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
  }

  export type FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput = {
    create?: XOR<FavoriteTouristPointCreateWithoutUserClientByClientIdInput, FavoriteTouristPointUncheckedCreateWithoutUserClientByClientIdInput> | FavoriteTouristPointCreateWithoutUserClientByClientIdInput[] | FavoriteTouristPointUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: FavoriteTouristPointCreateOrConnectWithoutUserClientByClientIdInput | FavoriteTouristPointCreateOrConnectWithoutUserClientByClientIdInput[]
    createMany?: FavoriteTouristPointCreateManyUserClientByClientIdInputEnvelope
    connect?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
  }

  export type FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput = {
    create?: XOR<FavoriteRoadMapCreateWithoutUserClientByClientIdInput, FavoriteRoadMapUncheckedCreateWithoutUserClientByClientIdInput> | FavoriteRoadMapCreateWithoutUserClientByClientIdInput[] | FavoriteRoadMapUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: FavoriteRoadMapCreateOrConnectWithoutUserClientByClientIdInput | FavoriteRoadMapCreateOrConnectWithoutUserClientByClientIdInput[]
    createMany?: FavoriteRoadMapCreateManyUserClientByClientIdInputEnvelope
    connect?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
  }

  export type notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput = {
    create?: XOR<notificationTouristPointCreateWithoutUserNotificationTouristPointByIdClientInput, notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdClientInput> | notificationTouristPointCreateWithoutUserNotificationTouristPointByIdClientInput[] | notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdClientInput[]
    connectOrCreate?: notificationTouristPointCreateOrConnectWithoutUserNotificationTouristPointByIdClientInput | notificationTouristPointCreateOrConnectWithoutUserNotificationTouristPointByIdClientInput[]
    createMany?: notificationTouristPointCreateManyUserNotificationTouristPointByIdClientInputEnvelope
    connect?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
  }

  export type notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput = {
    create?: XOR<notificationRoadMapCreateWithoutUserNotificationRoadMapByIdClientInput, notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdClientInput> | notificationRoadMapCreateWithoutUserNotificationRoadMapByIdClientInput[] | notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdClientInput[]
    connectOrCreate?: notificationRoadMapCreateOrConnectWithoutUserNotificationRoadMapByIdClientInput | notificationRoadMapCreateOrConnectWithoutUserNotificationRoadMapByIdClientInput[]
    createMany?: notificationRoadMapCreateManyUserNotificationRoadMapByIdClientInputEnvelope
    connect?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
  }

  export type reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput = {
    create?: XOR<reportRoadMapCreateWithoutUserReportRoadMapByIdUserReportInput, reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdUserReportInput> | reportRoadMapCreateWithoutUserReportRoadMapByIdUserReportInput[] | reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdUserReportInput[]
    connectOrCreate?: reportRoadMapCreateOrConnectWithoutUserReportRoadMapByIdUserReportInput | reportRoadMapCreateOrConnectWithoutUserReportRoadMapByIdUserReportInput[]
    createMany?: reportRoadMapCreateManyUserReportRoadMapByIdUserReportInputEnvelope
    connect?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
  }

  export type reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput = {
    create?: XOR<reportCommercialPointCreateWithoutUserReportCommercialPointByIdUserReportInput, reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdUserReportInput> | reportCommercialPointCreateWithoutUserReportCommercialPointByIdUserReportInput[] | reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdUserReportInput[]
    connectOrCreate?: reportCommercialPointCreateOrConnectWithoutUserReportCommercialPointByIdUserReportInput | reportCommercialPointCreateOrConnectWithoutUserReportCommercialPointByIdUserReportInput[]
    createMany?: reportCommercialPointCreateManyUserReportCommercialPointByIdUserReportInputEnvelope
    connect?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
  }

  export type reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput = {
    create?: XOR<reportTouristPointCreateWithoutUserReportTouristPointByIdUserReportInput, reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdUserReportInput> | reportTouristPointCreateWithoutUserReportTouristPointByIdUserReportInput[] | reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdUserReportInput[]
    connectOrCreate?: reportTouristPointCreateOrConnectWithoutUserReportTouristPointByIdUserReportInput | reportTouristPointCreateOrConnectWithoutUserReportTouristPointByIdUserReportInput[]
    createMany?: reportTouristPointCreateManyUserReportTouristPointByIdUserReportInputEnvelope
    connect?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
  }

  export type AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput = {
    create?: XOR<AvaliationRoadMapCreateWithoutUserClientByEmailInput, AvaliationRoadMapUncheckedCreateWithoutUserClientByEmailInput> | AvaliationRoadMapCreateWithoutUserClientByEmailInput[] | AvaliationRoadMapUncheckedCreateWithoutUserClientByEmailInput[]
    connectOrCreate?: AvaliationRoadMapCreateOrConnectWithoutUserClientByEmailInput | AvaliationRoadMapCreateOrConnectWithoutUserClientByEmailInput[]
    createMany?: AvaliationRoadMapCreateManyUserClientByEmailInputEnvelope
    connect?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
  }

  export type AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput = {
    create?: XOR<AvaliationRoadMapCreateWithoutUserClientByIdClientInput, AvaliationRoadMapUncheckedCreateWithoutUserClientByIdClientInput> | AvaliationRoadMapCreateWithoutUserClientByIdClientInput[] | AvaliationRoadMapUncheckedCreateWithoutUserClientByIdClientInput[]
    connectOrCreate?: AvaliationRoadMapCreateOrConnectWithoutUserClientByIdClientInput | AvaliationRoadMapCreateOrConnectWithoutUserClientByIdClientInput[]
    createMany?: AvaliationRoadMapCreateManyUserClientByIdClientInputEnvelope
    connect?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
  }

  export type Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput = {
    create?: XOR<Travel_Road_MapCreateWithoutUserClientInput, Travel_Road_MapUncheckedCreateWithoutUserClientInput> | Travel_Road_MapCreateWithoutUserClientInput[] | Travel_Road_MapUncheckedCreateWithoutUserClientInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutUserClientInput | Travel_Road_MapCreateOrConnectWithoutUserClientInput[]
    createMany?: Travel_Road_MapCreateManyUserClientInputEnvelope
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
  }

  export type AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput = {
    create?: XOR<AvaliationTouristPointCreateWithoutUserClientByEmailInput, AvaliationTouristPointUncheckedCreateWithoutUserClientByEmailInput> | AvaliationTouristPointCreateWithoutUserClientByEmailInput[] | AvaliationTouristPointUncheckedCreateWithoutUserClientByEmailInput[]
    connectOrCreate?: AvaliationTouristPointCreateOrConnectWithoutUserClientByEmailInput | AvaliationTouristPointCreateOrConnectWithoutUserClientByEmailInput[]
    createMany?: AvaliationTouristPointCreateManyUserClientByEmailInputEnvelope
    connect?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
  }

  export type AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput = {
    create?: XOR<AvaliationTouristPointCreateWithoutUserClientByIdClientInput, AvaliationTouristPointUncheckedCreateWithoutUserClientByIdClientInput> | AvaliationTouristPointCreateWithoutUserClientByIdClientInput[] | AvaliationTouristPointUncheckedCreateWithoutUserClientByIdClientInput[]
    connectOrCreate?: AvaliationTouristPointCreateOrConnectWithoutUserClientByIdClientInput | AvaliationTouristPointCreateOrConnectWithoutUserClientByIdClientInput[]
    createMany?: AvaliationTouristPointCreateManyUserClientByIdClientInputEnvelope
    connect?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
  }

  export type AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput = {
    create?: XOR<AvaliationCommercialPointCreateWithoutUserClientByEmailClientInput, AvaliationCommercialPointUncheckedCreateWithoutUserClientByEmailClientInput> | AvaliationCommercialPointCreateWithoutUserClientByEmailClientInput[] | AvaliationCommercialPointUncheckedCreateWithoutUserClientByEmailClientInput[]
    connectOrCreate?: AvaliationCommercialPointCreateOrConnectWithoutUserClientByEmailClientInput | AvaliationCommercialPointCreateOrConnectWithoutUserClientByEmailClientInput[]
    createMany?: AvaliationCommercialPointCreateManyUserClientByEmailClientInputEnvelope
    connect?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
  }

  export type AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput = {
    create?: XOR<AvaliationCommercialPointCreateWithoutUserClientByIdClientInput, AvaliationCommercialPointUncheckedCreateWithoutUserClientByIdClientInput> | AvaliationCommercialPointCreateWithoutUserClientByIdClientInput[] | AvaliationCommercialPointUncheckedCreateWithoutUserClientByIdClientInput[]
    connectOrCreate?: AvaliationCommercialPointCreateOrConnectWithoutUserClientByIdClientInput | AvaliationCommercialPointCreateOrConnectWithoutUserClientByIdClientInput[]
    createMany?: AvaliationCommercialPointCreateManyUserClientByIdClientInputEnvelope
    connect?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
  }

  export type CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput = {
    create?: XOR<CommentRoadMapCreateWithoutUserClientByClientEmailInput, CommentRoadMapUncheckedCreateWithoutUserClientByClientEmailInput> | CommentRoadMapCreateWithoutUserClientByClientEmailInput[] | CommentRoadMapUncheckedCreateWithoutUserClientByClientEmailInput[]
    connectOrCreate?: CommentRoadMapCreateOrConnectWithoutUserClientByClientEmailInput | CommentRoadMapCreateOrConnectWithoutUserClientByClientEmailInput[]
    createMany?: CommentRoadMapCreateManyUserClientByClientEmailInputEnvelope
    connect?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
  }

  export type CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput = {
    create?: XOR<CommentRoadMapCreateWithoutUserClientByClientIdInput, CommentRoadMapUncheckedCreateWithoutUserClientByClientIdInput> | CommentRoadMapCreateWithoutUserClientByClientIdInput[] | CommentRoadMapUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: CommentRoadMapCreateOrConnectWithoutUserClientByClientIdInput | CommentRoadMapCreateOrConnectWithoutUserClientByClientIdInput[]
    createMany?: CommentRoadMapCreateManyUserClientByClientIdInputEnvelope
    connect?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
  }

  export type CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput = {
    create?: XOR<CommentTouristPointCreateWithoutUserClientByClientEmailInput, CommentTouristPointUncheckedCreateWithoutUserClientByClientEmailInput> | CommentTouristPointCreateWithoutUserClientByClientEmailInput[] | CommentTouristPointUncheckedCreateWithoutUserClientByClientEmailInput[]
    connectOrCreate?: CommentTouristPointCreateOrConnectWithoutUserClientByClientEmailInput | CommentTouristPointCreateOrConnectWithoutUserClientByClientEmailInput[]
    createMany?: CommentTouristPointCreateManyUserClientByClientEmailInputEnvelope
    connect?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
  }

  export type CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput = {
    create?: XOR<CommentTouristPointCreateWithoutUserClientByClientIdInput, CommentTouristPointUncheckedCreateWithoutUserClientByClientIdInput> | CommentTouristPointCreateWithoutUserClientByClientIdInput[] | CommentTouristPointUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: CommentTouristPointCreateOrConnectWithoutUserClientByClientIdInput | CommentTouristPointCreateOrConnectWithoutUserClientByClientIdInput[]
    createMany?: CommentTouristPointCreateManyUserClientByClientIdInputEnvelope
    connect?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
  }

  export type CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput = {
    create?: XOR<CommentCommercialPointCreateWithoutUserClientByClientEmailInput, CommentCommercialPointUncheckedCreateWithoutUserClientByClientEmailInput> | CommentCommercialPointCreateWithoutUserClientByClientEmailInput[] | CommentCommercialPointUncheckedCreateWithoutUserClientByClientEmailInput[]
    connectOrCreate?: CommentCommercialPointCreateOrConnectWithoutUserClientByClientEmailInput | CommentCommercialPointCreateOrConnectWithoutUserClientByClientEmailInput[]
    createMany?: CommentCommercialPointCreateManyUserClientByClientEmailInputEnvelope
    connect?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
  }

  export type CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput = {
    create?: XOR<CommentCommercialPointCreateWithoutUserClientByClientIdInput, CommentCommercialPointUncheckedCreateWithoutUserClientByClientIdInput> | CommentCommercialPointCreateWithoutUserClientByClientIdInput[] | CommentCommercialPointUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: CommentCommercialPointCreateOrConnectWithoutUserClientByClientIdInput | CommentCommercialPointCreateOrConnectWithoutUserClientByClientIdInput[]
    createMany?: CommentCommercialPointCreateManyUserClientByClientIdInputEnvelope
    connect?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
  }

  export type FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput = {
    create?: XOR<FavoriteCommercialPointCreateWithoutUserClientByClientIdInput, FavoriteCommercialPointUncheckedCreateWithoutUserClientByClientIdInput> | FavoriteCommercialPointCreateWithoutUserClientByClientIdInput[] | FavoriteCommercialPointUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: FavoriteCommercialPointCreateOrConnectWithoutUserClientByClientIdInput | FavoriteCommercialPointCreateOrConnectWithoutUserClientByClientIdInput[]
    createMany?: FavoriteCommercialPointCreateManyUserClientByClientIdInputEnvelope
    connect?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
  }

  export type FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput = {
    create?: XOR<FavoriteTouristPointCreateWithoutUserClientByClientIdInput, FavoriteTouristPointUncheckedCreateWithoutUserClientByClientIdInput> | FavoriteTouristPointCreateWithoutUserClientByClientIdInput[] | FavoriteTouristPointUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: FavoriteTouristPointCreateOrConnectWithoutUserClientByClientIdInput | FavoriteTouristPointCreateOrConnectWithoutUserClientByClientIdInput[]
    createMany?: FavoriteTouristPointCreateManyUserClientByClientIdInputEnvelope
    connect?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
  }

  export type FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput = {
    create?: XOR<FavoriteRoadMapCreateWithoutUserClientByClientIdInput, FavoriteRoadMapUncheckedCreateWithoutUserClientByClientIdInput> | FavoriteRoadMapCreateWithoutUserClientByClientIdInput[] | FavoriteRoadMapUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: FavoriteRoadMapCreateOrConnectWithoutUserClientByClientIdInput | FavoriteRoadMapCreateOrConnectWithoutUserClientByClientIdInput[]
    createMany?: FavoriteRoadMapCreateManyUserClientByClientIdInputEnvelope
    connect?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
  }

  export type notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput = {
    create?: XOR<notificationTouristPointCreateWithoutUserNotificationTouristPointByIdClientInput, notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdClientInput> | notificationTouristPointCreateWithoutUserNotificationTouristPointByIdClientInput[] | notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdClientInput[]
    connectOrCreate?: notificationTouristPointCreateOrConnectWithoutUserNotificationTouristPointByIdClientInput | notificationTouristPointCreateOrConnectWithoutUserNotificationTouristPointByIdClientInput[]
    createMany?: notificationTouristPointCreateManyUserNotificationTouristPointByIdClientInputEnvelope
    connect?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
  }

  export type notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput = {
    create?: XOR<notificationRoadMapCreateWithoutUserNotificationRoadMapByIdClientInput, notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdClientInput> | notificationRoadMapCreateWithoutUserNotificationRoadMapByIdClientInput[] | notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdClientInput[]
    connectOrCreate?: notificationRoadMapCreateOrConnectWithoutUserNotificationRoadMapByIdClientInput | notificationRoadMapCreateOrConnectWithoutUserNotificationRoadMapByIdClientInput[]
    createMany?: notificationRoadMapCreateManyUserNotificationRoadMapByIdClientInputEnvelope
    connect?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
  }

  export type reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput = {
    create?: XOR<reportRoadMapCreateWithoutUserReportRoadMapByIdUserReportInput, reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdUserReportInput> | reportRoadMapCreateWithoutUserReportRoadMapByIdUserReportInput[] | reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdUserReportInput[]
    connectOrCreate?: reportRoadMapCreateOrConnectWithoutUserReportRoadMapByIdUserReportInput | reportRoadMapCreateOrConnectWithoutUserReportRoadMapByIdUserReportInput[]
    createMany?: reportRoadMapCreateManyUserReportRoadMapByIdUserReportInputEnvelope
    connect?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
  }

  export type reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput = {
    create?: XOR<reportCommercialPointCreateWithoutUserReportCommercialPointByIdUserReportInput, reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdUserReportInput> | reportCommercialPointCreateWithoutUserReportCommercialPointByIdUserReportInput[] | reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdUserReportInput[]
    connectOrCreate?: reportCommercialPointCreateOrConnectWithoutUserReportCommercialPointByIdUserReportInput | reportCommercialPointCreateOrConnectWithoutUserReportCommercialPointByIdUserReportInput[]
    createMany?: reportCommercialPointCreateManyUserReportCommercialPointByIdUserReportInputEnvelope
    connect?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
  }

  export type reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput = {
    create?: XOR<reportTouristPointCreateWithoutUserReportTouristPointByIdUserReportInput, reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdUserReportInput> | reportTouristPointCreateWithoutUserReportTouristPointByIdUserReportInput[] | reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdUserReportInput[]
    connectOrCreate?: reportTouristPointCreateOrConnectWithoutUserReportTouristPointByIdUserReportInput | reportTouristPointCreateOrConnectWithoutUserReportTouristPointByIdUserReportInput[]
    createMany?: reportTouristPointCreateManyUserReportTouristPointByIdUserReportInputEnvelope
    connect?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput = {
    create?: XOR<AvaliationRoadMapCreateWithoutUserClientByEmailInput, AvaliationRoadMapUncheckedCreateWithoutUserClientByEmailInput> | AvaliationRoadMapCreateWithoutUserClientByEmailInput[] | AvaliationRoadMapUncheckedCreateWithoutUserClientByEmailInput[]
    connectOrCreate?: AvaliationRoadMapCreateOrConnectWithoutUserClientByEmailInput | AvaliationRoadMapCreateOrConnectWithoutUserClientByEmailInput[]
    upsert?: AvaliationRoadMapUpsertWithWhereUniqueWithoutUserClientByEmailInput | AvaliationRoadMapUpsertWithWhereUniqueWithoutUserClientByEmailInput[]
    createMany?: AvaliationRoadMapCreateManyUserClientByEmailInputEnvelope
    set?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    disconnect?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    delete?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    connect?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    update?: AvaliationRoadMapUpdateWithWhereUniqueWithoutUserClientByEmailInput | AvaliationRoadMapUpdateWithWhereUniqueWithoutUserClientByEmailInput[]
    updateMany?: AvaliationRoadMapUpdateManyWithWhereWithoutUserClientByEmailInput | AvaliationRoadMapUpdateManyWithWhereWithoutUserClientByEmailInput[]
    deleteMany?: AvaliationRoadMapScalarWhereInput | AvaliationRoadMapScalarWhereInput[]
  }

  export type AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput = {
    create?: XOR<AvaliationRoadMapCreateWithoutUserClientByIdClientInput, AvaliationRoadMapUncheckedCreateWithoutUserClientByIdClientInput> | AvaliationRoadMapCreateWithoutUserClientByIdClientInput[] | AvaliationRoadMapUncheckedCreateWithoutUserClientByIdClientInput[]
    connectOrCreate?: AvaliationRoadMapCreateOrConnectWithoutUserClientByIdClientInput | AvaliationRoadMapCreateOrConnectWithoutUserClientByIdClientInput[]
    upsert?: AvaliationRoadMapUpsertWithWhereUniqueWithoutUserClientByIdClientInput | AvaliationRoadMapUpsertWithWhereUniqueWithoutUserClientByIdClientInput[]
    createMany?: AvaliationRoadMapCreateManyUserClientByIdClientInputEnvelope
    set?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    disconnect?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    delete?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    connect?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    update?: AvaliationRoadMapUpdateWithWhereUniqueWithoutUserClientByIdClientInput | AvaliationRoadMapUpdateWithWhereUniqueWithoutUserClientByIdClientInput[]
    updateMany?: AvaliationRoadMapUpdateManyWithWhereWithoutUserClientByIdClientInput | AvaliationRoadMapUpdateManyWithWhereWithoutUserClientByIdClientInput[]
    deleteMany?: AvaliationRoadMapScalarWhereInput | AvaliationRoadMapScalarWhereInput[]
  }

  export type Travel_Road_MapUpdateManyWithoutUserClientNestedInput = {
    create?: XOR<Travel_Road_MapCreateWithoutUserClientInput, Travel_Road_MapUncheckedCreateWithoutUserClientInput> | Travel_Road_MapCreateWithoutUserClientInput[] | Travel_Road_MapUncheckedCreateWithoutUserClientInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutUserClientInput | Travel_Road_MapCreateOrConnectWithoutUserClientInput[]
    upsert?: Travel_Road_MapUpsertWithWhereUniqueWithoutUserClientInput | Travel_Road_MapUpsertWithWhereUniqueWithoutUserClientInput[]
    createMany?: Travel_Road_MapCreateManyUserClientInputEnvelope
    set?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    disconnect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    delete?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    update?: Travel_Road_MapUpdateWithWhereUniqueWithoutUserClientInput | Travel_Road_MapUpdateWithWhereUniqueWithoutUserClientInput[]
    updateMany?: Travel_Road_MapUpdateManyWithWhereWithoutUserClientInput | Travel_Road_MapUpdateManyWithWhereWithoutUserClientInput[]
    deleteMany?: Travel_Road_MapScalarWhereInput | Travel_Road_MapScalarWhereInput[]
  }

  export type AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput = {
    create?: XOR<AvaliationTouristPointCreateWithoutUserClientByEmailInput, AvaliationTouristPointUncheckedCreateWithoutUserClientByEmailInput> | AvaliationTouristPointCreateWithoutUserClientByEmailInput[] | AvaliationTouristPointUncheckedCreateWithoutUserClientByEmailInput[]
    connectOrCreate?: AvaliationTouristPointCreateOrConnectWithoutUserClientByEmailInput | AvaliationTouristPointCreateOrConnectWithoutUserClientByEmailInput[]
    upsert?: AvaliationTouristPointUpsertWithWhereUniqueWithoutUserClientByEmailInput | AvaliationTouristPointUpsertWithWhereUniqueWithoutUserClientByEmailInput[]
    createMany?: AvaliationTouristPointCreateManyUserClientByEmailInputEnvelope
    set?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    disconnect?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    delete?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    connect?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    update?: AvaliationTouristPointUpdateWithWhereUniqueWithoutUserClientByEmailInput | AvaliationTouristPointUpdateWithWhereUniqueWithoutUserClientByEmailInput[]
    updateMany?: AvaliationTouristPointUpdateManyWithWhereWithoutUserClientByEmailInput | AvaliationTouristPointUpdateManyWithWhereWithoutUserClientByEmailInput[]
    deleteMany?: AvaliationTouristPointScalarWhereInput | AvaliationTouristPointScalarWhereInput[]
  }

  export type AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput = {
    create?: XOR<AvaliationTouristPointCreateWithoutUserClientByIdClientInput, AvaliationTouristPointUncheckedCreateWithoutUserClientByIdClientInput> | AvaliationTouristPointCreateWithoutUserClientByIdClientInput[] | AvaliationTouristPointUncheckedCreateWithoutUserClientByIdClientInput[]
    connectOrCreate?: AvaliationTouristPointCreateOrConnectWithoutUserClientByIdClientInput | AvaliationTouristPointCreateOrConnectWithoutUserClientByIdClientInput[]
    upsert?: AvaliationTouristPointUpsertWithWhereUniqueWithoutUserClientByIdClientInput | AvaliationTouristPointUpsertWithWhereUniqueWithoutUserClientByIdClientInput[]
    createMany?: AvaliationTouristPointCreateManyUserClientByIdClientInputEnvelope
    set?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    disconnect?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    delete?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    connect?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    update?: AvaliationTouristPointUpdateWithWhereUniqueWithoutUserClientByIdClientInput | AvaliationTouristPointUpdateWithWhereUniqueWithoutUserClientByIdClientInput[]
    updateMany?: AvaliationTouristPointUpdateManyWithWhereWithoutUserClientByIdClientInput | AvaliationTouristPointUpdateManyWithWhereWithoutUserClientByIdClientInput[]
    deleteMany?: AvaliationTouristPointScalarWhereInput | AvaliationTouristPointScalarWhereInput[]
  }

  export type AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput = {
    create?: XOR<AvaliationCommercialPointCreateWithoutUserClientByEmailClientInput, AvaliationCommercialPointUncheckedCreateWithoutUserClientByEmailClientInput> | AvaliationCommercialPointCreateWithoutUserClientByEmailClientInput[] | AvaliationCommercialPointUncheckedCreateWithoutUserClientByEmailClientInput[]
    connectOrCreate?: AvaliationCommercialPointCreateOrConnectWithoutUserClientByEmailClientInput | AvaliationCommercialPointCreateOrConnectWithoutUserClientByEmailClientInput[]
    upsert?: AvaliationCommercialPointUpsertWithWhereUniqueWithoutUserClientByEmailClientInput | AvaliationCommercialPointUpsertWithWhereUniqueWithoutUserClientByEmailClientInput[]
    createMany?: AvaliationCommercialPointCreateManyUserClientByEmailClientInputEnvelope
    set?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    disconnect?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    delete?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    connect?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    update?: AvaliationCommercialPointUpdateWithWhereUniqueWithoutUserClientByEmailClientInput | AvaliationCommercialPointUpdateWithWhereUniqueWithoutUserClientByEmailClientInput[]
    updateMany?: AvaliationCommercialPointUpdateManyWithWhereWithoutUserClientByEmailClientInput | AvaliationCommercialPointUpdateManyWithWhereWithoutUserClientByEmailClientInput[]
    deleteMany?: AvaliationCommercialPointScalarWhereInput | AvaliationCommercialPointScalarWhereInput[]
  }

  export type AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput = {
    create?: XOR<AvaliationCommercialPointCreateWithoutUserClientByIdClientInput, AvaliationCommercialPointUncheckedCreateWithoutUserClientByIdClientInput> | AvaliationCommercialPointCreateWithoutUserClientByIdClientInput[] | AvaliationCommercialPointUncheckedCreateWithoutUserClientByIdClientInput[]
    connectOrCreate?: AvaliationCommercialPointCreateOrConnectWithoutUserClientByIdClientInput | AvaliationCommercialPointCreateOrConnectWithoutUserClientByIdClientInput[]
    upsert?: AvaliationCommercialPointUpsertWithWhereUniqueWithoutUserClientByIdClientInput | AvaliationCommercialPointUpsertWithWhereUniqueWithoutUserClientByIdClientInput[]
    createMany?: AvaliationCommercialPointCreateManyUserClientByIdClientInputEnvelope
    set?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    disconnect?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    delete?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    connect?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    update?: AvaliationCommercialPointUpdateWithWhereUniqueWithoutUserClientByIdClientInput | AvaliationCommercialPointUpdateWithWhereUniqueWithoutUserClientByIdClientInput[]
    updateMany?: AvaliationCommercialPointUpdateManyWithWhereWithoutUserClientByIdClientInput | AvaliationCommercialPointUpdateManyWithWhereWithoutUserClientByIdClientInput[]
    deleteMany?: AvaliationCommercialPointScalarWhereInput | AvaliationCommercialPointScalarWhereInput[]
  }

  export type CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput = {
    create?: XOR<CommentRoadMapCreateWithoutUserClientByClientEmailInput, CommentRoadMapUncheckedCreateWithoutUserClientByClientEmailInput> | CommentRoadMapCreateWithoutUserClientByClientEmailInput[] | CommentRoadMapUncheckedCreateWithoutUserClientByClientEmailInput[]
    connectOrCreate?: CommentRoadMapCreateOrConnectWithoutUserClientByClientEmailInput | CommentRoadMapCreateOrConnectWithoutUserClientByClientEmailInput[]
    upsert?: CommentRoadMapUpsertWithWhereUniqueWithoutUserClientByClientEmailInput | CommentRoadMapUpsertWithWhereUniqueWithoutUserClientByClientEmailInput[]
    createMany?: CommentRoadMapCreateManyUserClientByClientEmailInputEnvelope
    set?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    disconnect?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    delete?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    connect?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    update?: CommentRoadMapUpdateWithWhereUniqueWithoutUserClientByClientEmailInput | CommentRoadMapUpdateWithWhereUniqueWithoutUserClientByClientEmailInput[]
    updateMany?: CommentRoadMapUpdateManyWithWhereWithoutUserClientByClientEmailInput | CommentRoadMapUpdateManyWithWhereWithoutUserClientByClientEmailInput[]
    deleteMany?: CommentRoadMapScalarWhereInput | CommentRoadMapScalarWhereInput[]
  }

  export type CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput = {
    create?: XOR<CommentRoadMapCreateWithoutUserClientByClientIdInput, CommentRoadMapUncheckedCreateWithoutUserClientByClientIdInput> | CommentRoadMapCreateWithoutUserClientByClientIdInput[] | CommentRoadMapUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: CommentRoadMapCreateOrConnectWithoutUserClientByClientIdInput | CommentRoadMapCreateOrConnectWithoutUserClientByClientIdInput[]
    upsert?: CommentRoadMapUpsertWithWhereUniqueWithoutUserClientByClientIdInput | CommentRoadMapUpsertWithWhereUniqueWithoutUserClientByClientIdInput[]
    createMany?: CommentRoadMapCreateManyUserClientByClientIdInputEnvelope
    set?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    disconnect?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    delete?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    connect?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    update?: CommentRoadMapUpdateWithWhereUniqueWithoutUserClientByClientIdInput | CommentRoadMapUpdateWithWhereUniqueWithoutUserClientByClientIdInput[]
    updateMany?: CommentRoadMapUpdateManyWithWhereWithoutUserClientByClientIdInput | CommentRoadMapUpdateManyWithWhereWithoutUserClientByClientIdInput[]
    deleteMany?: CommentRoadMapScalarWhereInput | CommentRoadMapScalarWhereInput[]
  }

  export type CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput = {
    create?: XOR<CommentTouristPointCreateWithoutUserClientByClientEmailInput, CommentTouristPointUncheckedCreateWithoutUserClientByClientEmailInput> | CommentTouristPointCreateWithoutUserClientByClientEmailInput[] | CommentTouristPointUncheckedCreateWithoutUserClientByClientEmailInput[]
    connectOrCreate?: CommentTouristPointCreateOrConnectWithoutUserClientByClientEmailInput | CommentTouristPointCreateOrConnectWithoutUserClientByClientEmailInput[]
    upsert?: CommentTouristPointUpsertWithWhereUniqueWithoutUserClientByClientEmailInput | CommentTouristPointUpsertWithWhereUniqueWithoutUserClientByClientEmailInput[]
    createMany?: CommentTouristPointCreateManyUserClientByClientEmailInputEnvelope
    set?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    disconnect?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    delete?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    connect?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    update?: CommentTouristPointUpdateWithWhereUniqueWithoutUserClientByClientEmailInput | CommentTouristPointUpdateWithWhereUniqueWithoutUserClientByClientEmailInput[]
    updateMany?: CommentTouristPointUpdateManyWithWhereWithoutUserClientByClientEmailInput | CommentTouristPointUpdateManyWithWhereWithoutUserClientByClientEmailInput[]
    deleteMany?: CommentTouristPointScalarWhereInput | CommentTouristPointScalarWhereInput[]
  }

  export type CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput = {
    create?: XOR<CommentTouristPointCreateWithoutUserClientByClientIdInput, CommentTouristPointUncheckedCreateWithoutUserClientByClientIdInput> | CommentTouristPointCreateWithoutUserClientByClientIdInput[] | CommentTouristPointUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: CommentTouristPointCreateOrConnectWithoutUserClientByClientIdInput | CommentTouristPointCreateOrConnectWithoutUserClientByClientIdInput[]
    upsert?: CommentTouristPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput | CommentTouristPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput[]
    createMany?: CommentTouristPointCreateManyUserClientByClientIdInputEnvelope
    set?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    disconnect?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    delete?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    connect?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    update?: CommentTouristPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput | CommentTouristPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput[]
    updateMany?: CommentTouristPointUpdateManyWithWhereWithoutUserClientByClientIdInput | CommentTouristPointUpdateManyWithWhereWithoutUserClientByClientIdInput[]
    deleteMany?: CommentTouristPointScalarWhereInput | CommentTouristPointScalarWhereInput[]
  }

  export type CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput = {
    create?: XOR<CommentCommercialPointCreateWithoutUserClientByClientEmailInput, CommentCommercialPointUncheckedCreateWithoutUserClientByClientEmailInput> | CommentCommercialPointCreateWithoutUserClientByClientEmailInput[] | CommentCommercialPointUncheckedCreateWithoutUserClientByClientEmailInput[]
    connectOrCreate?: CommentCommercialPointCreateOrConnectWithoutUserClientByClientEmailInput | CommentCommercialPointCreateOrConnectWithoutUserClientByClientEmailInput[]
    upsert?: CommentCommercialPointUpsertWithWhereUniqueWithoutUserClientByClientEmailInput | CommentCommercialPointUpsertWithWhereUniqueWithoutUserClientByClientEmailInput[]
    createMany?: CommentCommercialPointCreateManyUserClientByClientEmailInputEnvelope
    set?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    disconnect?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    delete?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    connect?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    update?: CommentCommercialPointUpdateWithWhereUniqueWithoutUserClientByClientEmailInput | CommentCommercialPointUpdateWithWhereUniqueWithoutUserClientByClientEmailInput[]
    updateMany?: CommentCommercialPointUpdateManyWithWhereWithoutUserClientByClientEmailInput | CommentCommercialPointUpdateManyWithWhereWithoutUserClientByClientEmailInput[]
    deleteMany?: CommentCommercialPointScalarWhereInput | CommentCommercialPointScalarWhereInput[]
  }

  export type CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput = {
    create?: XOR<CommentCommercialPointCreateWithoutUserClientByClientIdInput, CommentCommercialPointUncheckedCreateWithoutUserClientByClientIdInput> | CommentCommercialPointCreateWithoutUserClientByClientIdInput[] | CommentCommercialPointUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: CommentCommercialPointCreateOrConnectWithoutUserClientByClientIdInput | CommentCommercialPointCreateOrConnectWithoutUserClientByClientIdInput[]
    upsert?: CommentCommercialPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput | CommentCommercialPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput[]
    createMany?: CommentCommercialPointCreateManyUserClientByClientIdInputEnvelope
    set?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    disconnect?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    delete?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    connect?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    update?: CommentCommercialPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput | CommentCommercialPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput[]
    updateMany?: CommentCommercialPointUpdateManyWithWhereWithoutUserClientByClientIdInput | CommentCommercialPointUpdateManyWithWhereWithoutUserClientByClientIdInput[]
    deleteMany?: CommentCommercialPointScalarWhereInput | CommentCommercialPointScalarWhereInput[]
  }

  export type FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput = {
    create?: XOR<FavoriteCommercialPointCreateWithoutUserClientByClientIdInput, FavoriteCommercialPointUncheckedCreateWithoutUserClientByClientIdInput> | FavoriteCommercialPointCreateWithoutUserClientByClientIdInput[] | FavoriteCommercialPointUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: FavoriteCommercialPointCreateOrConnectWithoutUserClientByClientIdInput | FavoriteCommercialPointCreateOrConnectWithoutUserClientByClientIdInput[]
    upsert?: FavoriteCommercialPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput | FavoriteCommercialPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput[]
    createMany?: FavoriteCommercialPointCreateManyUserClientByClientIdInputEnvelope
    set?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
    disconnect?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
    delete?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
    connect?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
    update?: FavoriteCommercialPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput | FavoriteCommercialPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput[]
    updateMany?: FavoriteCommercialPointUpdateManyWithWhereWithoutUserClientByClientIdInput | FavoriteCommercialPointUpdateManyWithWhereWithoutUserClientByClientIdInput[]
    deleteMany?: FavoriteCommercialPointScalarWhereInput | FavoriteCommercialPointScalarWhereInput[]
  }

  export type FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput = {
    create?: XOR<FavoriteTouristPointCreateWithoutUserClientByClientIdInput, FavoriteTouristPointUncheckedCreateWithoutUserClientByClientIdInput> | FavoriteTouristPointCreateWithoutUserClientByClientIdInput[] | FavoriteTouristPointUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: FavoriteTouristPointCreateOrConnectWithoutUserClientByClientIdInput | FavoriteTouristPointCreateOrConnectWithoutUserClientByClientIdInput[]
    upsert?: FavoriteTouristPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput | FavoriteTouristPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput[]
    createMany?: FavoriteTouristPointCreateManyUserClientByClientIdInputEnvelope
    set?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
    disconnect?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
    delete?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
    connect?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
    update?: FavoriteTouristPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput | FavoriteTouristPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput[]
    updateMany?: FavoriteTouristPointUpdateManyWithWhereWithoutUserClientByClientIdInput | FavoriteTouristPointUpdateManyWithWhereWithoutUserClientByClientIdInput[]
    deleteMany?: FavoriteTouristPointScalarWhereInput | FavoriteTouristPointScalarWhereInput[]
  }

  export type FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput = {
    create?: XOR<FavoriteRoadMapCreateWithoutUserClientByClientIdInput, FavoriteRoadMapUncheckedCreateWithoutUserClientByClientIdInput> | FavoriteRoadMapCreateWithoutUserClientByClientIdInput[] | FavoriteRoadMapUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: FavoriteRoadMapCreateOrConnectWithoutUserClientByClientIdInput | FavoriteRoadMapCreateOrConnectWithoutUserClientByClientIdInput[]
    upsert?: FavoriteRoadMapUpsertWithWhereUniqueWithoutUserClientByClientIdInput | FavoriteRoadMapUpsertWithWhereUniqueWithoutUserClientByClientIdInput[]
    createMany?: FavoriteRoadMapCreateManyUserClientByClientIdInputEnvelope
    set?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
    disconnect?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
    delete?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
    connect?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
    update?: FavoriteRoadMapUpdateWithWhereUniqueWithoutUserClientByClientIdInput | FavoriteRoadMapUpdateWithWhereUniqueWithoutUserClientByClientIdInput[]
    updateMany?: FavoriteRoadMapUpdateManyWithWhereWithoutUserClientByClientIdInput | FavoriteRoadMapUpdateManyWithWhereWithoutUserClientByClientIdInput[]
    deleteMany?: FavoriteRoadMapScalarWhereInput | FavoriteRoadMapScalarWhereInput[]
  }

  export type notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput = {
    create?: XOR<notificationTouristPointCreateWithoutUserNotificationTouristPointByIdClientInput, notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdClientInput> | notificationTouristPointCreateWithoutUserNotificationTouristPointByIdClientInput[] | notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdClientInput[]
    connectOrCreate?: notificationTouristPointCreateOrConnectWithoutUserNotificationTouristPointByIdClientInput | notificationTouristPointCreateOrConnectWithoutUserNotificationTouristPointByIdClientInput[]
    upsert?: notificationTouristPointUpsertWithWhereUniqueWithoutUserNotificationTouristPointByIdClientInput | notificationTouristPointUpsertWithWhereUniqueWithoutUserNotificationTouristPointByIdClientInput[]
    createMany?: notificationTouristPointCreateManyUserNotificationTouristPointByIdClientInputEnvelope
    set?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
    disconnect?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
    delete?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
    connect?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
    update?: notificationTouristPointUpdateWithWhereUniqueWithoutUserNotificationTouristPointByIdClientInput | notificationTouristPointUpdateWithWhereUniqueWithoutUserNotificationTouristPointByIdClientInput[]
    updateMany?: notificationTouristPointUpdateManyWithWhereWithoutUserNotificationTouristPointByIdClientInput | notificationTouristPointUpdateManyWithWhereWithoutUserNotificationTouristPointByIdClientInput[]
    deleteMany?: notificationTouristPointScalarWhereInput | notificationTouristPointScalarWhereInput[]
  }

  export type notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput = {
    create?: XOR<notificationRoadMapCreateWithoutUserNotificationRoadMapByIdClientInput, notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdClientInput> | notificationRoadMapCreateWithoutUserNotificationRoadMapByIdClientInput[] | notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdClientInput[]
    connectOrCreate?: notificationRoadMapCreateOrConnectWithoutUserNotificationRoadMapByIdClientInput | notificationRoadMapCreateOrConnectWithoutUserNotificationRoadMapByIdClientInput[]
    upsert?: notificationRoadMapUpsertWithWhereUniqueWithoutUserNotificationRoadMapByIdClientInput | notificationRoadMapUpsertWithWhereUniqueWithoutUserNotificationRoadMapByIdClientInput[]
    createMany?: notificationRoadMapCreateManyUserNotificationRoadMapByIdClientInputEnvelope
    set?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
    disconnect?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
    delete?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
    connect?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
    update?: notificationRoadMapUpdateWithWhereUniqueWithoutUserNotificationRoadMapByIdClientInput | notificationRoadMapUpdateWithWhereUniqueWithoutUserNotificationRoadMapByIdClientInput[]
    updateMany?: notificationRoadMapUpdateManyWithWhereWithoutUserNotificationRoadMapByIdClientInput | notificationRoadMapUpdateManyWithWhereWithoutUserNotificationRoadMapByIdClientInput[]
    deleteMany?: notificationRoadMapScalarWhereInput | notificationRoadMapScalarWhereInput[]
  }

  export type reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput = {
    create?: XOR<reportRoadMapCreateWithoutUserReportRoadMapByIdUserReportInput, reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdUserReportInput> | reportRoadMapCreateWithoutUserReportRoadMapByIdUserReportInput[] | reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdUserReportInput[]
    connectOrCreate?: reportRoadMapCreateOrConnectWithoutUserReportRoadMapByIdUserReportInput | reportRoadMapCreateOrConnectWithoutUserReportRoadMapByIdUserReportInput[]
    upsert?: reportRoadMapUpsertWithWhereUniqueWithoutUserReportRoadMapByIdUserReportInput | reportRoadMapUpsertWithWhereUniqueWithoutUserReportRoadMapByIdUserReportInput[]
    createMany?: reportRoadMapCreateManyUserReportRoadMapByIdUserReportInputEnvelope
    set?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
    disconnect?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
    delete?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
    connect?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
    update?: reportRoadMapUpdateWithWhereUniqueWithoutUserReportRoadMapByIdUserReportInput | reportRoadMapUpdateWithWhereUniqueWithoutUserReportRoadMapByIdUserReportInput[]
    updateMany?: reportRoadMapUpdateManyWithWhereWithoutUserReportRoadMapByIdUserReportInput | reportRoadMapUpdateManyWithWhereWithoutUserReportRoadMapByIdUserReportInput[]
    deleteMany?: reportRoadMapScalarWhereInput | reportRoadMapScalarWhereInput[]
  }

  export type reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput = {
    create?: XOR<reportCommercialPointCreateWithoutUserReportCommercialPointByIdUserReportInput, reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdUserReportInput> | reportCommercialPointCreateWithoutUserReportCommercialPointByIdUserReportInput[] | reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdUserReportInput[]
    connectOrCreate?: reportCommercialPointCreateOrConnectWithoutUserReportCommercialPointByIdUserReportInput | reportCommercialPointCreateOrConnectWithoutUserReportCommercialPointByIdUserReportInput[]
    upsert?: reportCommercialPointUpsertWithWhereUniqueWithoutUserReportCommercialPointByIdUserReportInput | reportCommercialPointUpsertWithWhereUniqueWithoutUserReportCommercialPointByIdUserReportInput[]
    createMany?: reportCommercialPointCreateManyUserReportCommercialPointByIdUserReportInputEnvelope
    set?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
    disconnect?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
    delete?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
    connect?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
    update?: reportCommercialPointUpdateWithWhereUniqueWithoutUserReportCommercialPointByIdUserReportInput | reportCommercialPointUpdateWithWhereUniqueWithoutUserReportCommercialPointByIdUserReportInput[]
    updateMany?: reportCommercialPointUpdateManyWithWhereWithoutUserReportCommercialPointByIdUserReportInput | reportCommercialPointUpdateManyWithWhereWithoutUserReportCommercialPointByIdUserReportInput[]
    deleteMany?: reportCommercialPointScalarWhereInput | reportCommercialPointScalarWhereInput[]
  }

  export type reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput = {
    create?: XOR<reportTouristPointCreateWithoutUserReportTouristPointByIdUserReportInput, reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdUserReportInput> | reportTouristPointCreateWithoutUserReportTouristPointByIdUserReportInput[] | reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdUserReportInput[]
    connectOrCreate?: reportTouristPointCreateOrConnectWithoutUserReportTouristPointByIdUserReportInput | reportTouristPointCreateOrConnectWithoutUserReportTouristPointByIdUserReportInput[]
    upsert?: reportTouristPointUpsertWithWhereUniqueWithoutUserReportTouristPointByIdUserReportInput | reportTouristPointUpsertWithWhereUniqueWithoutUserReportTouristPointByIdUserReportInput[]
    createMany?: reportTouristPointCreateManyUserReportTouristPointByIdUserReportInputEnvelope
    set?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
    disconnect?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
    delete?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
    connect?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
    update?: reportTouristPointUpdateWithWhereUniqueWithoutUserReportTouristPointByIdUserReportInput | reportTouristPointUpdateWithWhereUniqueWithoutUserReportTouristPointByIdUserReportInput[]
    updateMany?: reportTouristPointUpdateManyWithWhereWithoutUserReportTouristPointByIdUserReportInput | reportTouristPointUpdateManyWithWhereWithoutUserReportTouristPointByIdUserReportInput[]
    deleteMany?: reportTouristPointScalarWhereInput | reportTouristPointScalarWhereInput[]
  }

  export type AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput = {
    create?: XOR<AvaliationRoadMapCreateWithoutUserClientByEmailInput, AvaliationRoadMapUncheckedCreateWithoutUserClientByEmailInput> | AvaliationRoadMapCreateWithoutUserClientByEmailInput[] | AvaliationRoadMapUncheckedCreateWithoutUserClientByEmailInput[]
    connectOrCreate?: AvaliationRoadMapCreateOrConnectWithoutUserClientByEmailInput | AvaliationRoadMapCreateOrConnectWithoutUserClientByEmailInput[]
    upsert?: AvaliationRoadMapUpsertWithWhereUniqueWithoutUserClientByEmailInput | AvaliationRoadMapUpsertWithWhereUniqueWithoutUserClientByEmailInput[]
    createMany?: AvaliationRoadMapCreateManyUserClientByEmailInputEnvelope
    set?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    disconnect?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    delete?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    connect?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    update?: AvaliationRoadMapUpdateWithWhereUniqueWithoutUserClientByEmailInput | AvaliationRoadMapUpdateWithWhereUniqueWithoutUserClientByEmailInput[]
    updateMany?: AvaliationRoadMapUpdateManyWithWhereWithoutUserClientByEmailInput | AvaliationRoadMapUpdateManyWithWhereWithoutUserClientByEmailInput[]
    deleteMany?: AvaliationRoadMapScalarWhereInput | AvaliationRoadMapScalarWhereInput[]
  }

  export type AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput = {
    create?: XOR<AvaliationRoadMapCreateWithoutUserClientByIdClientInput, AvaliationRoadMapUncheckedCreateWithoutUserClientByIdClientInput> | AvaliationRoadMapCreateWithoutUserClientByIdClientInput[] | AvaliationRoadMapUncheckedCreateWithoutUserClientByIdClientInput[]
    connectOrCreate?: AvaliationRoadMapCreateOrConnectWithoutUserClientByIdClientInput | AvaliationRoadMapCreateOrConnectWithoutUserClientByIdClientInput[]
    upsert?: AvaliationRoadMapUpsertWithWhereUniqueWithoutUserClientByIdClientInput | AvaliationRoadMapUpsertWithWhereUniqueWithoutUserClientByIdClientInput[]
    createMany?: AvaliationRoadMapCreateManyUserClientByIdClientInputEnvelope
    set?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    disconnect?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    delete?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    connect?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    update?: AvaliationRoadMapUpdateWithWhereUniqueWithoutUserClientByIdClientInput | AvaliationRoadMapUpdateWithWhereUniqueWithoutUserClientByIdClientInput[]
    updateMany?: AvaliationRoadMapUpdateManyWithWhereWithoutUserClientByIdClientInput | AvaliationRoadMapUpdateManyWithWhereWithoutUserClientByIdClientInput[]
    deleteMany?: AvaliationRoadMapScalarWhereInput | AvaliationRoadMapScalarWhereInput[]
  }

  export type Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput = {
    create?: XOR<Travel_Road_MapCreateWithoutUserClientInput, Travel_Road_MapUncheckedCreateWithoutUserClientInput> | Travel_Road_MapCreateWithoutUserClientInput[] | Travel_Road_MapUncheckedCreateWithoutUserClientInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutUserClientInput | Travel_Road_MapCreateOrConnectWithoutUserClientInput[]
    upsert?: Travel_Road_MapUpsertWithWhereUniqueWithoutUserClientInput | Travel_Road_MapUpsertWithWhereUniqueWithoutUserClientInput[]
    createMany?: Travel_Road_MapCreateManyUserClientInputEnvelope
    set?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    disconnect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    delete?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    update?: Travel_Road_MapUpdateWithWhereUniqueWithoutUserClientInput | Travel_Road_MapUpdateWithWhereUniqueWithoutUserClientInput[]
    updateMany?: Travel_Road_MapUpdateManyWithWhereWithoutUserClientInput | Travel_Road_MapUpdateManyWithWhereWithoutUserClientInput[]
    deleteMany?: Travel_Road_MapScalarWhereInput | Travel_Road_MapScalarWhereInput[]
  }

  export type AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput = {
    create?: XOR<AvaliationTouristPointCreateWithoutUserClientByEmailInput, AvaliationTouristPointUncheckedCreateWithoutUserClientByEmailInput> | AvaliationTouristPointCreateWithoutUserClientByEmailInput[] | AvaliationTouristPointUncheckedCreateWithoutUserClientByEmailInput[]
    connectOrCreate?: AvaliationTouristPointCreateOrConnectWithoutUserClientByEmailInput | AvaliationTouristPointCreateOrConnectWithoutUserClientByEmailInput[]
    upsert?: AvaliationTouristPointUpsertWithWhereUniqueWithoutUserClientByEmailInput | AvaliationTouristPointUpsertWithWhereUniqueWithoutUserClientByEmailInput[]
    createMany?: AvaliationTouristPointCreateManyUserClientByEmailInputEnvelope
    set?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    disconnect?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    delete?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    connect?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    update?: AvaliationTouristPointUpdateWithWhereUniqueWithoutUserClientByEmailInput | AvaliationTouristPointUpdateWithWhereUniqueWithoutUserClientByEmailInput[]
    updateMany?: AvaliationTouristPointUpdateManyWithWhereWithoutUserClientByEmailInput | AvaliationTouristPointUpdateManyWithWhereWithoutUserClientByEmailInput[]
    deleteMany?: AvaliationTouristPointScalarWhereInput | AvaliationTouristPointScalarWhereInput[]
  }

  export type AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput = {
    create?: XOR<AvaliationTouristPointCreateWithoutUserClientByIdClientInput, AvaliationTouristPointUncheckedCreateWithoutUserClientByIdClientInput> | AvaliationTouristPointCreateWithoutUserClientByIdClientInput[] | AvaliationTouristPointUncheckedCreateWithoutUserClientByIdClientInput[]
    connectOrCreate?: AvaliationTouristPointCreateOrConnectWithoutUserClientByIdClientInput | AvaliationTouristPointCreateOrConnectWithoutUserClientByIdClientInput[]
    upsert?: AvaliationTouristPointUpsertWithWhereUniqueWithoutUserClientByIdClientInput | AvaliationTouristPointUpsertWithWhereUniqueWithoutUserClientByIdClientInput[]
    createMany?: AvaliationTouristPointCreateManyUserClientByIdClientInputEnvelope
    set?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    disconnect?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    delete?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    connect?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    update?: AvaliationTouristPointUpdateWithWhereUniqueWithoutUserClientByIdClientInput | AvaliationTouristPointUpdateWithWhereUniqueWithoutUserClientByIdClientInput[]
    updateMany?: AvaliationTouristPointUpdateManyWithWhereWithoutUserClientByIdClientInput | AvaliationTouristPointUpdateManyWithWhereWithoutUserClientByIdClientInput[]
    deleteMany?: AvaliationTouristPointScalarWhereInput | AvaliationTouristPointScalarWhereInput[]
  }

  export type AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput = {
    create?: XOR<AvaliationCommercialPointCreateWithoutUserClientByEmailClientInput, AvaliationCommercialPointUncheckedCreateWithoutUserClientByEmailClientInput> | AvaliationCommercialPointCreateWithoutUserClientByEmailClientInput[] | AvaliationCommercialPointUncheckedCreateWithoutUserClientByEmailClientInput[]
    connectOrCreate?: AvaliationCommercialPointCreateOrConnectWithoutUserClientByEmailClientInput | AvaliationCommercialPointCreateOrConnectWithoutUserClientByEmailClientInput[]
    upsert?: AvaliationCommercialPointUpsertWithWhereUniqueWithoutUserClientByEmailClientInput | AvaliationCommercialPointUpsertWithWhereUniqueWithoutUserClientByEmailClientInput[]
    createMany?: AvaliationCommercialPointCreateManyUserClientByEmailClientInputEnvelope
    set?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    disconnect?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    delete?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    connect?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    update?: AvaliationCommercialPointUpdateWithWhereUniqueWithoutUserClientByEmailClientInput | AvaliationCommercialPointUpdateWithWhereUniqueWithoutUserClientByEmailClientInput[]
    updateMany?: AvaliationCommercialPointUpdateManyWithWhereWithoutUserClientByEmailClientInput | AvaliationCommercialPointUpdateManyWithWhereWithoutUserClientByEmailClientInput[]
    deleteMany?: AvaliationCommercialPointScalarWhereInput | AvaliationCommercialPointScalarWhereInput[]
  }

  export type AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput = {
    create?: XOR<AvaliationCommercialPointCreateWithoutUserClientByIdClientInput, AvaliationCommercialPointUncheckedCreateWithoutUserClientByIdClientInput> | AvaliationCommercialPointCreateWithoutUserClientByIdClientInput[] | AvaliationCommercialPointUncheckedCreateWithoutUserClientByIdClientInput[]
    connectOrCreate?: AvaliationCommercialPointCreateOrConnectWithoutUserClientByIdClientInput | AvaliationCommercialPointCreateOrConnectWithoutUserClientByIdClientInput[]
    upsert?: AvaliationCommercialPointUpsertWithWhereUniqueWithoutUserClientByIdClientInput | AvaliationCommercialPointUpsertWithWhereUniqueWithoutUserClientByIdClientInput[]
    createMany?: AvaliationCommercialPointCreateManyUserClientByIdClientInputEnvelope
    set?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    disconnect?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    delete?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    connect?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    update?: AvaliationCommercialPointUpdateWithWhereUniqueWithoutUserClientByIdClientInput | AvaliationCommercialPointUpdateWithWhereUniqueWithoutUserClientByIdClientInput[]
    updateMany?: AvaliationCommercialPointUpdateManyWithWhereWithoutUserClientByIdClientInput | AvaliationCommercialPointUpdateManyWithWhereWithoutUserClientByIdClientInput[]
    deleteMany?: AvaliationCommercialPointScalarWhereInput | AvaliationCommercialPointScalarWhereInput[]
  }

  export type CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput = {
    create?: XOR<CommentRoadMapCreateWithoutUserClientByClientEmailInput, CommentRoadMapUncheckedCreateWithoutUserClientByClientEmailInput> | CommentRoadMapCreateWithoutUserClientByClientEmailInput[] | CommentRoadMapUncheckedCreateWithoutUserClientByClientEmailInput[]
    connectOrCreate?: CommentRoadMapCreateOrConnectWithoutUserClientByClientEmailInput | CommentRoadMapCreateOrConnectWithoutUserClientByClientEmailInput[]
    upsert?: CommentRoadMapUpsertWithWhereUniqueWithoutUserClientByClientEmailInput | CommentRoadMapUpsertWithWhereUniqueWithoutUserClientByClientEmailInput[]
    createMany?: CommentRoadMapCreateManyUserClientByClientEmailInputEnvelope
    set?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    disconnect?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    delete?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    connect?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    update?: CommentRoadMapUpdateWithWhereUniqueWithoutUserClientByClientEmailInput | CommentRoadMapUpdateWithWhereUniqueWithoutUserClientByClientEmailInput[]
    updateMany?: CommentRoadMapUpdateManyWithWhereWithoutUserClientByClientEmailInput | CommentRoadMapUpdateManyWithWhereWithoutUserClientByClientEmailInput[]
    deleteMany?: CommentRoadMapScalarWhereInput | CommentRoadMapScalarWhereInput[]
  }

  export type CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput = {
    create?: XOR<CommentRoadMapCreateWithoutUserClientByClientIdInput, CommentRoadMapUncheckedCreateWithoutUserClientByClientIdInput> | CommentRoadMapCreateWithoutUserClientByClientIdInput[] | CommentRoadMapUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: CommentRoadMapCreateOrConnectWithoutUserClientByClientIdInput | CommentRoadMapCreateOrConnectWithoutUserClientByClientIdInput[]
    upsert?: CommentRoadMapUpsertWithWhereUniqueWithoutUserClientByClientIdInput | CommentRoadMapUpsertWithWhereUniqueWithoutUserClientByClientIdInput[]
    createMany?: CommentRoadMapCreateManyUserClientByClientIdInputEnvelope
    set?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    disconnect?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    delete?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    connect?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    update?: CommentRoadMapUpdateWithWhereUniqueWithoutUserClientByClientIdInput | CommentRoadMapUpdateWithWhereUniqueWithoutUserClientByClientIdInput[]
    updateMany?: CommentRoadMapUpdateManyWithWhereWithoutUserClientByClientIdInput | CommentRoadMapUpdateManyWithWhereWithoutUserClientByClientIdInput[]
    deleteMany?: CommentRoadMapScalarWhereInput | CommentRoadMapScalarWhereInput[]
  }

  export type CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput = {
    create?: XOR<CommentTouristPointCreateWithoutUserClientByClientEmailInput, CommentTouristPointUncheckedCreateWithoutUserClientByClientEmailInput> | CommentTouristPointCreateWithoutUserClientByClientEmailInput[] | CommentTouristPointUncheckedCreateWithoutUserClientByClientEmailInput[]
    connectOrCreate?: CommentTouristPointCreateOrConnectWithoutUserClientByClientEmailInput | CommentTouristPointCreateOrConnectWithoutUserClientByClientEmailInput[]
    upsert?: CommentTouristPointUpsertWithWhereUniqueWithoutUserClientByClientEmailInput | CommentTouristPointUpsertWithWhereUniqueWithoutUserClientByClientEmailInput[]
    createMany?: CommentTouristPointCreateManyUserClientByClientEmailInputEnvelope
    set?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    disconnect?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    delete?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    connect?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    update?: CommentTouristPointUpdateWithWhereUniqueWithoutUserClientByClientEmailInput | CommentTouristPointUpdateWithWhereUniqueWithoutUserClientByClientEmailInput[]
    updateMany?: CommentTouristPointUpdateManyWithWhereWithoutUserClientByClientEmailInput | CommentTouristPointUpdateManyWithWhereWithoutUserClientByClientEmailInput[]
    deleteMany?: CommentTouristPointScalarWhereInput | CommentTouristPointScalarWhereInput[]
  }

  export type CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput = {
    create?: XOR<CommentTouristPointCreateWithoutUserClientByClientIdInput, CommentTouristPointUncheckedCreateWithoutUserClientByClientIdInput> | CommentTouristPointCreateWithoutUserClientByClientIdInput[] | CommentTouristPointUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: CommentTouristPointCreateOrConnectWithoutUserClientByClientIdInput | CommentTouristPointCreateOrConnectWithoutUserClientByClientIdInput[]
    upsert?: CommentTouristPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput | CommentTouristPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput[]
    createMany?: CommentTouristPointCreateManyUserClientByClientIdInputEnvelope
    set?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    disconnect?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    delete?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    connect?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    update?: CommentTouristPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput | CommentTouristPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput[]
    updateMany?: CommentTouristPointUpdateManyWithWhereWithoutUserClientByClientIdInput | CommentTouristPointUpdateManyWithWhereWithoutUserClientByClientIdInput[]
    deleteMany?: CommentTouristPointScalarWhereInput | CommentTouristPointScalarWhereInput[]
  }

  export type CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput = {
    create?: XOR<CommentCommercialPointCreateWithoutUserClientByClientEmailInput, CommentCommercialPointUncheckedCreateWithoutUserClientByClientEmailInput> | CommentCommercialPointCreateWithoutUserClientByClientEmailInput[] | CommentCommercialPointUncheckedCreateWithoutUserClientByClientEmailInput[]
    connectOrCreate?: CommentCommercialPointCreateOrConnectWithoutUserClientByClientEmailInput | CommentCommercialPointCreateOrConnectWithoutUserClientByClientEmailInput[]
    upsert?: CommentCommercialPointUpsertWithWhereUniqueWithoutUserClientByClientEmailInput | CommentCommercialPointUpsertWithWhereUniqueWithoutUserClientByClientEmailInput[]
    createMany?: CommentCommercialPointCreateManyUserClientByClientEmailInputEnvelope
    set?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    disconnect?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    delete?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    connect?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    update?: CommentCommercialPointUpdateWithWhereUniqueWithoutUserClientByClientEmailInput | CommentCommercialPointUpdateWithWhereUniqueWithoutUserClientByClientEmailInput[]
    updateMany?: CommentCommercialPointUpdateManyWithWhereWithoutUserClientByClientEmailInput | CommentCommercialPointUpdateManyWithWhereWithoutUserClientByClientEmailInput[]
    deleteMany?: CommentCommercialPointScalarWhereInput | CommentCommercialPointScalarWhereInput[]
  }

  export type CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput = {
    create?: XOR<CommentCommercialPointCreateWithoutUserClientByClientIdInput, CommentCommercialPointUncheckedCreateWithoutUserClientByClientIdInput> | CommentCommercialPointCreateWithoutUserClientByClientIdInput[] | CommentCommercialPointUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: CommentCommercialPointCreateOrConnectWithoutUserClientByClientIdInput | CommentCommercialPointCreateOrConnectWithoutUserClientByClientIdInput[]
    upsert?: CommentCommercialPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput | CommentCommercialPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput[]
    createMany?: CommentCommercialPointCreateManyUserClientByClientIdInputEnvelope
    set?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    disconnect?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    delete?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    connect?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    update?: CommentCommercialPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput | CommentCommercialPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput[]
    updateMany?: CommentCommercialPointUpdateManyWithWhereWithoutUserClientByClientIdInput | CommentCommercialPointUpdateManyWithWhereWithoutUserClientByClientIdInput[]
    deleteMany?: CommentCommercialPointScalarWhereInput | CommentCommercialPointScalarWhereInput[]
  }

  export type FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput = {
    create?: XOR<FavoriteCommercialPointCreateWithoutUserClientByClientIdInput, FavoriteCommercialPointUncheckedCreateWithoutUserClientByClientIdInput> | FavoriteCommercialPointCreateWithoutUserClientByClientIdInput[] | FavoriteCommercialPointUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: FavoriteCommercialPointCreateOrConnectWithoutUserClientByClientIdInput | FavoriteCommercialPointCreateOrConnectWithoutUserClientByClientIdInput[]
    upsert?: FavoriteCommercialPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput | FavoriteCommercialPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput[]
    createMany?: FavoriteCommercialPointCreateManyUserClientByClientIdInputEnvelope
    set?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
    disconnect?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
    delete?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
    connect?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
    update?: FavoriteCommercialPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput | FavoriteCommercialPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput[]
    updateMany?: FavoriteCommercialPointUpdateManyWithWhereWithoutUserClientByClientIdInput | FavoriteCommercialPointUpdateManyWithWhereWithoutUserClientByClientIdInput[]
    deleteMany?: FavoriteCommercialPointScalarWhereInput | FavoriteCommercialPointScalarWhereInput[]
  }

  export type FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput = {
    create?: XOR<FavoriteTouristPointCreateWithoutUserClientByClientIdInput, FavoriteTouristPointUncheckedCreateWithoutUserClientByClientIdInput> | FavoriteTouristPointCreateWithoutUserClientByClientIdInput[] | FavoriteTouristPointUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: FavoriteTouristPointCreateOrConnectWithoutUserClientByClientIdInput | FavoriteTouristPointCreateOrConnectWithoutUserClientByClientIdInput[]
    upsert?: FavoriteTouristPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput | FavoriteTouristPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput[]
    createMany?: FavoriteTouristPointCreateManyUserClientByClientIdInputEnvelope
    set?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
    disconnect?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
    delete?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
    connect?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
    update?: FavoriteTouristPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput | FavoriteTouristPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput[]
    updateMany?: FavoriteTouristPointUpdateManyWithWhereWithoutUserClientByClientIdInput | FavoriteTouristPointUpdateManyWithWhereWithoutUserClientByClientIdInput[]
    deleteMany?: FavoriteTouristPointScalarWhereInput | FavoriteTouristPointScalarWhereInput[]
  }

  export type FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput = {
    create?: XOR<FavoriteRoadMapCreateWithoutUserClientByClientIdInput, FavoriteRoadMapUncheckedCreateWithoutUserClientByClientIdInput> | FavoriteRoadMapCreateWithoutUserClientByClientIdInput[] | FavoriteRoadMapUncheckedCreateWithoutUserClientByClientIdInput[]
    connectOrCreate?: FavoriteRoadMapCreateOrConnectWithoutUserClientByClientIdInput | FavoriteRoadMapCreateOrConnectWithoutUserClientByClientIdInput[]
    upsert?: FavoriteRoadMapUpsertWithWhereUniqueWithoutUserClientByClientIdInput | FavoriteRoadMapUpsertWithWhereUniqueWithoutUserClientByClientIdInput[]
    createMany?: FavoriteRoadMapCreateManyUserClientByClientIdInputEnvelope
    set?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
    disconnect?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
    delete?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
    connect?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
    update?: FavoriteRoadMapUpdateWithWhereUniqueWithoutUserClientByClientIdInput | FavoriteRoadMapUpdateWithWhereUniqueWithoutUserClientByClientIdInput[]
    updateMany?: FavoriteRoadMapUpdateManyWithWhereWithoutUserClientByClientIdInput | FavoriteRoadMapUpdateManyWithWhereWithoutUserClientByClientIdInput[]
    deleteMany?: FavoriteRoadMapScalarWhereInput | FavoriteRoadMapScalarWhereInput[]
  }

  export type notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput = {
    create?: XOR<notificationTouristPointCreateWithoutUserNotificationTouristPointByIdClientInput, notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdClientInput> | notificationTouristPointCreateWithoutUserNotificationTouristPointByIdClientInput[] | notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdClientInput[]
    connectOrCreate?: notificationTouristPointCreateOrConnectWithoutUserNotificationTouristPointByIdClientInput | notificationTouristPointCreateOrConnectWithoutUserNotificationTouristPointByIdClientInput[]
    upsert?: notificationTouristPointUpsertWithWhereUniqueWithoutUserNotificationTouristPointByIdClientInput | notificationTouristPointUpsertWithWhereUniqueWithoutUserNotificationTouristPointByIdClientInput[]
    createMany?: notificationTouristPointCreateManyUserNotificationTouristPointByIdClientInputEnvelope
    set?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
    disconnect?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
    delete?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
    connect?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
    update?: notificationTouristPointUpdateWithWhereUniqueWithoutUserNotificationTouristPointByIdClientInput | notificationTouristPointUpdateWithWhereUniqueWithoutUserNotificationTouristPointByIdClientInput[]
    updateMany?: notificationTouristPointUpdateManyWithWhereWithoutUserNotificationTouristPointByIdClientInput | notificationTouristPointUpdateManyWithWhereWithoutUserNotificationTouristPointByIdClientInput[]
    deleteMany?: notificationTouristPointScalarWhereInput | notificationTouristPointScalarWhereInput[]
  }

  export type notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput = {
    create?: XOR<notificationRoadMapCreateWithoutUserNotificationRoadMapByIdClientInput, notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdClientInput> | notificationRoadMapCreateWithoutUserNotificationRoadMapByIdClientInput[] | notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdClientInput[]
    connectOrCreate?: notificationRoadMapCreateOrConnectWithoutUserNotificationRoadMapByIdClientInput | notificationRoadMapCreateOrConnectWithoutUserNotificationRoadMapByIdClientInput[]
    upsert?: notificationRoadMapUpsertWithWhereUniqueWithoutUserNotificationRoadMapByIdClientInput | notificationRoadMapUpsertWithWhereUniqueWithoutUserNotificationRoadMapByIdClientInput[]
    createMany?: notificationRoadMapCreateManyUserNotificationRoadMapByIdClientInputEnvelope
    set?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
    disconnect?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
    delete?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
    connect?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
    update?: notificationRoadMapUpdateWithWhereUniqueWithoutUserNotificationRoadMapByIdClientInput | notificationRoadMapUpdateWithWhereUniqueWithoutUserNotificationRoadMapByIdClientInput[]
    updateMany?: notificationRoadMapUpdateManyWithWhereWithoutUserNotificationRoadMapByIdClientInput | notificationRoadMapUpdateManyWithWhereWithoutUserNotificationRoadMapByIdClientInput[]
    deleteMany?: notificationRoadMapScalarWhereInput | notificationRoadMapScalarWhereInput[]
  }

  export type reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput = {
    create?: XOR<reportRoadMapCreateWithoutUserReportRoadMapByIdUserReportInput, reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdUserReportInput> | reportRoadMapCreateWithoutUserReportRoadMapByIdUserReportInput[] | reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdUserReportInput[]
    connectOrCreate?: reportRoadMapCreateOrConnectWithoutUserReportRoadMapByIdUserReportInput | reportRoadMapCreateOrConnectWithoutUserReportRoadMapByIdUserReportInput[]
    upsert?: reportRoadMapUpsertWithWhereUniqueWithoutUserReportRoadMapByIdUserReportInput | reportRoadMapUpsertWithWhereUniqueWithoutUserReportRoadMapByIdUserReportInput[]
    createMany?: reportRoadMapCreateManyUserReportRoadMapByIdUserReportInputEnvelope
    set?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
    disconnect?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
    delete?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
    connect?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
    update?: reportRoadMapUpdateWithWhereUniqueWithoutUserReportRoadMapByIdUserReportInput | reportRoadMapUpdateWithWhereUniqueWithoutUserReportRoadMapByIdUserReportInput[]
    updateMany?: reportRoadMapUpdateManyWithWhereWithoutUserReportRoadMapByIdUserReportInput | reportRoadMapUpdateManyWithWhereWithoutUserReportRoadMapByIdUserReportInput[]
    deleteMany?: reportRoadMapScalarWhereInput | reportRoadMapScalarWhereInput[]
  }

  export type reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput = {
    create?: XOR<reportCommercialPointCreateWithoutUserReportCommercialPointByIdUserReportInput, reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdUserReportInput> | reportCommercialPointCreateWithoutUserReportCommercialPointByIdUserReportInput[] | reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdUserReportInput[]
    connectOrCreate?: reportCommercialPointCreateOrConnectWithoutUserReportCommercialPointByIdUserReportInput | reportCommercialPointCreateOrConnectWithoutUserReportCommercialPointByIdUserReportInput[]
    upsert?: reportCommercialPointUpsertWithWhereUniqueWithoutUserReportCommercialPointByIdUserReportInput | reportCommercialPointUpsertWithWhereUniqueWithoutUserReportCommercialPointByIdUserReportInput[]
    createMany?: reportCommercialPointCreateManyUserReportCommercialPointByIdUserReportInputEnvelope
    set?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
    disconnect?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
    delete?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
    connect?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
    update?: reportCommercialPointUpdateWithWhereUniqueWithoutUserReportCommercialPointByIdUserReportInput | reportCommercialPointUpdateWithWhereUniqueWithoutUserReportCommercialPointByIdUserReportInput[]
    updateMany?: reportCommercialPointUpdateManyWithWhereWithoutUserReportCommercialPointByIdUserReportInput | reportCommercialPointUpdateManyWithWhereWithoutUserReportCommercialPointByIdUserReportInput[]
    deleteMany?: reportCommercialPointScalarWhereInput | reportCommercialPointScalarWhereInput[]
  }

  export type reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput = {
    create?: XOR<reportTouristPointCreateWithoutUserReportTouristPointByIdUserReportInput, reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdUserReportInput> | reportTouristPointCreateWithoutUserReportTouristPointByIdUserReportInput[] | reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdUserReportInput[]
    connectOrCreate?: reportTouristPointCreateOrConnectWithoutUserReportTouristPointByIdUserReportInput | reportTouristPointCreateOrConnectWithoutUserReportTouristPointByIdUserReportInput[]
    upsert?: reportTouristPointUpsertWithWhereUniqueWithoutUserReportTouristPointByIdUserReportInput | reportTouristPointUpsertWithWhereUniqueWithoutUserReportTouristPointByIdUserReportInput[]
    createMany?: reportTouristPointCreateManyUserReportTouristPointByIdUserReportInputEnvelope
    set?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
    disconnect?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
    delete?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
    connect?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
    update?: reportTouristPointUpdateWithWhereUniqueWithoutUserReportTouristPointByIdUserReportInput | reportTouristPointUpdateWithWhereUniqueWithoutUserReportTouristPointByIdUserReportInput[]
    updateMany?: reportTouristPointUpdateManyWithWhereWithoutUserReportTouristPointByIdUserReportInput | reportTouristPointUpdateManyWithWhereWithoutUserReportTouristPointByIdUserReportInput[]
    deleteMany?: reportTouristPointScalarWhereInput | reportTouristPointScalarWhereInput[]
  }

  export type Ponto_ComercialCreateNestedManyWithoutUser_BusinessInput = {
    create?: XOR<Ponto_ComercialCreateWithoutUser_BusinessInput, Ponto_ComercialUncheckedCreateWithoutUser_BusinessInput> | Ponto_ComercialCreateWithoutUser_BusinessInput[] | Ponto_ComercialUncheckedCreateWithoutUser_BusinessInput[]
    connectOrCreate?: Ponto_ComercialCreateOrConnectWithoutUser_BusinessInput | Ponto_ComercialCreateOrConnectWithoutUser_BusinessInput[]
    createMany?: Ponto_ComercialCreateManyUser_BusinessInputEnvelope
    connect?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
  }

  export type Ponto_ComercialUncheckedCreateNestedManyWithoutUser_BusinessInput = {
    create?: XOR<Ponto_ComercialCreateWithoutUser_BusinessInput, Ponto_ComercialUncheckedCreateWithoutUser_BusinessInput> | Ponto_ComercialCreateWithoutUser_BusinessInput[] | Ponto_ComercialUncheckedCreateWithoutUser_BusinessInput[]
    connectOrCreate?: Ponto_ComercialCreateOrConnectWithoutUser_BusinessInput | Ponto_ComercialCreateOrConnectWithoutUser_BusinessInput[]
    createMany?: Ponto_ComercialCreateManyUser_BusinessInputEnvelope
    connect?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
  }

  export type Ponto_ComercialUpdateManyWithoutUser_BusinessNestedInput = {
    create?: XOR<Ponto_ComercialCreateWithoutUser_BusinessInput, Ponto_ComercialUncheckedCreateWithoutUser_BusinessInput> | Ponto_ComercialCreateWithoutUser_BusinessInput[] | Ponto_ComercialUncheckedCreateWithoutUser_BusinessInput[]
    connectOrCreate?: Ponto_ComercialCreateOrConnectWithoutUser_BusinessInput | Ponto_ComercialCreateOrConnectWithoutUser_BusinessInput[]
    upsert?: Ponto_ComercialUpsertWithWhereUniqueWithoutUser_BusinessInput | Ponto_ComercialUpsertWithWhereUniqueWithoutUser_BusinessInput[]
    createMany?: Ponto_ComercialCreateManyUser_BusinessInputEnvelope
    set?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
    disconnect?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
    delete?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
    connect?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
    update?: Ponto_ComercialUpdateWithWhereUniqueWithoutUser_BusinessInput | Ponto_ComercialUpdateWithWhereUniqueWithoutUser_BusinessInput[]
    updateMany?: Ponto_ComercialUpdateManyWithWhereWithoutUser_BusinessInput | Ponto_ComercialUpdateManyWithWhereWithoutUser_BusinessInput[]
    deleteMany?: Ponto_ComercialScalarWhereInput | Ponto_ComercialScalarWhereInput[]
  }

  export type Ponto_ComercialUncheckedUpdateManyWithoutUser_BusinessNestedInput = {
    create?: XOR<Ponto_ComercialCreateWithoutUser_BusinessInput, Ponto_ComercialUncheckedCreateWithoutUser_BusinessInput> | Ponto_ComercialCreateWithoutUser_BusinessInput[] | Ponto_ComercialUncheckedCreateWithoutUser_BusinessInput[]
    connectOrCreate?: Ponto_ComercialCreateOrConnectWithoutUser_BusinessInput | Ponto_ComercialCreateOrConnectWithoutUser_BusinessInput[]
    upsert?: Ponto_ComercialUpsertWithWhereUniqueWithoutUser_BusinessInput | Ponto_ComercialUpsertWithWhereUniqueWithoutUser_BusinessInput[]
    createMany?: Ponto_ComercialCreateManyUser_BusinessInputEnvelope
    set?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
    disconnect?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
    delete?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
    connect?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
    update?: Ponto_ComercialUpdateWithWhereUniqueWithoutUser_BusinessInput | Ponto_ComercialUpdateWithWhereUniqueWithoutUser_BusinessInput[]
    updateMany?: Ponto_ComercialUpdateManyWithWhereWithoutUser_BusinessInput | Ponto_ComercialUpdateManyWithWhereWithoutUser_BusinessInput[]
    deleteMany?: Ponto_ComercialScalarWhereInput | Ponto_ComercialScalarWhereInput[]
  }

  export type User_BusinessCreateNestedOneWithoutPontosComerciaisInput = {
    create?: XOR<User_BusinessCreateWithoutPontosComerciaisInput, User_BusinessUncheckedCreateWithoutPontosComerciaisInput>
    connectOrCreate?: User_BusinessCreateOrConnectWithoutPontosComerciaisInput
    connect?: User_BusinessWhereUniqueInput
  }

  export type AvaliationCommercialPointCreateNestedManyWithoutUserCommercialPointByIdCommercialPointInput = {
    create?: XOR<AvaliationCommercialPointCreateWithoutUserCommercialPointByIdCommercialPointInput, AvaliationCommercialPointUncheckedCreateWithoutUserCommercialPointByIdCommercialPointInput> | AvaliationCommercialPointCreateWithoutUserCommercialPointByIdCommercialPointInput[] | AvaliationCommercialPointUncheckedCreateWithoutUserCommercialPointByIdCommercialPointInput[]
    connectOrCreate?: AvaliationCommercialPointCreateOrConnectWithoutUserCommercialPointByIdCommercialPointInput | AvaliationCommercialPointCreateOrConnectWithoutUserCommercialPointByIdCommercialPointInput[]
    createMany?: AvaliationCommercialPointCreateManyUserCommercialPointByIdCommercialPointInputEnvelope
    connect?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
  }

  export type CommentCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput = {
    create?: XOR<CommentCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput, CommentCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput> | CommentCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput[] | CommentCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput[]
    connectOrCreate?: CommentCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput | CommentCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput[]
    createMany?: CommentCommercialPointCreateManyUserCommercialPointByCommercialPointIdInputEnvelope
    connect?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
  }

  export type FavoriteCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput = {
    create?: XOR<FavoriteCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput, FavoriteCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput> | FavoriteCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput[] | FavoriteCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput[]
    connectOrCreate?: FavoriteCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput | FavoriteCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput[]
    createMany?: FavoriteCommercialPointCreateManyUserCommercialPointByCommercialPointIdInputEnvelope
    connect?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
  }

  export type ImageCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput = {
    create?: XOR<ImageCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput, ImageCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput> | ImageCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput[] | ImageCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput[]
    connectOrCreate?: ImageCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput | ImageCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput[]
    createMany?: ImageCommercialPointCreateManyUserCommercialPointByCommercialPointIdInputEnvelope
    connect?: ImageCommercialPointWhereUniqueInput | ImageCommercialPointWhereUniqueInput[]
  }

  export type Travel_Road_MapCreateNestedManyWithoutPontosComerciaisRelationInput = {
    create?: XOR<Travel_Road_MapCreateWithoutPontosComerciaisRelationInput, Travel_Road_MapUncheckedCreateWithoutPontosComerciaisRelationInput> | Travel_Road_MapCreateWithoutPontosComerciaisRelationInput[] | Travel_Road_MapUncheckedCreateWithoutPontosComerciaisRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutPontosComerciaisRelationInput | Travel_Road_MapCreateOrConnectWithoutPontosComerciaisRelationInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
  }

  export type reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdCommercialPointInput = {
    create?: XOR<reportCommercialPointCreateWithoutUserReportCommercialPointByIdCommercialPointInput, reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdCommercialPointInput> | reportCommercialPointCreateWithoutUserReportCommercialPointByIdCommercialPointInput[] | reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdCommercialPointInput[]
    connectOrCreate?: reportCommercialPointCreateOrConnectWithoutUserReportCommercialPointByIdCommercialPointInput | reportCommercialPointCreateOrConnectWithoutUserReportCommercialPointByIdCommercialPointInput[]
    createMany?: reportCommercialPointCreateManyUserReportCommercialPointByIdCommercialPointInputEnvelope
    connect?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
  }

  export type AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByIdCommercialPointInput = {
    create?: XOR<AvaliationCommercialPointCreateWithoutUserCommercialPointByIdCommercialPointInput, AvaliationCommercialPointUncheckedCreateWithoutUserCommercialPointByIdCommercialPointInput> | AvaliationCommercialPointCreateWithoutUserCommercialPointByIdCommercialPointInput[] | AvaliationCommercialPointUncheckedCreateWithoutUserCommercialPointByIdCommercialPointInput[]
    connectOrCreate?: AvaliationCommercialPointCreateOrConnectWithoutUserCommercialPointByIdCommercialPointInput | AvaliationCommercialPointCreateOrConnectWithoutUserCommercialPointByIdCommercialPointInput[]
    createMany?: AvaliationCommercialPointCreateManyUserCommercialPointByIdCommercialPointInputEnvelope
    connect?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
  }

  export type CommentCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput = {
    create?: XOR<CommentCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput, CommentCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput> | CommentCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput[] | CommentCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput[]
    connectOrCreate?: CommentCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput | CommentCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput[]
    createMany?: CommentCommercialPointCreateManyUserCommercialPointByCommercialPointIdInputEnvelope
    connect?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
  }

  export type FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput = {
    create?: XOR<FavoriteCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput, FavoriteCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput> | FavoriteCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput[] | FavoriteCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput[]
    connectOrCreate?: FavoriteCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput | FavoriteCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput[]
    createMany?: FavoriteCommercialPointCreateManyUserCommercialPointByCommercialPointIdInputEnvelope
    connect?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
  }

  export type ImageCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput = {
    create?: XOR<ImageCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput, ImageCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput> | ImageCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput[] | ImageCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput[]
    connectOrCreate?: ImageCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput | ImageCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput[]
    createMany?: ImageCommercialPointCreateManyUserCommercialPointByCommercialPointIdInputEnvelope
    connect?: ImageCommercialPointWhereUniqueInput | ImageCommercialPointWhereUniqueInput[]
  }

  export type Travel_Road_MapUncheckedCreateNestedManyWithoutPontosComerciaisRelationInput = {
    create?: XOR<Travel_Road_MapCreateWithoutPontosComerciaisRelationInput, Travel_Road_MapUncheckedCreateWithoutPontosComerciaisRelationInput> | Travel_Road_MapCreateWithoutPontosComerciaisRelationInput[] | Travel_Road_MapUncheckedCreateWithoutPontosComerciaisRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutPontosComerciaisRelationInput | Travel_Road_MapCreateOrConnectWithoutPontosComerciaisRelationInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
  }

  export type reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdCommercialPointInput = {
    create?: XOR<reportCommercialPointCreateWithoutUserReportCommercialPointByIdCommercialPointInput, reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdCommercialPointInput> | reportCommercialPointCreateWithoutUserReportCommercialPointByIdCommercialPointInput[] | reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdCommercialPointInput[]
    connectOrCreate?: reportCommercialPointCreateOrConnectWithoutUserReportCommercialPointByIdCommercialPointInput | reportCommercialPointCreateOrConnectWithoutUserReportCommercialPointByIdCommercialPointInput[]
    createMany?: reportCommercialPointCreateManyUserReportCommercialPointByIdCommercialPointInputEnvelope
    connect?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type User_BusinessUpdateOneRequiredWithoutPontosComerciaisNestedInput = {
    create?: XOR<User_BusinessCreateWithoutPontosComerciaisInput, User_BusinessUncheckedCreateWithoutPontosComerciaisInput>
    connectOrCreate?: User_BusinessCreateOrConnectWithoutPontosComerciaisInput
    upsert?: User_BusinessUpsertWithoutPontosComerciaisInput
    connect?: User_BusinessWhereUniqueInput
    update?: XOR<XOR<User_BusinessUpdateToOneWithWhereWithoutPontosComerciaisInput, User_BusinessUpdateWithoutPontosComerciaisInput>, User_BusinessUncheckedUpdateWithoutPontosComerciaisInput>
  }

  export type AvaliationCommercialPointUpdateManyWithoutUserCommercialPointByIdCommercialPointNestedInput = {
    create?: XOR<AvaliationCommercialPointCreateWithoutUserCommercialPointByIdCommercialPointInput, AvaliationCommercialPointUncheckedCreateWithoutUserCommercialPointByIdCommercialPointInput> | AvaliationCommercialPointCreateWithoutUserCommercialPointByIdCommercialPointInput[] | AvaliationCommercialPointUncheckedCreateWithoutUserCommercialPointByIdCommercialPointInput[]
    connectOrCreate?: AvaliationCommercialPointCreateOrConnectWithoutUserCommercialPointByIdCommercialPointInput | AvaliationCommercialPointCreateOrConnectWithoutUserCommercialPointByIdCommercialPointInput[]
    upsert?: AvaliationCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByIdCommercialPointInput | AvaliationCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByIdCommercialPointInput[]
    createMany?: AvaliationCommercialPointCreateManyUserCommercialPointByIdCommercialPointInputEnvelope
    set?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    disconnect?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    delete?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    connect?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    update?: AvaliationCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByIdCommercialPointInput | AvaliationCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByIdCommercialPointInput[]
    updateMany?: AvaliationCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByIdCommercialPointInput | AvaliationCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByIdCommercialPointInput[]
    deleteMany?: AvaliationCommercialPointScalarWhereInput | AvaliationCommercialPointScalarWhereInput[]
  }

  export type CommentCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput = {
    create?: XOR<CommentCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput, CommentCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput> | CommentCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput[] | CommentCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput[]
    connectOrCreate?: CommentCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput | CommentCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput[]
    upsert?: CommentCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput | CommentCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput[]
    createMany?: CommentCommercialPointCreateManyUserCommercialPointByCommercialPointIdInputEnvelope
    set?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    disconnect?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    delete?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    connect?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    update?: CommentCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput | CommentCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput[]
    updateMany?: CommentCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByCommercialPointIdInput | CommentCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByCommercialPointIdInput[]
    deleteMany?: CommentCommercialPointScalarWhereInput | CommentCommercialPointScalarWhereInput[]
  }

  export type FavoriteCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput = {
    create?: XOR<FavoriteCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput, FavoriteCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput> | FavoriteCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput[] | FavoriteCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput[]
    connectOrCreate?: FavoriteCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput | FavoriteCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput[]
    upsert?: FavoriteCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput | FavoriteCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput[]
    createMany?: FavoriteCommercialPointCreateManyUserCommercialPointByCommercialPointIdInputEnvelope
    set?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
    disconnect?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
    delete?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
    connect?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
    update?: FavoriteCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput | FavoriteCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput[]
    updateMany?: FavoriteCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByCommercialPointIdInput | FavoriteCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByCommercialPointIdInput[]
    deleteMany?: FavoriteCommercialPointScalarWhereInput | FavoriteCommercialPointScalarWhereInput[]
  }

  export type ImageCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput = {
    create?: XOR<ImageCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput, ImageCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput> | ImageCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput[] | ImageCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput[]
    connectOrCreate?: ImageCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput | ImageCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput[]
    upsert?: ImageCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput | ImageCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput[]
    createMany?: ImageCommercialPointCreateManyUserCommercialPointByCommercialPointIdInputEnvelope
    set?: ImageCommercialPointWhereUniqueInput | ImageCommercialPointWhereUniqueInput[]
    disconnect?: ImageCommercialPointWhereUniqueInput | ImageCommercialPointWhereUniqueInput[]
    delete?: ImageCommercialPointWhereUniqueInput | ImageCommercialPointWhereUniqueInput[]
    connect?: ImageCommercialPointWhereUniqueInput | ImageCommercialPointWhereUniqueInput[]
    update?: ImageCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput | ImageCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput[]
    updateMany?: ImageCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByCommercialPointIdInput | ImageCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByCommercialPointIdInput[]
    deleteMany?: ImageCommercialPointScalarWhereInput | ImageCommercialPointScalarWhereInput[]
  }

  export type Travel_Road_MapUpdateManyWithoutPontosComerciaisRelationNestedInput = {
    create?: XOR<Travel_Road_MapCreateWithoutPontosComerciaisRelationInput, Travel_Road_MapUncheckedCreateWithoutPontosComerciaisRelationInput> | Travel_Road_MapCreateWithoutPontosComerciaisRelationInput[] | Travel_Road_MapUncheckedCreateWithoutPontosComerciaisRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutPontosComerciaisRelationInput | Travel_Road_MapCreateOrConnectWithoutPontosComerciaisRelationInput[]
    upsert?: Travel_Road_MapUpsertWithWhereUniqueWithoutPontosComerciaisRelationInput | Travel_Road_MapUpsertWithWhereUniqueWithoutPontosComerciaisRelationInput[]
    set?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    disconnect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    delete?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    update?: Travel_Road_MapUpdateWithWhereUniqueWithoutPontosComerciaisRelationInput | Travel_Road_MapUpdateWithWhereUniqueWithoutPontosComerciaisRelationInput[]
    updateMany?: Travel_Road_MapUpdateManyWithWhereWithoutPontosComerciaisRelationInput | Travel_Road_MapUpdateManyWithWhereWithoutPontosComerciaisRelationInput[]
    deleteMany?: Travel_Road_MapScalarWhereInput | Travel_Road_MapScalarWhereInput[]
  }

  export type reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdCommercialPointNestedInput = {
    create?: XOR<reportCommercialPointCreateWithoutUserReportCommercialPointByIdCommercialPointInput, reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdCommercialPointInput> | reportCommercialPointCreateWithoutUserReportCommercialPointByIdCommercialPointInput[] | reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdCommercialPointInput[]
    connectOrCreate?: reportCommercialPointCreateOrConnectWithoutUserReportCommercialPointByIdCommercialPointInput | reportCommercialPointCreateOrConnectWithoutUserReportCommercialPointByIdCommercialPointInput[]
    upsert?: reportCommercialPointUpsertWithWhereUniqueWithoutUserReportCommercialPointByIdCommercialPointInput | reportCommercialPointUpsertWithWhereUniqueWithoutUserReportCommercialPointByIdCommercialPointInput[]
    createMany?: reportCommercialPointCreateManyUserReportCommercialPointByIdCommercialPointInputEnvelope
    set?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
    disconnect?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
    delete?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
    connect?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
    update?: reportCommercialPointUpdateWithWhereUniqueWithoutUserReportCommercialPointByIdCommercialPointInput | reportCommercialPointUpdateWithWhereUniqueWithoutUserReportCommercialPointByIdCommercialPointInput[]
    updateMany?: reportCommercialPointUpdateManyWithWhereWithoutUserReportCommercialPointByIdCommercialPointInput | reportCommercialPointUpdateManyWithWhereWithoutUserReportCommercialPointByIdCommercialPointInput[]
    deleteMany?: reportCommercialPointScalarWhereInput | reportCommercialPointScalarWhereInput[]
  }

  export type AvaliationCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByIdCommercialPointNestedInput = {
    create?: XOR<AvaliationCommercialPointCreateWithoutUserCommercialPointByIdCommercialPointInput, AvaliationCommercialPointUncheckedCreateWithoutUserCommercialPointByIdCommercialPointInput> | AvaliationCommercialPointCreateWithoutUserCommercialPointByIdCommercialPointInput[] | AvaliationCommercialPointUncheckedCreateWithoutUserCommercialPointByIdCommercialPointInput[]
    connectOrCreate?: AvaliationCommercialPointCreateOrConnectWithoutUserCommercialPointByIdCommercialPointInput | AvaliationCommercialPointCreateOrConnectWithoutUserCommercialPointByIdCommercialPointInput[]
    upsert?: AvaliationCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByIdCommercialPointInput | AvaliationCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByIdCommercialPointInput[]
    createMany?: AvaliationCommercialPointCreateManyUserCommercialPointByIdCommercialPointInputEnvelope
    set?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    disconnect?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    delete?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    connect?: AvaliationCommercialPointWhereUniqueInput | AvaliationCommercialPointWhereUniqueInput[]
    update?: AvaliationCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByIdCommercialPointInput | AvaliationCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByIdCommercialPointInput[]
    updateMany?: AvaliationCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByIdCommercialPointInput | AvaliationCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByIdCommercialPointInput[]
    deleteMany?: AvaliationCommercialPointScalarWhereInput | AvaliationCommercialPointScalarWhereInput[]
  }

  export type CommentCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput = {
    create?: XOR<CommentCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput, CommentCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput> | CommentCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput[] | CommentCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput[]
    connectOrCreate?: CommentCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput | CommentCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput[]
    upsert?: CommentCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput | CommentCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput[]
    createMany?: CommentCommercialPointCreateManyUserCommercialPointByCommercialPointIdInputEnvelope
    set?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    disconnect?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    delete?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    connect?: CommentCommercialPointWhereUniqueInput | CommentCommercialPointWhereUniqueInput[]
    update?: CommentCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput | CommentCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput[]
    updateMany?: CommentCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByCommercialPointIdInput | CommentCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByCommercialPointIdInput[]
    deleteMany?: CommentCommercialPointScalarWhereInput | CommentCommercialPointScalarWhereInput[]
  }

  export type FavoriteCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput = {
    create?: XOR<FavoriteCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput, FavoriteCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput> | FavoriteCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput[] | FavoriteCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput[]
    connectOrCreate?: FavoriteCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput | FavoriteCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput[]
    upsert?: FavoriteCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput | FavoriteCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput[]
    createMany?: FavoriteCommercialPointCreateManyUserCommercialPointByCommercialPointIdInputEnvelope
    set?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
    disconnect?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
    delete?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
    connect?: FavoriteCommercialPointWhereUniqueInput | FavoriteCommercialPointWhereUniqueInput[]
    update?: FavoriteCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput | FavoriteCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput[]
    updateMany?: FavoriteCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByCommercialPointIdInput | FavoriteCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByCommercialPointIdInput[]
    deleteMany?: FavoriteCommercialPointScalarWhereInput | FavoriteCommercialPointScalarWhereInput[]
  }

  export type ImageCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput = {
    create?: XOR<ImageCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput, ImageCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput> | ImageCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput[] | ImageCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput[]
    connectOrCreate?: ImageCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput | ImageCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput[]
    upsert?: ImageCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput | ImageCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput[]
    createMany?: ImageCommercialPointCreateManyUserCommercialPointByCommercialPointIdInputEnvelope
    set?: ImageCommercialPointWhereUniqueInput | ImageCommercialPointWhereUniqueInput[]
    disconnect?: ImageCommercialPointWhereUniqueInput | ImageCommercialPointWhereUniqueInput[]
    delete?: ImageCommercialPointWhereUniqueInput | ImageCommercialPointWhereUniqueInput[]
    connect?: ImageCommercialPointWhereUniqueInput | ImageCommercialPointWhereUniqueInput[]
    update?: ImageCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput | ImageCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput[]
    updateMany?: ImageCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByCommercialPointIdInput | ImageCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByCommercialPointIdInput[]
    deleteMany?: ImageCommercialPointScalarWhereInput | ImageCommercialPointScalarWhereInput[]
  }

  export type Travel_Road_MapUncheckedUpdateManyWithoutPontosComerciaisRelationNestedInput = {
    create?: XOR<Travel_Road_MapCreateWithoutPontosComerciaisRelationInput, Travel_Road_MapUncheckedCreateWithoutPontosComerciaisRelationInput> | Travel_Road_MapCreateWithoutPontosComerciaisRelationInput[] | Travel_Road_MapUncheckedCreateWithoutPontosComerciaisRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutPontosComerciaisRelationInput | Travel_Road_MapCreateOrConnectWithoutPontosComerciaisRelationInput[]
    upsert?: Travel_Road_MapUpsertWithWhereUniqueWithoutPontosComerciaisRelationInput | Travel_Road_MapUpsertWithWhereUniqueWithoutPontosComerciaisRelationInput[]
    set?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    disconnect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    delete?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    update?: Travel_Road_MapUpdateWithWhereUniqueWithoutPontosComerciaisRelationInput | Travel_Road_MapUpdateWithWhereUniqueWithoutPontosComerciaisRelationInput[]
    updateMany?: Travel_Road_MapUpdateManyWithWhereWithoutPontosComerciaisRelationInput | Travel_Road_MapUpdateManyWithWhereWithoutPontosComerciaisRelationInput[]
    deleteMany?: Travel_Road_MapScalarWhereInput | Travel_Road_MapScalarWhereInput[]
  }

  export type reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdCommercialPointNestedInput = {
    create?: XOR<reportCommercialPointCreateWithoutUserReportCommercialPointByIdCommercialPointInput, reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdCommercialPointInput> | reportCommercialPointCreateWithoutUserReportCommercialPointByIdCommercialPointInput[] | reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdCommercialPointInput[]
    connectOrCreate?: reportCommercialPointCreateOrConnectWithoutUserReportCommercialPointByIdCommercialPointInput | reportCommercialPointCreateOrConnectWithoutUserReportCommercialPointByIdCommercialPointInput[]
    upsert?: reportCommercialPointUpsertWithWhereUniqueWithoutUserReportCommercialPointByIdCommercialPointInput | reportCommercialPointUpsertWithWhereUniqueWithoutUserReportCommercialPointByIdCommercialPointInput[]
    createMany?: reportCommercialPointCreateManyUserReportCommercialPointByIdCommercialPointInputEnvelope
    set?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
    disconnect?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
    delete?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
    connect?: reportCommercialPointWhereUniqueInput | reportCommercialPointWhereUniqueInput[]
    update?: reportCommercialPointUpdateWithWhereUniqueWithoutUserReportCommercialPointByIdCommercialPointInput | reportCommercialPointUpdateWithWhereUniqueWithoutUserReportCommercialPointByIdCommercialPointInput[]
    updateMany?: reportCommercialPointUpdateManyWithWhereWithoutUserReportCommercialPointByIdCommercialPointInput | reportCommercialPointUpdateManyWithWhereWithoutUserReportCommercialPointByIdCommercialPointInput[]
    deleteMany?: reportCommercialPointScalarWhereInput | reportCommercialPointScalarWhereInput[]
  }

  export type AvaliationTouristPointCreateNestedManyWithoutUserTouristPointByIdTouristPointInput = {
    create?: XOR<AvaliationTouristPointCreateWithoutUserTouristPointByIdTouristPointInput, AvaliationTouristPointUncheckedCreateWithoutUserTouristPointByIdTouristPointInput> | AvaliationTouristPointCreateWithoutUserTouristPointByIdTouristPointInput[] | AvaliationTouristPointUncheckedCreateWithoutUserTouristPointByIdTouristPointInput[]
    connectOrCreate?: AvaliationTouristPointCreateOrConnectWithoutUserTouristPointByIdTouristPointInput | AvaliationTouristPointCreateOrConnectWithoutUserTouristPointByIdTouristPointInput[]
    createMany?: AvaliationTouristPointCreateManyUserTouristPointByIdTouristPointInputEnvelope
    connect?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
  }

  export type CommentTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput = {
    create?: XOR<CommentTouristPointCreateWithoutUserTouristPointByTouristPointIdInput, CommentTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput> | CommentTouristPointCreateWithoutUserTouristPointByTouristPointIdInput[] | CommentTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput[]
    connectOrCreate?: CommentTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput | CommentTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput[]
    createMany?: CommentTouristPointCreateManyUserTouristPointByTouristPointIdInputEnvelope
    connect?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
  }

  export type FavoriteTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput = {
    create?: XOR<FavoriteTouristPointCreateWithoutUserTouristPointByTouristPointIdInput, FavoriteTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput> | FavoriteTouristPointCreateWithoutUserTouristPointByTouristPointIdInput[] | FavoriteTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput[]
    connectOrCreate?: FavoriteTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput | FavoriteTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput[]
    createMany?: FavoriteTouristPointCreateManyUserTouristPointByTouristPointIdInputEnvelope
    connect?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
  }

  export type ImageTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput = {
    create?: XOR<ImageTouristPointCreateWithoutUserTouristPointByTouristPointIdInput, ImageTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput> | ImageTouristPointCreateWithoutUserTouristPointByTouristPointIdInput[] | ImageTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput[]
    connectOrCreate?: ImageTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput | ImageTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput[]
    createMany?: ImageTouristPointCreateManyUserTouristPointByTouristPointIdInputEnvelope
    connect?: ImageTouristPointWhereUniqueInput | ImageTouristPointWhereUniqueInput[]
  }

  export type Travel_Road_MapCreateNestedManyWithoutPontosTuristicosRelationInput = {
    create?: XOR<Travel_Road_MapCreateWithoutPontosTuristicosRelationInput, Travel_Road_MapUncheckedCreateWithoutPontosTuristicosRelationInput> | Travel_Road_MapCreateWithoutPontosTuristicosRelationInput[] | Travel_Road_MapUncheckedCreateWithoutPontosTuristicosRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutPontosTuristicosRelationInput | Travel_Road_MapCreateOrConnectWithoutPontosTuristicosRelationInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
  }

  export type reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdTouristPointInput = {
    create?: XOR<reportTouristPointCreateWithoutUserReportTouristPointByIdTouristPointInput, reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdTouristPointInput> | reportTouristPointCreateWithoutUserReportTouristPointByIdTouristPointInput[] | reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdTouristPointInput[]
    connectOrCreate?: reportTouristPointCreateOrConnectWithoutUserReportTouristPointByIdTouristPointInput | reportTouristPointCreateOrConnectWithoutUserReportTouristPointByIdTouristPointInput[]
    createMany?: reportTouristPointCreateManyUserReportTouristPointByIdTouristPointInputEnvelope
    connect?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
  }

  export type notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdTouristPointInput = {
    create?: XOR<notificationTouristPointCreateWithoutUserNotificationTouristPointByIdTouristPointInput, notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdTouristPointInput> | notificationTouristPointCreateWithoutUserNotificationTouristPointByIdTouristPointInput[] | notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdTouristPointInput[]
    connectOrCreate?: notificationTouristPointCreateOrConnectWithoutUserNotificationTouristPointByIdTouristPointInput | notificationTouristPointCreateOrConnectWithoutUserNotificationTouristPointByIdTouristPointInput[]
    createMany?: notificationTouristPointCreateManyUserNotificationTouristPointByIdTouristPointInputEnvelope
    connect?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
  }

  export type AvaliationTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByIdTouristPointInput = {
    create?: XOR<AvaliationTouristPointCreateWithoutUserTouristPointByIdTouristPointInput, AvaliationTouristPointUncheckedCreateWithoutUserTouristPointByIdTouristPointInput> | AvaliationTouristPointCreateWithoutUserTouristPointByIdTouristPointInput[] | AvaliationTouristPointUncheckedCreateWithoutUserTouristPointByIdTouristPointInput[]
    connectOrCreate?: AvaliationTouristPointCreateOrConnectWithoutUserTouristPointByIdTouristPointInput | AvaliationTouristPointCreateOrConnectWithoutUserTouristPointByIdTouristPointInput[]
    createMany?: AvaliationTouristPointCreateManyUserTouristPointByIdTouristPointInputEnvelope
    connect?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
  }

  export type CommentTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput = {
    create?: XOR<CommentTouristPointCreateWithoutUserTouristPointByTouristPointIdInput, CommentTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput> | CommentTouristPointCreateWithoutUserTouristPointByTouristPointIdInput[] | CommentTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput[]
    connectOrCreate?: CommentTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput | CommentTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput[]
    createMany?: CommentTouristPointCreateManyUserTouristPointByTouristPointIdInputEnvelope
    connect?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
  }

  export type FavoriteTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput = {
    create?: XOR<FavoriteTouristPointCreateWithoutUserTouristPointByTouristPointIdInput, FavoriteTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput> | FavoriteTouristPointCreateWithoutUserTouristPointByTouristPointIdInput[] | FavoriteTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput[]
    connectOrCreate?: FavoriteTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput | FavoriteTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput[]
    createMany?: FavoriteTouristPointCreateManyUserTouristPointByTouristPointIdInputEnvelope
    connect?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
  }

  export type ImageTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput = {
    create?: XOR<ImageTouristPointCreateWithoutUserTouristPointByTouristPointIdInput, ImageTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput> | ImageTouristPointCreateWithoutUserTouristPointByTouristPointIdInput[] | ImageTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput[]
    connectOrCreate?: ImageTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput | ImageTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput[]
    createMany?: ImageTouristPointCreateManyUserTouristPointByTouristPointIdInputEnvelope
    connect?: ImageTouristPointWhereUniqueInput | ImageTouristPointWhereUniqueInput[]
  }

  export type Travel_Road_MapUncheckedCreateNestedManyWithoutPontosTuristicosRelationInput = {
    create?: XOR<Travel_Road_MapCreateWithoutPontosTuristicosRelationInput, Travel_Road_MapUncheckedCreateWithoutPontosTuristicosRelationInput> | Travel_Road_MapCreateWithoutPontosTuristicosRelationInput[] | Travel_Road_MapUncheckedCreateWithoutPontosTuristicosRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutPontosTuristicosRelationInput | Travel_Road_MapCreateOrConnectWithoutPontosTuristicosRelationInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
  }

  export type reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdTouristPointInput = {
    create?: XOR<reportTouristPointCreateWithoutUserReportTouristPointByIdTouristPointInput, reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdTouristPointInput> | reportTouristPointCreateWithoutUserReportTouristPointByIdTouristPointInput[] | reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdTouristPointInput[]
    connectOrCreate?: reportTouristPointCreateOrConnectWithoutUserReportTouristPointByIdTouristPointInput | reportTouristPointCreateOrConnectWithoutUserReportTouristPointByIdTouristPointInput[]
    createMany?: reportTouristPointCreateManyUserReportTouristPointByIdTouristPointInputEnvelope
    connect?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
  }

  export type notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdTouristPointInput = {
    create?: XOR<notificationTouristPointCreateWithoutUserNotificationTouristPointByIdTouristPointInput, notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdTouristPointInput> | notificationTouristPointCreateWithoutUserNotificationTouristPointByIdTouristPointInput[] | notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdTouristPointInput[]
    connectOrCreate?: notificationTouristPointCreateOrConnectWithoutUserNotificationTouristPointByIdTouristPointInput | notificationTouristPointCreateOrConnectWithoutUserNotificationTouristPointByIdTouristPointInput[]
    createMany?: notificationTouristPointCreateManyUserNotificationTouristPointByIdTouristPointInputEnvelope
    connect?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
  }

  export type AvaliationTouristPointUpdateManyWithoutUserTouristPointByIdTouristPointNestedInput = {
    create?: XOR<AvaliationTouristPointCreateWithoutUserTouristPointByIdTouristPointInput, AvaliationTouristPointUncheckedCreateWithoutUserTouristPointByIdTouristPointInput> | AvaliationTouristPointCreateWithoutUserTouristPointByIdTouristPointInput[] | AvaliationTouristPointUncheckedCreateWithoutUserTouristPointByIdTouristPointInput[]
    connectOrCreate?: AvaliationTouristPointCreateOrConnectWithoutUserTouristPointByIdTouristPointInput | AvaliationTouristPointCreateOrConnectWithoutUserTouristPointByIdTouristPointInput[]
    upsert?: AvaliationTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByIdTouristPointInput | AvaliationTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByIdTouristPointInput[]
    createMany?: AvaliationTouristPointCreateManyUserTouristPointByIdTouristPointInputEnvelope
    set?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    disconnect?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    delete?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    connect?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    update?: AvaliationTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByIdTouristPointInput | AvaliationTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByIdTouristPointInput[]
    updateMany?: AvaliationTouristPointUpdateManyWithWhereWithoutUserTouristPointByIdTouristPointInput | AvaliationTouristPointUpdateManyWithWhereWithoutUserTouristPointByIdTouristPointInput[]
    deleteMany?: AvaliationTouristPointScalarWhereInput | AvaliationTouristPointScalarWhereInput[]
  }

  export type CommentTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput = {
    create?: XOR<CommentTouristPointCreateWithoutUserTouristPointByTouristPointIdInput, CommentTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput> | CommentTouristPointCreateWithoutUserTouristPointByTouristPointIdInput[] | CommentTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput[]
    connectOrCreate?: CommentTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput | CommentTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput[]
    upsert?: CommentTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput | CommentTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput[]
    createMany?: CommentTouristPointCreateManyUserTouristPointByTouristPointIdInputEnvelope
    set?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    disconnect?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    delete?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    connect?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    update?: CommentTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput | CommentTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput[]
    updateMany?: CommentTouristPointUpdateManyWithWhereWithoutUserTouristPointByTouristPointIdInput | CommentTouristPointUpdateManyWithWhereWithoutUserTouristPointByTouristPointIdInput[]
    deleteMany?: CommentTouristPointScalarWhereInput | CommentTouristPointScalarWhereInput[]
  }

  export type FavoriteTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput = {
    create?: XOR<FavoriteTouristPointCreateWithoutUserTouristPointByTouristPointIdInput, FavoriteTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput> | FavoriteTouristPointCreateWithoutUserTouristPointByTouristPointIdInput[] | FavoriteTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput[]
    connectOrCreate?: FavoriteTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput | FavoriteTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput[]
    upsert?: FavoriteTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput | FavoriteTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput[]
    createMany?: FavoriteTouristPointCreateManyUserTouristPointByTouristPointIdInputEnvelope
    set?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
    disconnect?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
    delete?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
    connect?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
    update?: FavoriteTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput | FavoriteTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput[]
    updateMany?: FavoriteTouristPointUpdateManyWithWhereWithoutUserTouristPointByTouristPointIdInput | FavoriteTouristPointUpdateManyWithWhereWithoutUserTouristPointByTouristPointIdInput[]
    deleteMany?: FavoriteTouristPointScalarWhereInput | FavoriteTouristPointScalarWhereInput[]
  }

  export type ImageTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput = {
    create?: XOR<ImageTouristPointCreateWithoutUserTouristPointByTouristPointIdInput, ImageTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput> | ImageTouristPointCreateWithoutUserTouristPointByTouristPointIdInput[] | ImageTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput[]
    connectOrCreate?: ImageTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput | ImageTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput[]
    upsert?: ImageTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput | ImageTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput[]
    createMany?: ImageTouristPointCreateManyUserTouristPointByTouristPointIdInputEnvelope
    set?: ImageTouristPointWhereUniqueInput | ImageTouristPointWhereUniqueInput[]
    disconnect?: ImageTouristPointWhereUniqueInput | ImageTouristPointWhereUniqueInput[]
    delete?: ImageTouristPointWhereUniqueInput | ImageTouristPointWhereUniqueInput[]
    connect?: ImageTouristPointWhereUniqueInput | ImageTouristPointWhereUniqueInput[]
    update?: ImageTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput | ImageTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput[]
    updateMany?: ImageTouristPointUpdateManyWithWhereWithoutUserTouristPointByTouristPointIdInput | ImageTouristPointUpdateManyWithWhereWithoutUserTouristPointByTouristPointIdInput[]
    deleteMany?: ImageTouristPointScalarWhereInput | ImageTouristPointScalarWhereInput[]
  }

  export type Travel_Road_MapUpdateManyWithoutPontosTuristicosRelationNestedInput = {
    create?: XOR<Travel_Road_MapCreateWithoutPontosTuristicosRelationInput, Travel_Road_MapUncheckedCreateWithoutPontosTuristicosRelationInput> | Travel_Road_MapCreateWithoutPontosTuristicosRelationInput[] | Travel_Road_MapUncheckedCreateWithoutPontosTuristicosRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutPontosTuristicosRelationInput | Travel_Road_MapCreateOrConnectWithoutPontosTuristicosRelationInput[]
    upsert?: Travel_Road_MapUpsertWithWhereUniqueWithoutPontosTuristicosRelationInput | Travel_Road_MapUpsertWithWhereUniqueWithoutPontosTuristicosRelationInput[]
    set?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    disconnect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    delete?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    update?: Travel_Road_MapUpdateWithWhereUniqueWithoutPontosTuristicosRelationInput | Travel_Road_MapUpdateWithWhereUniqueWithoutPontosTuristicosRelationInput[]
    updateMany?: Travel_Road_MapUpdateManyWithWhereWithoutPontosTuristicosRelationInput | Travel_Road_MapUpdateManyWithWhereWithoutPontosTuristicosRelationInput[]
    deleteMany?: Travel_Road_MapScalarWhereInput | Travel_Road_MapScalarWhereInput[]
  }

  export type reportTouristPointUpdateManyWithoutUserReportTouristPointByIdTouristPointNestedInput = {
    create?: XOR<reportTouristPointCreateWithoutUserReportTouristPointByIdTouristPointInput, reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdTouristPointInput> | reportTouristPointCreateWithoutUserReportTouristPointByIdTouristPointInput[] | reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdTouristPointInput[]
    connectOrCreate?: reportTouristPointCreateOrConnectWithoutUserReportTouristPointByIdTouristPointInput | reportTouristPointCreateOrConnectWithoutUserReportTouristPointByIdTouristPointInput[]
    upsert?: reportTouristPointUpsertWithWhereUniqueWithoutUserReportTouristPointByIdTouristPointInput | reportTouristPointUpsertWithWhereUniqueWithoutUserReportTouristPointByIdTouristPointInput[]
    createMany?: reportTouristPointCreateManyUserReportTouristPointByIdTouristPointInputEnvelope
    set?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
    disconnect?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
    delete?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
    connect?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
    update?: reportTouristPointUpdateWithWhereUniqueWithoutUserReportTouristPointByIdTouristPointInput | reportTouristPointUpdateWithWhereUniqueWithoutUserReportTouristPointByIdTouristPointInput[]
    updateMany?: reportTouristPointUpdateManyWithWhereWithoutUserReportTouristPointByIdTouristPointInput | reportTouristPointUpdateManyWithWhereWithoutUserReportTouristPointByIdTouristPointInput[]
    deleteMany?: reportTouristPointScalarWhereInput | reportTouristPointScalarWhereInput[]
  }

  export type notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdTouristPointNestedInput = {
    create?: XOR<notificationTouristPointCreateWithoutUserNotificationTouristPointByIdTouristPointInput, notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdTouristPointInput> | notificationTouristPointCreateWithoutUserNotificationTouristPointByIdTouristPointInput[] | notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdTouristPointInput[]
    connectOrCreate?: notificationTouristPointCreateOrConnectWithoutUserNotificationTouristPointByIdTouristPointInput | notificationTouristPointCreateOrConnectWithoutUserNotificationTouristPointByIdTouristPointInput[]
    upsert?: notificationTouristPointUpsertWithWhereUniqueWithoutUserNotificationTouristPointByIdTouristPointInput | notificationTouristPointUpsertWithWhereUniqueWithoutUserNotificationTouristPointByIdTouristPointInput[]
    createMany?: notificationTouristPointCreateManyUserNotificationTouristPointByIdTouristPointInputEnvelope
    set?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
    disconnect?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
    delete?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
    connect?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
    update?: notificationTouristPointUpdateWithWhereUniqueWithoutUserNotificationTouristPointByIdTouristPointInput | notificationTouristPointUpdateWithWhereUniqueWithoutUserNotificationTouristPointByIdTouristPointInput[]
    updateMany?: notificationTouristPointUpdateManyWithWhereWithoutUserNotificationTouristPointByIdTouristPointInput | notificationTouristPointUpdateManyWithWhereWithoutUserNotificationTouristPointByIdTouristPointInput[]
    deleteMany?: notificationTouristPointScalarWhereInput | notificationTouristPointScalarWhereInput[]
  }

  export type AvaliationTouristPointUncheckedUpdateManyWithoutUserTouristPointByIdTouristPointNestedInput = {
    create?: XOR<AvaliationTouristPointCreateWithoutUserTouristPointByIdTouristPointInput, AvaliationTouristPointUncheckedCreateWithoutUserTouristPointByIdTouristPointInput> | AvaliationTouristPointCreateWithoutUserTouristPointByIdTouristPointInput[] | AvaliationTouristPointUncheckedCreateWithoutUserTouristPointByIdTouristPointInput[]
    connectOrCreate?: AvaliationTouristPointCreateOrConnectWithoutUserTouristPointByIdTouristPointInput | AvaliationTouristPointCreateOrConnectWithoutUserTouristPointByIdTouristPointInput[]
    upsert?: AvaliationTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByIdTouristPointInput | AvaliationTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByIdTouristPointInput[]
    createMany?: AvaliationTouristPointCreateManyUserTouristPointByIdTouristPointInputEnvelope
    set?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    disconnect?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    delete?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    connect?: AvaliationTouristPointWhereUniqueInput | AvaliationTouristPointWhereUniqueInput[]
    update?: AvaliationTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByIdTouristPointInput | AvaliationTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByIdTouristPointInput[]
    updateMany?: AvaliationTouristPointUpdateManyWithWhereWithoutUserTouristPointByIdTouristPointInput | AvaliationTouristPointUpdateManyWithWhereWithoutUserTouristPointByIdTouristPointInput[]
    deleteMany?: AvaliationTouristPointScalarWhereInput | AvaliationTouristPointScalarWhereInput[]
  }

  export type CommentTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput = {
    create?: XOR<CommentTouristPointCreateWithoutUserTouristPointByTouristPointIdInput, CommentTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput> | CommentTouristPointCreateWithoutUserTouristPointByTouristPointIdInput[] | CommentTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput[]
    connectOrCreate?: CommentTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput | CommentTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput[]
    upsert?: CommentTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput | CommentTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput[]
    createMany?: CommentTouristPointCreateManyUserTouristPointByTouristPointIdInputEnvelope
    set?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    disconnect?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    delete?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    connect?: CommentTouristPointWhereUniqueInput | CommentTouristPointWhereUniqueInput[]
    update?: CommentTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput | CommentTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput[]
    updateMany?: CommentTouristPointUpdateManyWithWhereWithoutUserTouristPointByTouristPointIdInput | CommentTouristPointUpdateManyWithWhereWithoutUserTouristPointByTouristPointIdInput[]
    deleteMany?: CommentTouristPointScalarWhereInput | CommentTouristPointScalarWhereInput[]
  }

  export type FavoriteTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput = {
    create?: XOR<FavoriteTouristPointCreateWithoutUserTouristPointByTouristPointIdInput, FavoriteTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput> | FavoriteTouristPointCreateWithoutUserTouristPointByTouristPointIdInput[] | FavoriteTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput[]
    connectOrCreate?: FavoriteTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput | FavoriteTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput[]
    upsert?: FavoriteTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput | FavoriteTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput[]
    createMany?: FavoriteTouristPointCreateManyUserTouristPointByTouristPointIdInputEnvelope
    set?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
    disconnect?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
    delete?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
    connect?: FavoriteTouristPointWhereUniqueInput | FavoriteTouristPointWhereUniqueInput[]
    update?: FavoriteTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput | FavoriteTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput[]
    updateMany?: FavoriteTouristPointUpdateManyWithWhereWithoutUserTouristPointByTouristPointIdInput | FavoriteTouristPointUpdateManyWithWhereWithoutUserTouristPointByTouristPointIdInput[]
    deleteMany?: FavoriteTouristPointScalarWhereInput | FavoriteTouristPointScalarWhereInput[]
  }

  export type ImageTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput = {
    create?: XOR<ImageTouristPointCreateWithoutUserTouristPointByTouristPointIdInput, ImageTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput> | ImageTouristPointCreateWithoutUserTouristPointByTouristPointIdInput[] | ImageTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput[]
    connectOrCreate?: ImageTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput | ImageTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput[]
    upsert?: ImageTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput | ImageTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput[]
    createMany?: ImageTouristPointCreateManyUserTouristPointByTouristPointIdInputEnvelope
    set?: ImageTouristPointWhereUniqueInput | ImageTouristPointWhereUniqueInput[]
    disconnect?: ImageTouristPointWhereUniqueInput | ImageTouristPointWhereUniqueInput[]
    delete?: ImageTouristPointWhereUniqueInput | ImageTouristPointWhereUniqueInput[]
    connect?: ImageTouristPointWhereUniqueInput | ImageTouristPointWhereUniqueInput[]
    update?: ImageTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput | ImageTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput[]
    updateMany?: ImageTouristPointUpdateManyWithWhereWithoutUserTouristPointByTouristPointIdInput | ImageTouristPointUpdateManyWithWhereWithoutUserTouristPointByTouristPointIdInput[]
    deleteMany?: ImageTouristPointScalarWhereInput | ImageTouristPointScalarWhereInput[]
  }

  export type Travel_Road_MapUncheckedUpdateManyWithoutPontosTuristicosRelationNestedInput = {
    create?: XOR<Travel_Road_MapCreateWithoutPontosTuristicosRelationInput, Travel_Road_MapUncheckedCreateWithoutPontosTuristicosRelationInput> | Travel_Road_MapCreateWithoutPontosTuristicosRelationInput[] | Travel_Road_MapUncheckedCreateWithoutPontosTuristicosRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutPontosTuristicosRelationInput | Travel_Road_MapCreateOrConnectWithoutPontosTuristicosRelationInput[]
    upsert?: Travel_Road_MapUpsertWithWhereUniqueWithoutPontosTuristicosRelationInput | Travel_Road_MapUpsertWithWhereUniqueWithoutPontosTuristicosRelationInput[]
    set?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    disconnect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    delete?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    update?: Travel_Road_MapUpdateWithWhereUniqueWithoutPontosTuristicosRelationInput | Travel_Road_MapUpdateWithWhereUniqueWithoutPontosTuristicosRelationInput[]
    updateMany?: Travel_Road_MapUpdateManyWithWhereWithoutPontosTuristicosRelationInput | Travel_Road_MapUpdateManyWithWhereWithoutPontosTuristicosRelationInput[]
    deleteMany?: Travel_Road_MapScalarWhereInput | Travel_Road_MapScalarWhereInput[]
  }

  export type reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdTouristPointNestedInput = {
    create?: XOR<reportTouristPointCreateWithoutUserReportTouristPointByIdTouristPointInput, reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdTouristPointInput> | reportTouristPointCreateWithoutUserReportTouristPointByIdTouristPointInput[] | reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdTouristPointInput[]
    connectOrCreate?: reportTouristPointCreateOrConnectWithoutUserReportTouristPointByIdTouristPointInput | reportTouristPointCreateOrConnectWithoutUserReportTouristPointByIdTouristPointInput[]
    upsert?: reportTouristPointUpsertWithWhereUniqueWithoutUserReportTouristPointByIdTouristPointInput | reportTouristPointUpsertWithWhereUniqueWithoutUserReportTouristPointByIdTouristPointInput[]
    createMany?: reportTouristPointCreateManyUserReportTouristPointByIdTouristPointInputEnvelope
    set?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
    disconnect?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
    delete?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
    connect?: reportTouristPointWhereUniqueInput | reportTouristPointWhereUniqueInput[]
    update?: reportTouristPointUpdateWithWhereUniqueWithoutUserReportTouristPointByIdTouristPointInput | reportTouristPointUpdateWithWhereUniqueWithoutUserReportTouristPointByIdTouristPointInput[]
    updateMany?: reportTouristPointUpdateManyWithWhereWithoutUserReportTouristPointByIdTouristPointInput | reportTouristPointUpdateManyWithWhereWithoutUserReportTouristPointByIdTouristPointInput[]
    deleteMany?: reportTouristPointScalarWhereInput | reportTouristPointScalarWhereInput[]
  }

  export type notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdTouristPointNestedInput = {
    create?: XOR<notificationTouristPointCreateWithoutUserNotificationTouristPointByIdTouristPointInput, notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdTouristPointInput> | notificationTouristPointCreateWithoutUserNotificationTouristPointByIdTouristPointInput[] | notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdTouristPointInput[]
    connectOrCreate?: notificationTouristPointCreateOrConnectWithoutUserNotificationTouristPointByIdTouristPointInput | notificationTouristPointCreateOrConnectWithoutUserNotificationTouristPointByIdTouristPointInput[]
    upsert?: notificationTouristPointUpsertWithWhereUniqueWithoutUserNotificationTouristPointByIdTouristPointInput | notificationTouristPointUpsertWithWhereUniqueWithoutUserNotificationTouristPointByIdTouristPointInput[]
    createMany?: notificationTouristPointCreateManyUserNotificationTouristPointByIdTouristPointInputEnvelope
    set?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
    disconnect?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
    delete?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
    connect?: notificationTouristPointWhereUniqueInput | notificationTouristPointWhereUniqueInput[]
    update?: notificationTouristPointUpdateWithWhereUniqueWithoutUserNotificationTouristPointByIdTouristPointInput | notificationTouristPointUpdateWithWhereUniqueWithoutUserNotificationTouristPointByIdTouristPointInput[]
    updateMany?: notificationTouristPointUpdateManyWithWhereWithoutUserNotificationTouristPointByIdTouristPointInput | notificationTouristPointUpdateManyWithWhereWithoutUserNotificationTouristPointByIdTouristPointInput[]
    deleteMany?: notificationTouristPointScalarWhereInput | notificationTouristPointScalarWhereInput[]
  }

  export type User_ClientCreateNestedOneWithoutTravelRoadMapsInput = {
    create?: XOR<User_ClientCreateWithoutTravelRoadMapsInput, User_ClientUncheckedCreateWithoutTravelRoadMapsInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutTravelRoadMapsInput
    connect?: User_ClientWhereUniqueInput
  }

  export type AvaliationRoadMapCreateNestedManyWithoutUserRoadMapByIdRoadMapInput = {
    create?: XOR<AvaliationRoadMapCreateWithoutUserRoadMapByIdRoadMapInput, AvaliationRoadMapUncheckedCreateWithoutUserRoadMapByIdRoadMapInput> | AvaliationRoadMapCreateWithoutUserRoadMapByIdRoadMapInput[] | AvaliationRoadMapUncheckedCreateWithoutUserRoadMapByIdRoadMapInput[]
    connectOrCreate?: AvaliationRoadMapCreateOrConnectWithoutUserRoadMapByIdRoadMapInput | AvaliationRoadMapCreateOrConnectWithoutUserRoadMapByIdRoadMapInput[]
    createMany?: AvaliationRoadMapCreateManyUserRoadMapByIdRoadMapInputEnvelope
    connect?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
  }

  export type CommentRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput = {
    create?: XOR<CommentRoadMapCreateWithoutUserRoadMapByRoadMapIdInput, CommentRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput> | CommentRoadMapCreateWithoutUserRoadMapByRoadMapIdInput[] | CommentRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput[]
    connectOrCreate?: CommentRoadMapCreateOrConnectWithoutUserRoadMapByRoadMapIdInput | CommentRoadMapCreateOrConnectWithoutUserRoadMapByRoadMapIdInput[]
    createMany?: CommentRoadMapCreateManyUserRoadMapByRoadMapIdInputEnvelope
    connect?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
  }

  export type FavoriteRoadMapCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput = {
    create?: XOR<FavoriteRoadMapCreateWithoutUserRoadMapPointByRoadMapIdInput, FavoriteRoadMapUncheckedCreateWithoutUserRoadMapPointByRoadMapIdInput> | FavoriteRoadMapCreateWithoutUserRoadMapPointByRoadMapIdInput[] | FavoriteRoadMapUncheckedCreateWithoutUserRoadMapPointByRoadMapIdInput[]
    connectOrCreate?: FavoriteRoadMapCreateOrConnectWithoutUserRoadMapPointByRoadMapIdInput | FavoriteRoadMapCreateOrConnectWithoutUserRoadMapPointByRoadMapIdInput[]
    createMany?: FavoriteRoadMapCreateManyUserRoadMapPointByRoadMapIdInputEnvelope
    connect?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
  }

  export type ImageRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput = {
    create?: XOR<ImageRoadMapCreateWithoutUserRoadMapByRoadMapIdInput, ImageRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput> | ImageRoadMapCreateWithoutUserRoadMapByRoadMapIdInput[] | ImageRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput[]
    connectOrCreate?: ImageRoadMapCreateOrConnectWithoutUserRoadMapByRoadMapIdInput | ImageRoadMapCreateOrConnectWithoutUserRoadMapByRoadMapIdInput[]
    createMany?: ImageRoadMapCreateManyUserRoadMapByRoadMapIdInputEnvelope
    connect?: ImageRoadMapWhereUniqueInput | ImageRoadMapWhereUniqueInput[]
  }

  export type Ponto_TuristicoCreateNestedManyWithoutRoadMapRelationInput = {
    create?: XOR<Ponto_TuristicoCreateWithoutRoadMapRelationInput, Ponto_TuristicoUncheckedCreateWithoutRoadMapRelationInput> | Ponto_TuristicoCreateWithoutRoadMapRelationInput[] | Ponto_TuristicoUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: Ponto_TuristicoCreateOrConnectWithoutRoadMapRelationInput | Ponto_TuristicoCreateOrConnectWithoutRoadMapRelationInput[]
    connect?: Ponto_TuristicoWhereUniqueInput | Ponto_TuristicoWhereUniqueInput[]
  }

  export type Ponto_ComercialCreateNestedManyWithoutRoadMapRelationInput = {
    create?: XOR<Ponto_ComercialCreateWithoutRoadMapRelationInput, Ponto_ComercialUncheckedCreateWithoutRoadMapRelationInput> | Ponto_ComercialCreateWithoutRoadMapRelationInput[] | Ponto_ComercialUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: Ponto_ComercialCreateOrConnectWithoutRoadMapRelationInput | Ponto_ComercialCreateOrConnectWithoutRoadMapRelationInput[]
    connect?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
  }

  export type CountryCreateNestedManyWithoutRoadMapRelationInput = {
    create?: XOR<CountryCreateWithoutRoadMapRelationInput, CountryUncheckedCreateWithoutRoadMapRelationInput> | CountryCreateWithoutRoadMapRelationInput[] | CountryUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: CountryCreateOrConnectWithoutRoadMapRelationInput | CountryCreateOrConnectWithoutRoadMapRelationInput[]
    connect?: CountryWhereUniqueInput | CountryWhereUniqueInput[]
  }

  export type StateCreateNestedManyWithoutRoadMapRelationInput = {
    create?: XOR<StateCreateWithoutRoadMapRelationInput, StateUncheckedCreateWithoutRoadMapRelationInput> | StateCreateWithoutRoadMapRelationInput[] | StateUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: StateCreateOrConnectWithoutRoadMapRelationInput | StateCreateOrConnectWithoutRoadMapRelationInput[]
    connect?: StateWhereUniqueInput | StateWhereUniqueInput[]
  }

  export type CityCreateNestedManyWithoutRoadMapRelationInput = {
    create?: XOR<CityCreateWithoutRoadMapRelationInput, CityUncheckedCreateWithoutRoadMapRelationInput> | CityCreateWithoutRoadMapRelationInput[] | CityUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: CityCreateOrConnectWithoutRoadMapRelationInput | CityCreateOrConnectWithoutRoadMapRelationInput[]
    connect?: CityWhereUniqueInput | CityWhereUniqueInput[]
  }

  export type reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput = {
    create?: XOR<reportRoadMapCreateWithoutUserReportRoadMapByIdRoadMapInput, reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdRoadMapInput> | reportRoadMapCreateWithoutUserReportRoadMapByIdRoadMapInput[] | reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdRoadMapInput[]
    connectOrCreate?: reportRoadMapCreateOrConnectWithoutUserReportRoadMapByIdRoadMapInput | reportRoadMapCreateOrConnectWithoutUserReportRoadMapByIdRoadMapInput[]
    createMany?: reportRoadMapCreateManyUserReportRoadMapByIdRoadMapInputEnvelope
    connect?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
  }

  export type notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput = {
    create?: XOR<notificationRoadMapCreateWithoutUserNotificationRoadMapByIdRoadMapInput, notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdRoadMapInput> | notificationRoadMapCreateWithoutUserNotificationRoadMapByIdRoadMapInput[] | notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdRoadMapInput[]
    connectOrCreate?: notificationRoadMapCreateOrConnectWithoutUserNotificationRoadMapByIdRoadMapInput | notificationRoadMapCreateOrConnectWithoutUserNotificationRoadMapByIdRoadMapInput[]
    createMany?: notificationRoadMapCreateManyUserNotificationRoadMapByIdRoadMapInputEnvelope
    connect?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
  }

  export type AvaliationRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByIdRoadMapInput = {
    create?: XOR<AvaliationRoadMapCreateWithoutUserRoadMapByIdRoadMapInput, AvaliationRoadMapUncheckedCreateWithoutUserRoadMapByIdRoadMapInput> | AvaliationRoadMapCreateWithoutUserRoadMapByIdRoadMapInput[] | AvaliationRoadMapUncheckedCreateWithoutUserRoadMapByIdRoadMapInput[]
    connectOrCreate?: AvaliationRoadMapCreateOrConnectWithoutUserRoadMapByIdRoadMapInput | AvaliationRoadMapCreateOrConnectWithoutUserRoadMapByIdRoadMapInput[]
    createMany?: AvaliationRoadMapCreateManyUserRoadMapByIdRoadMapInputEnvelope
    connect?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
  }

  export type CommentRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput = {
    create?: XOR<CommentRoadMapCreateWithoutUserRoadMapByRoadMapIdInput, CommentRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput> | CommentRoadMapCreateWithoutUserRoadMapByRoadMapIdInput[] | CommentRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput[]
    connectOrCreate?: CommentRoadMapCreateOrConnectWithoutUserRoadMapByRoadMapIdInput | CommentRoadMapCreateOrConnectWithoutUserRoadMapByRoadMapIdInput[]
    createMany?: CommentRoadMapCreateManyUserRoadMapByRoadMapIdInputEnvelope
    connect?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
  }

  export type FavoriteRoadMapUncheckedCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput = {
    create?: XOR<FavoriteRoadMapCreateWithoutUserRoadMapPointByRoadMapIdInput, FavoriteRoadMapUncheckedCreateWithoutUserRoadMapPointByRoadMapIdInput> | FavoriteRoadMapCreateWithoutUserRoadMapPointByRoadMapIdInput[] | FavoriteRoadMapUncheckedCreateWithoutUserRoadMapPointByRoadMapIdInput[]
    connectOrCreate?: FavoriteRoadMapCreateOrConnectWithoutUserRoadMapPointByRoadMapIdInput | FavoriteRoadMapCreateOrConnectWithoutUserRoadMapPointByRoadMapIdInput[]
    createMany?: FavoriteRoadMapCreateManyUserRoadMapPointByRoadMapIdInputEnvelope
    connect?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
  }

  export type ImageRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput = {
    create?: XOR<ImageRoadMapCreateWithoutUserRoadMapByRoadMapIdInput, ImageRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput> | ImageRoadMapCreateWithoutUserRoadMapByRoadMapIdInput[] | ImageRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput[]
    connectOrCreate?: ImageRoadMapCreateOrConnectWithoutUserRoadMapByRoadMapIdInput | ImageRoadMapCreateOrConnectWithoutUserRoadMapByRoadMapIdInput[]
    createMany?: ImageRoadMapCreateManyUserRoadMapByRoadMapIdInputEnvelope
    connect?: ImageRoadMapWhereUniqueInput | ImageRoadMapWhereUniqueInput[]
  }

  export type Ponto_TuristicoUncheckedCreateNestedManyWithoutRoadMapRelationInput = {
    create?: XOR<Ponto_TuristicoCreateWithoutRoadMapRelationInput, Ponto_TuristicoUncheckedCreateWithoutRoadMapRelationInput> | Ponto_TuristicoCreateWithoutRoadMapRelationInput[] | Ponto_TuristicoUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: Ponto_TuristicoCreateOrConnectWithoutRoadMapRelationInput | Ponto_TuristicoCreateOrConnectWithoutRoadMapRelationInput[]
    connect?: Ponto_TuristicoWhereUniqueInput | Ponto_TuristicoWhereUniqueInput[]
  }

  export type Ponto_ComercialUncheckedCreateNestedManyWithoutRoadMapRelationInput = {
    create?: XOR<Ponto_ComercialCreateWithoutRoadMapRelationInput, Ponto_ComercialUncheckedCreateWithoutRoadMapRelationInput> | Ponto_ComercialCreateWithoutRoadMapRelationInput[] | Ponto_ComercialUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: Ponto_ComercialCreateOrConnectWithoutRoadMapRelationInput | Ponto_ComercialCreateOrConnectWithoutRoadMapRelationInput[]
    connect?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
  }

  export type CountryUncheckedCreateNestedManyWithoutRoadMapRelationInput = {
    create?: XOR<CountryCreateWithoutRoadMapRelationInput, CountryUncheckedCreateWithoutRoadMapRelationInput> | CountryCreateWithoutRoadMapRelationInput[] | CountryUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: CountryCreateOrConnectWithoutRoadMapRelationInput | CountryCreateOrConnectWithoutRoadMapRelationInput[]
    connect?: CountryWhereUniqueInput | CountryWhereUniqueInput[]
  }

  export type StateUncheckedCreateNestedManyWithoutRoadMapRelationInput = {
    create?: XOR<StateCreateWithoutRoadMapRelationInput, StateUncheckedCreateWithoutRoadMapRelationInput> | StateCreateWithoutRoadMapRelationInput[] | StateUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: StateCreateOrConnectWithoutRoadMapRelationInput | StateCreateOrConnectWithoutRoadMapRelationInput[]
    connect?: StateWhereUniqueInput | StateWhereUniqueInput[]
  }

  export type CityUncheckedCreateNestedManyWithoutRoadMapRelationInput = {
    create?: XOR<CityCreateWithoutRoadMapRelationInput, CityUncheckedCreateWithoutRoadMapRelationInput> | CityCreateWithoutRoadMapRelationInput[] | CityUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: CityCreateOrConnectWithoutRoadMapRelationInput | CityCreateOrConnectWithoutRoadMapRelationInput[]
    connect?: CityWhereUniqueInput | CityWhereUniqueInput[]
  }

  export type reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput = {
    create?: XOR<reportRoadMapCreateWithoutUserReportRoadMapByIdRoadMapInput, reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdRoadMapInput> | reportRoadMapCreateWithoutUserReportRoadMapByIdRoadMapInput[] | reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdRoadMapInput[]
    connectOrCreate?: reportRoadMapCreateOrConnectWithoutUserReportRoadMapByIdRoadMapInput | reportRoadMapCreateOrConnectWithoutUserReportRoadMapByIdRoadMapInput[]
    createMany?: reportRoadMapCreateManyUserReportRoadMapByIdRoadMapInputEnvelope
    connect?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
  }

  export type notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput = {
    create?: XOR<notificationRoadMapCreateWithoutUserNotificationRoadMapByIdRoadMapInput, notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdRoadMapInput> | notificationRoadMapCreateWithoutUserNotificationRoadMapByIdRoadMapInput[] | notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdRoadMapInput[]
    connectOrCreate?: notificationRoadMapCreateOrConnectWithoutUserNotificationRoadMapByIdRoadMapInput | notificationRoadMapCreateOrConnectWithoutUserNotificationRoadMapByIdRoadMapInput[]
    createMany?: notificationRoadMapCreateManyUserNotificationRoadMapByIdRoadMapInputEnvelope
    connect?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type User_ClientUpdateOneRequiredWithoutTravelRoadMapsNestedInput = {
    create?: XOR<User_ClientCreateWithoutTravelRoadMapsInput, User_ClientUncheckedCreateWithoutTravelRoadMapsInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutTravelRoadMapsInput
    upsert?: User_ClientUpsertWithoutTravelRoadMapsInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutTravelRoadMapsInput, User_ClientUpdateWithoutTravelRoadMapsInput>, User_ClientUncheckedUpdateWithoutTravelRoadMapsInput>
  }

  export type AvaliationRoadMapUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput = {
    create?: XOR<AvaliationRoadMapCreateWithoutUserRoadMapByIdRoadMapInput, AvaliationRoadMapUncheckedCreateWithoutUserRoadMapByIdRoadMapInput> | AvaliationRoadMapCreateWithoutUserRoadMapByIdRoadMapInput[] | AvaliationRoadMapUncheckedCreateWithoutUserRoadMapByIdRoadMapInput[]
    connectOrCreate?: AvaliationRoadMapCreateOrConnectWithoutUserRoadMapByIdRoadMapInput | AvaliationRoadMapCreateOrConnectWithoutUserRoadMapByIdRoadMapInput[]
    upsert?: AvaliationRoadMapUpsertWithWhereUniqueWithoutUserRoadMapByIdRoadMapInput | AvaliationRoadMapUpsertWithWhereUniqueWithoutUserRoadMapByIdRoadMapInput[]
    createMany?: AvaliationRoadMapCreateManyUserRoadMapByIdRoadMapInputEnvelope
    set?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    disconnect?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    delete?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    connect?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    update?: AvaliationRoadMapUpdateWithWhereUniqueWithoutUserRoadMapByIdRoadMapInput | AvaliationRoadMapUpdateWithWhereUniqueWithoutUserRoadMapByIdRoadMapInput[]
    updateMany?: AvaliationRoadMapUpdateManyWithWhereWithoutUserRoadMapByIdRoadMapInput | AvaliationRoadMapUpdateManyWithWhereWithoutUserRoadMapByIdRoadMapInput[]
    deleteMany?: AvaliationRoadMapScalarWhereInput | AvaliationRoadMapScalarWhereInput[]
  }

  export type CommentRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput = {
    create?: XOR<CommentRoadMapCreateWithoutUserRoadMapByRoadMapIdInput, CommentRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput> | CommentRoadMapCreateWithoutUserRoadMapByRoadMapIdInput[] | CommentRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput[]
    connectOrCreate?: CommentRoadMapCreateOrConnectWithoutUserRoadMapByRoadMapIdInput | CommentRoadMapCreateOrConnectWithoutUserRoadMapByRoadMapIdInput[]
    upsert?: CommentRoadMapUpsertWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput | CommentRoadMapUpsertWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput[]
    createMany?: CommentRoadMapCreateManyUserRoadMapByRoadMapIdInputEnvelope
    set?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    disconnect?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    delete?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    connect?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    update?: CommentRoadMapUpdateWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput | CommentRoadMapUpdateWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput[]
    updateMany?: CommentRoadMapUpdateManyWithWhereWithoutUserRoadMapByRoadMapIdInput | CommentRoadMapUpdateManyWithWhereWithoutUserRoadMapByRoadMapIdInput[]
    deleteMany?: CommentRoadMapScalarWhereInput | CommentRoadMapScalarWhereInput[]
  }

  export type FavoriteRoadMapUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput = {
    create?: XOR<FavoriteRoadMapCreateWithoutUserRoadMapPointByRoadMapIdInput, FavoriteRoadMapUncheckedCreateWithoutUserRoadMapPointByRoadMapIdInput> | FavoriteRoadMapCreateWithoutUserRoadMapPointByRoadMapIdInput[] | FavoriteRoadMapUncheckedCreateWithoutUserRoadMapPointByRoadMapIdInput[]
    connectOrCreate?: FavoriteRoadMapCreateOrConnectWithoutUserRoadMapPointByRoadMapIdInput | FavoriteRoadMapCreateOrConnectWithoutUserRoadMapPointByRoadMapIdInput[]
    upsert?: FavoriteRoadMapUpsertWithWhereUniqueWithoutUserRoadMapPointByRoadMapIdInput | FavoriteRoadMapUpsertWithWhereUniqueWithoutUserRoadMapPointByRoadMapIdInput[]
    createMany?: FavoriteRoadMapCreateManyUserRoadMapPointByRoadMapIdInputEnvelope
    set?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
    disconnect?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
    delete?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
    connect?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
    update?: FavoriteRoadMapUpdateWithWhereUniqueWithoutUserRoadMapPointByRoadMapIdInput | FavoriteRoadMapUpdateWithWhereUniqueWithoutUserRoadMapPointByRoadMapIdInput[]
    updateMany?: FavoriteRoadMapUpdateManyWithWhereWithoutUserRoadMapPointByRoadMapIdInput | FavoriteRoadMapUpdateManyWithWhereWithoutUserRoadMapPointByRoadMapIdInput[]
    deleteMany?: FavoriteRoadMapScalarWhereInput | FavoriteRoadMapScalarWhereInput[]
  }

  export type ImageRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput = {
    create?: XOR<ImageRoadMapCreateWithoutUserRoadMapByRoadMapIdInput, ImageRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput> | ImageRoadMapCreateWithoutUserRoadMapByRoadMapIdInput[] | ImageRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput[]
    connectOrCreate?: ImageRoadMapCreateOrConnectWithoutUserRoadMapByRoadMapIdInput | ImageRoadMapCreateOrConnectWithoutUserRoadMapByRoadMapIdInput[]
    upsert?: ImageRoadMapUpsertWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput | ImageRoadMapUpsertWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput[]
    createMany?: ImageRoadMapCreateManyUserRoadMapByRoadMapIdInputEnvelope
    set?: ImageRoadMapWhereUniqueInput | ImageRoadMapWhereUniqueInput[]
    disconnect?: ImageRoadMapWhereUniqueInput | ImageRoadMapWhereUniqueInput[]
    delete?: ImageRoadMapWhereUniqueInput | ImageRoadMapWhereUniqueInput[]
    connect?: ImageRoadMapWhereUniqueInput | ImageRoadMapWhereUniqueInput[]
    update?: ImageRoadMapUpdateWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput | ImageRoadMapUpdateWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput[]
    updateMany?: ImageRoadMapUpdateManyWithWhereWithoutUserRoadMapByRoadMapIdInput | ImageRoadMapUpdateManyWithWhereWithoutUserRoadMapByRoadMapIdInput[]
    deleteMany?: ImageRoadMapScalarWhereInput | ImageRoadMapScalarWhereInput[]
  }

  export type Ponto_TuristicoUpdateManyWithoutRoadMapRelationNestedInput = {
    create?: XOR<Ponto_TuristicoCreateWithoutRoadMapRelationInput, Ponto_TuristicoUncheckedCreateWithoutRoadMapRelationInput> | Ponto_TuristicoCreateWithoutRoadMapRelationInput[] | Ponto_TuristicoUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: Ponto_TuristicoCreateOrConnectWithoutRoadMapRelationInput | Ponto_TuristicoCreateOrConnectWithoutRoadMapRelationInput[]
    upsert?: Ponto_TuristicoUpsertWithWhereUniqueWithoutRoadMapRelationInput | Ponto_TuristicoUpsertWithWhereUniqueWithoutRoadMapRelationInput[]
    set?: Ponto_TuristicoWhereUniqueInput | Ponto_TuristicoWhereUniqueInput[]
    disconnect?: Ponto_TuristicoWhereUniqueInput | Ponto_TuristicoWhereUniqueInput[]
    delete?: Ponto_TuristicoWhereUniqueInput | Ponto_TuristicoWhereUniqueInput[]
    connect?: Ponto_TuristicoWhereUniqueInput | Ponto_TuristicoWhereUniqueInput[]
    update?: Ponto_TuristicoUpdateWithWhereUniqueWithoutRoadMapRelationInput | Ponto_TuristicoUpdateWithWhereUniqueWithoutRoadMapRelationInput[]
    updateMany?: Ponto_TuristicoUpdateManyWithWhereWithoutRoadMapRelationInput | Ponto_TuristicoUpdateManyWithWhereWithoutRoadMapRelationInput[]
    deleteMany?: Ponto_TuristicoScalarWhereInput | Ponto_TuristicoScalarWhereInput[]
  }

  export type Ponto_ComercialUpdateManyWithoutRoadMapRelationNestedInput = {
    create?: XOR<Ponto_ComercialCreateWithoutRoadMapRelationInput, Ponto_ComercialUncheckedCreateWithoutRoadMapRelationInput> | Ponto_ComercialCreateWithoutRoadMapRelationInput[] | Ponto_ComercialUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: Ponto_ComercialCreateOrConnectWithoutRoadMapRelationInput | Ponto_ComercialCreateOrConnectWithoutRoadMapRelationInput[]
    upsert?: Ponto_ComercialUpsertWithWhereUniqueWithoutRoadMapRelationInput | Ponto_ComercialUpsertWithWhereUniqueWithoutRoadMapRelationInput[]
    set?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
    disconnect?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
    delete?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
    connect?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
    update?: Ponto_ComercialUpdateWithWhereUniqueWithoutRoadMapRelationInput | Ponto_ComercialUpdateWithWhereUniqueWithoutRoadMapRelationInput[]
    updateMany?: Ponto_ComercialUpdateManyWithWhereWithoutRoadMapRelationInput | Ponto_ComercialUpdateManyWithWhereWithoutRoadMapRelationInput[]
    deleteMany?: Ponto_ComercialScalarWhereInput | Ponto_ComercialScalarWhereInput[]
  }

  export type CountryUpdateManyWithoutRoadMapRelationNestedInput = {
    create?: XOR<CountryCreateWithoutRoadMapRelationInput, CountryUncheckedCreateWithoutRoadMapRelationInput> | CountryCreateWithoutRoadMapRelationInput[] | CountryUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: CountryCreateOrConnectWithoutRoadMapRelationInput | CountryCreateOrConnectWithoutRoadMapRelationInput[]
    upsert?: CountryUpsertWithWhereUniqueWithoutRoadMapRelationInput | CountryUpsertWithWhereUniqueWithoutRoadMapRelationInput[]
    set?: CountryWhereUniqueInput | CountryWhereUniqueInput[]
    disconnect?: CountryWhereUniqueInput | CountryWhereUniqueInput[]
    delete?: CountryWhereUniqueInput | CountryWhereUniqueInput[]
    connect?: CountryWhereUniqueInput | CountryWhereUniqueInput[]
    update?: CountryUpdateWithWhereUniqueWithoutRoadMapRelationInput | CountryUpdateWithWhereUniqueWithoutRoadMapRelationInput[]
    updateMany?: CountryUpdateManyWithWhereWithoutRoadMapRelationInput | CountryUpdateManyWithWhereWithoutRoadMapRelationInput[]
    deleteMany?: CountryScalarWhereInput | CountryScalarWhereInput[]
  }

  export type StateUpdateManyWithoutRoadMapRelationNestedInput = {
    create?: XOR<StateCreateWithoutRoadMapRelationInput, StateUncheckedCreateWithoutRoadMapRelationInput> | StateCreateWithoutRoadMapRelationInput[] | StateUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: StateCreateOrConnectWithoutRoadMapRelationInput | StateCreateOrConnectWithoutRoadMapRelationInput[]
    upsert?: StateUpsertWithWhereUniqueWithoutRoadMapRelationInput | StateUpsertWithWhereUniqueWithoutRoadMapRelationInput[]
    set?: StateWhereUniqueInput | StateWhereUniqueInput[]
    disconnect?: StateWhereUniqueInput | StateWhereUniqueInput[]
    delete?: StateWhereUniqueInput | StateWhereUniqueInput[]
    connect?: StateWhereUniqueInput | StateWhereUniqueInput[]
    update?: StateUpdateWithWhereUniqueWithoutRoadMapRelationInput | StateUpdateWithWhereUniqueWithoutRoadMapRelationInput[]
    updateMany?: StateUpdateManyWithWhereWithoutRoadMapRelationInput | StateUpdateManyWithWhereWithoutRoadMapRelationInput[]
    deleteMany?: StateScalarWhereInput | StateScalarWhereInput[]
  }

  export type CityUpdateManyWithoutRoadMapRelationNestedInput = {
    create?: XOR<CityCreateWithoutRoadMapRelationInput, CityUncheckedCreateWithoutRoadMapRelationInput> | CityCreateWithoutRoadMapRelationInput[] | CityUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: CityCreateOrConnectWithoutRoadMapRelationInput | CityCreateOrConnectWithoutRoadMapRelationInput[]
    upsert?: CityUpsertWithWhereUniqueWithoutRoadMapRelationInput | CityUpsertWithWhereUniqueWithoutRoadMapRelationInput[]
    set?: CityWhereUniqueInput | CityWhereUniqueInput[]
    disconnect?: CityWhereUniqueInput | CityWhereUniqueInput[]
    delete?: CityWhereUniqueInput | CityWhereUniqueInput[]
    connect?: CityWhereUniqueInput | CityWhereUniqueInput[]
    update?: CityUpdateWithWhereUniqueWithoutRoadMapRelationInput | CityUpdateWithWhereUniqueWithoutRoadMapRelationInput[]
    updateMany?: CityUpdateManyWithWhereWithoutRoadMapRelationInput | CityUpdateManyWithWhereWithoutRoadMapRelationInput[]
    deleteMany?: CityScalarWhereInput | CityScalarWhereInput[]
  }

  export type reportRoadMapUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput = {
    create?: XOR<reportRoadMapCreateWithoutUserReportRoadMapByIdRoadMapInput, reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdRoadMapInput> | reportRoadMapCreateWithoutUserReportRoadMapByIdRoadMapInput[] | reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdRoadMapInput[]
    connectOrCreate?: reportRoadMapCreateOrConnectWithoutUserReportRoadMapByIdRoadMapInput | reportRoadMapCreateOrConnectWithoutUserReportRoadMapByIdRoadMapInput[]
    upsert?: reportRoadMapUpsertWithWhereUniqueWithoutUserReportRoadMapByIdRoadMapInput | reportRoadMapUpsertWithWhereUniqueWithoutUserReportRoadMapByIdRoadMapInput[]
    createMany?: reportRoadMapCreateManyUserReportRoadMapByIdRoadMapInputEnvelope
    set?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
    disconnect?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
    delete?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
    connect?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
    update?: reportRoadMapUpdateWithWhereUniqueWithoutUserReportRoadMapByIdRoadMapInput | reportRoadMapUpdateWithWhereUniqueWithoutUserReportRoadMapByIdRoadMapInput[]
    updateMany?: reportRoadMapUpdateManyWithWhereWithoutUserReportRoadMapByIdRoadMapInput | reportRoadMapUpdateManyWithWhereWithoutUserReportRoadMapByIdRoadMapInput[]
    deleteMany?: reportRoadMapScalarWhereInput | reportRoadMapScalarWhereInput[]
  }

  export type notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput = {
    create?: XOR<notificationRoadMapCreateWithoutUserNotificationRoadMapByIdRoadMapInput, notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdRoadMapInput> | notificationRoadMapCreateWithoutUserNotificationRoadMapByIdRoadMapInput[] | notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdRoadMapInput[]
    connectOrCreate?: notificationRoadMapCreateOrConnectWithoutUserNotificationRoadMapByIdRoadMapInput | notificationRoadMapCreateOrConnectWithoutUserNotificationRoadMapByIdRoadMapInput[]
    upsert?: notificationRoadMapUpsertWithWhereUniqueWithoutUserNotificationRoadMapByIdRoadMapInput | notificationRoadMapUpsertWithWhereUniqueWithoutUserNotificationRoadMapByIdRoadMapInput[]
    createMany?: notificationRoadMapCreateManyUserNotificationRoadMapByIdRoadMapInputEnvelope
    set?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
    disconnect?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
    delete?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
    connect?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
    update?: notificationRoadMapUpdateWithWhereUniqueWithoutUserNotificationRoadMapByIdRoadMapInput | notificationRoadMapUpdateWithWhereUniqueWithoutUserNotificationRoadMapByIdRoadMapInput[]
    updateMany?: notificationRoadMapUpdateManyWithWhereWithoutUserNotificationRoadMapByIdRoadMapInput | notificationRoadMapUpdateManyWithWhereWithoutUserNotificationRoadMapByIdRoadMapInput[]
    deleteMany?: notificationRoadMapScalarWhereInput | notificationRoadMapScalarWhereInput[]
  }

  export type AvaliationRoadMapUncheckedUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput = {
    create?: XOR<AvaliationRoadMapCreateWithoutUserRoadMapByIdRoadMapInput, AvaliationRoadMapUncheckedCreateWithoutUserRoadMapByIdRoadMapInput> | AvaliationRoadMapCreateWithoutUserRoadMapByIdRoadMapInput[] | AvaliationRoadMapUncheckedCreateWithoutUserRoadMapByIdRoadMapInput[]
    connectOrCreate?: AvaliationRoadMapCreateOrConnectWithoutUserRoadMapByIdRoadMapInput | AvaliationRoadMapCreateOrConnectWithoutUserRoadMapByIdRoadMapInput[]
    upsert?: AvaliationRoadMapUpsertWithWhereUniqueWithoutUserRoadMapByIdRoadMapInput | AvaliationRoadMapUpsertWithWhereUniqueWithoutUserRoadMapByIdRoadMapInput[]
    createMany?: AvaliationRoadMapCreateManyUserRoadMapByIdRoadMapInputEnvelope
    set?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    disconnect?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    delete?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    connect?: AvaliationRoadMapWhereUniqueInput | AvaliationRoadMapWhereUniqueInput[]
    update?: AvaliationRoadMapUpdateWithWhereUniqueWithoutUserRoadMapByIdRoadMapInput | AvaliationRoadMapUpdateWithWhereUniqueWithoutUserRoadMapByIdRoadMapInput[]
    updateMany?: AvaliationRoadMapUpdateManyWithWhereWithoutUserRoadMapByIdRoadMapInput | AvaliationRoadMapUpdateManyWithWhereWithoutUserRoadMapByIdRoadMapInput[]
    deleteMany?: AvaliationRoadMapScalarWhereInput | AvaliationRoadMapScalarWhereInput[]
  }

  export type CommentRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput = {
    create?: XOR<CommentRoadMapCreateWithoutUserRoadMapByRoadMapIdInput, CommentRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput> | CommentRoadMapCreateWithoutUserRoadMapByRoadMapIdInput[] | CommentRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput[]
    connectOrCreate?: CommentRoadMapCreateOrConnectWithoutUserRoadMapByRoadMapIdInput | CommentRoadMapCreateOrConnectWithoutUserRoadMapByRoadMapIdInput[]
    upsert?: CommentRoadMapUpsertWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput | CommentRoadMapUpsertWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput[]
    createMany?: CommentRoadMapCreateManyUserRoadMapByRoadMapIdInputEnvelope
    set?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    disconnect?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    delete?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    connect?: CommentRoadMapWhereUniqueInput | CommentRoadMapWhereUniqueInput[]
    update?: CommentRoadMapUpdateWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput | CommentRoadMapUpdateWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput[]
    updateMany?: CommentRoadMapUpdateManyWithWhereWithoutUserRoadMapByRoadMapIdInput | CommentRoadMapUpdateManyWithWhereWithoutUserRoadMapByRoadMapIdInput[]
    deleteMany?: CommentRoadMapScalarWhereInput | CommentRoadMapScalarWhereInput[]
  }

  export type FavoriteRoadMapUncheckedUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput = {
    create?: XOR<FavoriteRoadMapCreateWithoutUserRoadMapPointByRoadMapIdInput, FavoriteRoadMapUncheckedCreateWithoutUserRoadMapPointByRoadMapIdInput> | FavoriteRoadMapCreateWithoutUserRoadMapPointByRoadMapIdInput[] | FavoriteRoadMapUncheckedCreateWithoutUserRoadMapPointByRoadMapIdInput[]
    connectOrCreate?: FavoriteRoadMapCreateOrConnectWithoutUserRoadMapPointByRoadMapIdInput | FavoriteRoadMapCreateOrConnectWithoutUserRoadMapPointByRoadMapIdInput[]
    upsert?: FavoriteRoadMapUpsertWithWhereUniqueWithoutUserRoadMapPointByRoadMapIdInput | FavoriteRoadMapUpsertWithWhereUniqueWithoutUserRoadMapPointByRoadMapIdInput[]
    createMany?: FavoriteRoadMapCreateManyUserRoadMapPointByRoadMapIdInputEnvelope
    set?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
    disconnect?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
    delete?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
    connect?: FavoriteRoadMapWhereUniqueInput | FavoriteRoadMapWhereUniqueInput[]
    update?: FavoriteRoadMapUpdateWithWhereUniqueWithoutUserRoadMapPointByRoadMapIdInput | FavoriteRoadMapUpdateWithWhereUniqueWithoutUserRoadMapPointByRoadMapIdInput[]
    updateMany?: FavoriteRoadMapUpdateManyWithWhereWithoutUserRoadMapPointByRoadMapIdInput | FavoriteRoadMapUpdateManyWithWhereWithoutUserRoadMapPointByRoadMapIdInput[]
    deleteMany?: FavoriteRoadMapScalarWhereInput | FavoriteRoadMapScalarWhereInput[]
  }

  export type ImageRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput = {
    create?: XOR<ImageRoadMapCreateWithoutUserRoadMapByRoadMapIdInput, ImageRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput> | ImageRoadMapCreateWithoutUserRoadMapByRoadMapIdInput[] | ImageRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput[]
    connectOrCreate?: ImageRoadMapCreateOrConnectWithoutUserRoadMapByRoadMapIdInput | ImageRoadMapCreateOrConnectWithoutUserRoadMapByRoadMapIdInput[]
    upsert?: ImageRoadMapUpsertWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput | ImageRoadMapUpsertWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput[]
    createMany?: ImageRoadMapCreateManyUserRoadMapByRoadMapIdInputEnvelope
    set?: ImageRoadMapWhereUniqueInput | ImageRoadMapWhereUniqueInput[]
    disconnect?: ImageRoadMapWhereUniqueInput | ImageRoadMapWhereUniqueInput[]
    delete?: ImageRoadMapWhereUniqueInput | ImageRoadMapWhereUniqueInput[]
    connect?: ImageRoadMapWhereUniqueInput | ImageRoadMapWhereUniqueInput[]
    update?: ImageRoadMapUpdateWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput | ImageRoadMapUpdateWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput[]
    updateMany?: ImageRoadMapUpdateManyWithWhereWithoutUserRoadMapByRoadMapIdInput | ImageRoadMapUpdateManyWithWhereWithoutUserRoadMapByRoadMapIdInput[]
    deleteMany?: ImageRoadMapScalarWhereInput | ImageRoadMapScalarWhereInput[]
  }

  export type Ponto_TuristicoUncheckedUpdateManyWithoutRoadMapRelationNestedInput = {
    create?: XOR<Ponto_TuristicoCreateWithoutRoadMapRelationInput, Ponto_TuristicoUncheckedCreateWithoutRoadMapRelationInput> | Ponto_TuristicoCreateWithoutRoadMapRelationInput[] | Ponto_TuristicoUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: Ponto_TuristicoCreateOrConnectWithoutRoadMapRelationInput | Ponto_TuristicoCreateOrConnectWithoutRoadMapRelationInput[]
    upsert?: Ponto_TuristicoUpsertWithWhereUniqueWithoutRoadMapRelationInput | Ponto_TuristicoUpsertWithWhereUniqueWithoutRoadMapRelationInput[]
    set?: Ponto_TuristicoWhereUniqueInput | Ponto_TuristicoWhereUniqueInput[]
    disconnect?: Ponto_TuristicoWhereUniqueInput | Ponto_TuristicoWhereUniqueInput[]
    delete?: Ponto_TuristicoWhereUniqueInput | Ponto_TuristicoWhereUniqueInput[]
    connect?: Ponto_TuristicoWhereUniqueInput | Ponto_TuristicoWhereUniqueInput[]
    update?: Ponto_TuristicoUpdateWithWhereUniqueWithoutRoadMapRelationInput | Ponto_TuristicoUpdateWithWhereUniqueWithoutRoadMapRelationInput[]
    updateMany?: Ponto_TuristicoUpdateManyWithWhereWithoutRoadMapRelationInput | Ponto_TuristicoUpdateManyWithWhereWithoutRoadMapRelationInput[]
    deleteMany?: Ponto_TuristicoScalarWhereInput | Ponto_TuristicoScalarWhereInput[]
  }

  export type Ponto_ComercialUncheckedUpdateManyWithoutRoadMapRelationNestedInput = {
    create?: XOR<Ponto_ComercialCreateWithoutRoadMapRelationInput, Ponto_ComercialUncheckedCreateWithoutRoadMapRelationInput> | Ponto_ComercialCreateWithoutRoadMapRelationInput[] | Ponto_ComercialUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: Ponto_ComercialCreateOrConnectWithoutRoadMapRelationInput | Ponto_ComercialCreateOrConnectWithoutRoadMapRelationInput[]
    upsert?: Ponto_ComercialUpsertWithWhereUniqueWithoutRoadMapRelationInput | Ponto_ComercialUpsertWithWhereUniqueWithoutRoadMapRelationInput[]
    set?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
    disconnect?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
    delete?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
    connect?: Ponto_ComercialWhereUniqueInput | Ponto_ComercialWhereUniqueInput[]
    update?: Ponto_ComercialUpdateWithWhereUniqueWithoutRoadMapRelationInput | Ponto_ComercialUpdateWithWhereUniqueWithoutRoadMapRelationInput[]
    updateMany?: Ponto_ComercialUpdateManyWithWhereWithoutRoadMapRelationInput | Ponto_ComercialUpdateManyWithWhereWithoutRoadMapRelationInput[]
    deleteMany?: Ponto_ComercialScalarWhereInput | Ponto_ComercialScalarWhereInput[]
  }

  export type CountryUncheckedUpdateManyWithoutRoadMapRelationNestedInput = {
    create?: XOR<CountryCreateWithoutRoadMapRelationInput, CountryUncheckedCreateWithoutRoadMapRelationInput> | CountryCreateWithoutRoadMapRelationInput[] | CountryUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: CountryCreateOrConnectWithoutRoadMapRelationInput | CountryCreateOrConnectWithoutRoadMapRelationInput[]
    upsert?: CountryUpsertWithWhereUniqueWithoutRoadMapRelationInput | CountryUpsertWithWhereUniqueWithoutRoadMapRelationInput[]
    set?: CountryWhereUniqueInput | CountryWhereUniqueInput[]
    disconnect?: CountryWhereUniqueInput | CountryWhereUniqueInput[]
    delete?: CountryWhereUniqueInput | CountryWhereUniqueInput[]
    connect?: CountryWhereUniqueInput | CountryWhereUniqueInput[]
    update?: CountryUpdateWithWhereUniqueWithoutRoadMapRelationInput | CountryUpdateWithWhereUniqueWithoutRoadMapRelationInput[]
    updateMany?: CountryUpdateManyWithWhereWithoutRoadMapRelationInput | CountryUpdateManyWithWhereWithoutRoadMapRelationInput[]
    deleteMany?: CountryScalarWhereInput | CountryScalarWhereInput[]
  }

  export type StateUncheckedUpdateManyWithoutRoadMapRelationNestedInput = {
    create?: XOR<StateCreateWithoutRoadMapRelationInput, StateUncheckedCreateWithoutRoadMapRelationInput> | StateCreateWithoutRoadMapRelationInput[] | StateUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: StateCreateOrConnectWithoutRoadMapRelationInput | StateCreateOrConnectWithoutRoadMapRelationInput[]
    upsert?: StateUpsertWithWhereUniqueWithoutRoadMapRelationInput | StateUpsertWithWhereUniqueWithoutRoadMapRelationInput[]
    set?: StateWhereUniqueInput | StateWhereUniqueInput[]
    disconnect?: StateWhereUniqueInput | StateWhereUniqueInput[]
    delete?: StateWhereUniqueInput | StateWhereUniqueInput[]
    connect?: StateWhereUniqueInput | StateWhereUniqueInput[]
    update?: StateUpdateWithWhereUniqueWithoutRoadMapRelationInput | StateUpdateWithWhereUniqueWithoutRoadMapRelationInput[]
    updateMany?: StateUpdateManyWithWhereWithoutRoadMapRelationInput | StateUpdateManyWithWhereWithoutRoadMapRelationInput[]
    deleteMany?: StateScalarWhereInput | StateScalarWhereInput[]
  }

  export type CityUncheckedUpdateManyWithoutRoadMapRelationNestedInput = {
    create?: XOR<CityCreateWithoutRoadMapRelationInput, CityUncheckedCreateWithoutRoadMapRelationInput> | CityCreateWithoutRoadMapRelationInput[] | CityUncheckedCreateWithoutRoadMapRelationInput[]
    connectOrCreate?: CityCreateOrConnectWithoutRoadMapRelationInput | CityCreateOrConnectWithoutRoadMapRelationInput[]
    upsert?: CityUpsertWithWhereUniqueWithoutRoadMapRelationInput | CityUpsertWithWhereUniqueWithoutRoadMapRelationInput[]
    set?: CityWhereUniqueInput | CityWhereUniqueInput[]
    disconnect?: CityWhereUniqueInput | CityWhereUniqueInput[]
    delete?: CityWhereUniqueInput | CityWhereUniqueInput[]
    connect?: CityWhereUniqueInput | CityWhereUniqueInput[]
    update?: CityUpdateWithWhereUniqueWithoutRoadMapRelationInput | CityUpdateWithWhereUniqueWithoutRoadMapRelationInput[]
    updateMany?: CityUpdateManyWithWhereWithoutRoadMapRelationInput | CityUpdateManyWithWhereWithoutRoadMapRelationInput[]
    deleteMany?: CityScalarWhereInput | CityScalarWhereInput[]
  }

  export type reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput = {
    create?: XOR<reportRoadMapCreateWithoutUserReportRoadMapByIdRoadMapInput, reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdRoadMapInput> | reportRoadMapCreateWithoutUserReportRoadMapByIdRoadMapInput[] | reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdRoadMapInput[]
    connectOrCreate?: reportRoadMapCreateOrConnectWithoutUserReportRoadMapByIdRoadMapInput | reportRoadMapCreateOrConnectWithoutUserReportRoadMapByIdRoadMapInput[]
    upsert?: reportRoadMapUpsertWithWhereUniqueWithoutUserReportRoadMapByIdRoadMapInput | reportRoadMapUpsertWithWhereUniqueWithoutUserReportRoadMapByIdRoadMapInput[]
    createMany?: reportRoadMapCreateManyUserReportRoadMapByIdRoadMapInputEnvelope
    set?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
    disconnect?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
    delete?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
    connect?: reportRoadMapWhereUniqueInput | reportRoadMapWhereUniqueInput[]
    update?: reportRoadMapUpdateWithWhereUniqueWithoutUserReportRoadMapByIdRoadMapInput | reportRoadMapUpdateWithWhereUniqueWithoutUserReportRoadMapByIdRoadMapInput[]
    updateMany?: reportRoadMapUpdateManyWithWhereWithoutUserReportRoadMapByIdRoadMapInput | reportRoadMapUpdateManyWithWhereWithoutUserReportRoadMapByIdRoadMapInput[]
    deleteMany?: reportRoadMapScalarWhereInput | reportRoadMapScalarWhereInput[]
  }

  export type notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput = {
    create?: XOR<notificationRoadMapCreateWithoutUserNotificationRoadMapByIdRoadMapInput, notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdRoadMapInput> | notificationRoadMapCreateWithoutUserNotificationRoadMapByIdRoadMapInput[] | notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdRoadMapInput[]
    connectOrCreate?: notificationRoadMapCreateOrConnectWithoutUserNotificationRoadMapByIdRoadMapInput | notificationRoadMapCreateOrConnectWithoutUserNotificationRoadMapByIdRoadMapInput[]
    upsert?: notificationRoadMapUpsertWithWhereUniqueWithoutUserNotificationRoadMapByIdRoadMapInput | notificationRoadMapUpsertWithWhereUniqueWithoutUserNotificationRoadMapByIdRoadMapInput[]
    createMany?: notificationRoadMapCreateManyUserNotificationRoadMapByIdRoadMapInputEnvelope
    set?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
    disconnect?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
    delete?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
    connect?: notificationRoadMapWhereUniqueInput | notificationRoadMapWhereUniqueInput[]
    update?: notificationRoadMapUpdateWithWhereUniqueWithoutUserNotificationRoadMapByIdRoadMapInput | notificationRoadMapUpdateWithWhereUniqueWithoutUserNotificationRoadMapByIdRoadMapInput[]
    updateMany?: notificationRoadMapUpdateManyWithWhereWithoutUserNotificationRoadMapByIdRoadMapInput | notificationRoadMapUpdateManyWithWhereWithoutUserNotificationRoadMapByIdRoadMapInput[]
    deleteMany?: notificationRoadMapScalarWhereInput | notificationRoadMapScalarWhereInput[]
  }

  export type StateCreateNestedManyWithoutCountryByCountryNameInput = {
    create?: XOR<StateCreateWithoutCountryByCountryNameInput, StateUncheckedCreateWithoutCountryByCountryNameInput> | StateCreateWithoutCountryByCountryNameInput[] | StateUncheckedCreateWithoutCountryByCountryNameInput[]
    connectOrCreate?: StateCreateOrConnectWithoutCountryByCountryNameInput | StateCreateOrConnectWithoutCountryByCountryNameInput[]
    createMany?: StateCreateManyCountryByCountryNameInputEnvelope
    connect?: StateWhereUniqueInput | StateWhereUniqueInput[]
  }

  export type CityCreateNestedManyWithoutCityByCountryNameInput = {
    create?: XOR<CityCreateWithoutCityByCountryNameInput, CityUncheckedCreateWithoutCityByCountryNameInput> | CityCreateWithoutCityByCountryNameInput[] | CityUncheckedCreateWithoutCityByCountryNameInput[]
    connectOrCreate?: CityCreateOrConnectWithoutCityByCountryNameInput | CityCreateOrConnectWithoutCityByCountryNameInput[]
    createMany?: CityCreateManyCityByCountryNameInputEnvelope
    connect?: CityWhereUniqueInput | CityWhereUniqueInput[]
  }

  export type Travel_Road_MapCreateNestedManyWithoutCountryRelationInput = {
    create?: XOR<Travel_Road_MapCreateWithoutCountryRelationInput, Travel_Road_MapUncheckedCreateWithoutCountryRelationInput> | Travel_Road_MapCreateWithoutCountryRelationInput[] | Travel_Road_MapUncheckedCreateWithoutCountryRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutCountryRelationInput | Travel_Road_MapCreateOrConnectWithoutCountryRelationInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
  }

  export type StateUncheckedCreateNestedManyWithoutCountryByCountryNameInput = {
    create?: XOR<StateCreateWithoutCountryByCountryNameInput, StateUncheckedCreateWithoutCountryByCountryNameInput> | StateCreateWithoutCountryByCountryNameInput[] | StateUncheckedCreateWithoutCountryByCountryNameInput[]
    connectOrCreate?: StateCreateOrConnectWithoutCountryByCountryNameInput | StateCreateOrConnectWithoutCountryByCountryNameInput[]
    createMany?: StateCreateManyCountryByCountryNameInputEnvelope
    connect?: StateWhereUniqueInput | StateWhereUniqueInput[]
  }

  export type CityUncheckedCreateNestedManyWithoutCityByCountryNameInput = {
    create?: XOR<CityCreateWithoutCityByCountryNameInput, CityUncheckedCreateWithoutCityByCountryNameInput> | CityCreateWithoutCityByCountryNameInput[] | CityUncheckedCreateWithoutCityByCountryNameInput[]
    connectOrCreate?: CityCreateOrConnectWithoutCityByCountryNameInput | CityCreateOrConnectWithoutCityByCountryNameInput[]
    createMany?: CityCreateManyCityByCountryNameInputEnvelope
    connect?: CityWhereUniqueInput | CityWhereUniqueInput[]
  }

  export type Travel_Road_MapUncheckedCreateNestedManyWithoutCountryRelationInput = {
    create?: XOR<Travel_Road_MapCreateWithoutCountryRelationInput, Travel_Road_MapUncheckedCreateWithoutCountryRelationInput> | Travel_Road_MapCreateWithoutCountryRelationInput[] | Travel_Road_MapUncheckedCreateWithoutCountryRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutCountryRelationInput | Travel_Road_MapCreateOrConnectWithoutCountryRelationInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
  }

  export type StateUpdateManyWithoutCountryByCountryNameNestedInput = {
    create?: XOR<StateCreateWithoutCountryByCountryNameInput, StateUncheckedCreateWithoutCountryByCountryNameInput> | StateCreateWithoutCountryByCountryNameInput[] | StateUncheckedCreateWithoutCountryByCountryNameInput[]
    connectOrCreate?: StateCreateOrConnectWithoutCountryByCountryNameInput | StateCreateOrConnectWithoutCountryByCountryNameInput[]
    upsert?: StateUpsertWithWhereUniqueWithoutCountryByCountryNameInput | StateUpsertWithWhereUniqueWithoutCountryByCountryNameInput[]
    createMany?: StateCreateManyCountryByCountryNameInputEnvelope
    set?: StateWhereUniqueInput | StateWhereUniqueInput[]
    disconnect?: StateWhereUniqueInput | StateWhereUniqueInput[]
    delete?: StateWhereUniqueInput | StateWhereUniqueInput[]
    connect?: StateWhereUniqueInput | StateWhereUniqueInput[]
    update?: StateUpdateWithWhereUniqueWithoutCountryByCountryNameInput | StateUpdateWithWhereUniqueWithoutCountryByCountryNameInput[]
    updateMany?: StateUpdateManyWithWhereWithoutCountryByCountryNameInput | StateUpdateManyWithWhereWithoutCountryByCountryNameInput[]
    deleteMany?: StateScalarWhereInput | StateScalarWhereInput[]
  }

  export type CityUpdateManyWithoutCityByCountryNameNestedInput = {
    create?: XOR<CityCreateWithoutCityByCountryNameInput, CityUncheckedCreateWithoutCityByCountryNameInput> | CityCreateWithoutCityByCountryNameInput[] | CityUncheckedCreateWithoutCityByCountryNameInput[]
    connectOrCreate?: CityCreateOrConnectWithoutCityByCountryNameInput | CityCreateOrConnectWithoutCityByCountryNameInput[]
    upsert?: CityUpsertWithWhereUniqueWithoutCityByCountryNameInput | CityUpsertWithWhereUniqueWithoutCityByCountryNameInput[]
    createMany?: CityCreateManyCityByCountryNameInputEnvelope
    set?: CityWhereUniqueInput | CityWhereUniqueInput[]
    disconnect?: CityWhereUniqueInput | CityWhereUniqueInput[]
    delete?: CityWhereUniqueInput | CityWhereUniqueInput[]
    connect?: CityWhereUniqueInput | CityWhereUniqueInput[]
    update?: CityUpdateWithWhereUniqueWithoutCityByCountryNameInput | CityUpdateWithWhereUniqueWithoutCityByCountryNameInput[]
    updateMany?: CityUpdateManyWithWhereWithoutCityByCountryNameInput | CityUpdateManyWithWhereWithoutCityByCountryNameInput[]
    deleteMany?: CityScalarWhereInput | CityScalarWhereInput[]
  }

  export type Travel_Road_MapUpdateManyWithoutCountryRelationNestedInput = {
    create?: XOR<Travel_Road_MapCreateWithoutCountryRelationInput, Travel_Road_MapUncheckedCreateWithoutCountryRelationInput> | Travel_Road_MapCreateWithoutCountryRelationInput[] | Travel_Road_MapUncheckedCreateWithoutCountryRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutCountryRelationInput | Travel_Road_MapCreateOrConnectWithoutCountryRelationInput[]
    upsert?: Travel_Road_MapUpsertWithWhereUniqueWithoutCountryRelationInput | Travel_Road_MapUpsertWithWhereUniqueWithoutCountryRelationInput[]
    set?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    disconnect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    delete?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    update?: Travel_Road_MapUpdateWithWhereUniqueWithoutCountryRelationInput | Travel_Road_MapUpdateWithWhereUniqueWithoutCountryRelationInput[]
    updateMany?: Travel_Road_MapUpdateManyWithWhereWithoutCountryRelationInput | Travel_Road_MapUpdateManyWithWhereWithoutCountryRelationInput[]
    deleteMany?: Travel_Road_MapScalarWhereInput | Travel_Road_MapScalarWhereInput[]
  }

  export type StateUncheckedUpdateManyWithoutCountryByCountryNameNestedInput = {
    create?: XOR<StateCreateWithoutCountryByCountryNameInput, StateUncheckedCreateWithoutCountryByCountryNameInput> | StateCreateWithoutCountryByCountryNameInput[] | StateUncheckedCreateWithoutCountryByCountryNameInput[]
    connectOrCreate?: StateCreateOrConnectWithoutCountryByCountryNameInput | StateCreateOrConnectWithoutCountryByCountryNameInput[]
    upsert?: StateUpsertWithWhereUniqueWithoutCountryByCountryNameInput | StateUpsertWithWhereUniqueWithoutCountryByCountryNameInput[]
    createMany?: StateCreateManyCountryByCountryNameInputEnvelope
    set?: StateWhereUniqueInput | StateWhereUniqueInput[]
    disconnect?: StateWhereUniqueInput | StateWhereUniqueInput[]
    delete?: StateWhereUniqueInput | StateWhereUniqueInput[]
    connect?: StateWhereUniqueInput | StateWhereUniqueInput[]
    update?: StateUpdateWithWhereUniqueWithoutCountryByCountryNameInput | StateUpdateWithWhereUniqueWithoutCountryByCountryNameInput[]
    updateMany?: StateUpdateManyWithWhereWithoutCountryByCountryNameInput | StateUpdateManyWithWhereWithoutCountryByCountryNameInput[]
    deleteMany?: StateScalarWhereInput | StateScalarWhereInput[]
  }

  export type CityUncheckedUpdateManyWithoutCityByCountryNameNestedInput = {
    create?: XOR<CityCreateWithoutCityByCountryNameInput, CityUncheckedCreateWithoutCityByCountryNameInput> | CityCreateWithoutCityByCountryNameInput[] | CityUncheckedCreateWithoutCityByCountryNameInput[]
    connectOrCreate?: CityCreateOrConnectWithoutCityByCountryNameInput | CityCreateOrConnectWithoutCityByCountryNameInput[]
    upsert?: CityUpsertWithWhereUniqueWithoutCityByCountryNameInput | CityUpsertWithWhereUniqueWithoutCityByCountryNameInput[]
    createMany?: CityCreateManyCityByCountryNameInputEnvelope
    set?: CityWhereUniqueInput | CityWhereUniqueInput[]
    disconnect?: CityWhereUniqueInput | CityWhereUniqueInput[]
    delete?: CityWhereUniqueInput | CityWhereUniqueInput[]
    connect?: CityWhereUniqueInput | CityWhereUniqueInput[]
    update?: CityUpdateWithWhereUniqueWithoutCityByCountryNameInput | CityUpdateWithWhereUniqueWithoutCityByCountryNameInput[]
    updateMany?: CityUpdateManyWithWhereWithoutCityByCountryNameInput | CityUpdateManyWithWhereWithoutCityByCountryNameInput[]
    deleteMany?: CityScalarWhereInput | CityScalarWhereInput[]
  }

  export type Travel_Road_MapUncheckedUpdateManyWithoutCountryRelationNestedInput = {
    create?: XOR<Travel_Road_MapCreateWithoutCountryRelationInput, Travel_Road_MapUncheckedCreateWithoutCountryRelationInput> | Travel_Road_MapCreateWithoutCountryRelationInput[] | Travel_Road_MapUncheckedCreateWithoutCountryRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutCountryRelationInput | Travel_Road_MapCreateOrConnectWithoutCountryRelationInput[]
    upsert?: Travel_Road_MapUpsertWithWhereUniqueWithoutCountryRelationInput | Travel_Road_MapUpsertWithWhereUniqueWithoutCountryRelationInput[]
    set?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    disconnect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    delete?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    update?: Travel_Road_MapUpdateWithWhereUniqueWithoutCountryRelationInput | Travel_Road_MapUpdateWithWhereUniqueWithoutCountryRelationInput[]
    updateMany?: Travel_Road_MapUpdateManyWithWhereWithoutCountryRelationInput | Travel_Road_MapUpdateManyWithWhereWithoutCountryRelationInput[]
    deleteMany?: Travel_Road_MapScalarWhereInput | Travel_Road_MapScalarWhereInput[]
  }

  export type CountryCreateNestedOneWithoutStateByCountryNameInput = {
    create?: XOR<CountryCreateWithoutStateByCountryNameInput, CountryUncheckedCreateWithoutStateByCountryNameInput>
    connectOrCreate?: CountryCreateOrConnectWithoutStateByCountryNameInput
    connect?: CountryWhereUniqueInput
  }

  export type CityCreateNestedManyWithoutStateByStateNameInput = {
    create?: XOR<CityCreateWithoutStateByStateNameInput, CityUncheckedCreateWithoutStateByStateNameInput> | CityCreateWithoutStateByStateNameInput[] | CityUncheckedCreateWithoutStateByStateNameInput[]
    connectOrCreate?: CityCreateOrConnectWithoutStateByStateNameInput | CityCreateOrConnectWithoutStateByStateNameInput[]
    createMany?: CityCreateManyStateByStateNameInputEnvelope
    connect?: CityWhereUniqueInput | CityWhereUniqueInput[]
  }

  export type Travel_Road_MapCreateNestedManyWithoutStateRelationInput = {
    create?: XOR<Travel_Road_MapCreateWithoutStateRelationInput, Travel_Road_MapUncheckedCreateWithoutStateRelationInput> | Travel_Road_MapCreateWithoutStateRelationInput[] | Travel_Road_MapUncheckedCreateWithoutStateRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutStateRelationInput | Travel_Road_MapCreateOrConnectWithoutStateRelationInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
  }

  export type CityUncheckedCreateNestedManyWithoutStateByStateNameInput = {
    create?: XOR<CityCreateWithoutStateByStateNameInput, CityUncheckedCreateWithoutStateByStateNameInput> | CityCreateWithoutStateByStateNameInput[] | CityUncheckedCreateWithoutStateByStateNameInput[]
    connectOrCreate?: CityCreateOrConnectWithoutStateByStateNameInput | CityCreateOrConnectWithoutStateByStateNameInput[]
    createMany?: CityCreateManyStateByStateNameInputEnvelope
    connect?: CityWhereUniqueInput | CityWhereUniqueInput[]
  }

  export type Travel_Road_MapUncheckedCreateNestedManyWithoutStateRelationInput = {
    create?: XOR<Travel_Road_MapCreateWithoutStateRelationInput, Travel_Road_MapUncheckedCreateWithoutStateRelationInput> | Travel_Road_MapCreateWithoutStateRelationInput[] | Travel_Road_MapUncheckedCreateWithoutStateRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutStateRelationInput | Travel_Road_MapCreateOrConnectWithoutStateRelationInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
  }

  export type CountryUpdateOneRequiredWithoutStateByCountryNameNestedInput = {
    create?: XOR<CountryCreateWithoutStateByCountryNameInput, CountryUncheckedCreateWithoutStateByCountryNameInput>
    connectOrCreate?: CountryCreateOrConnectWithoutStateByCountryNameInput
    upsert?: CountryUpsertWithoutStateByCountryNameInput
    connect?: CountryWhereUniqueInput
    update?: XOR<XOR<CountryUpdateToOneWithWhereWithoutStateByCountryNameInput, CountryUpdateWithoutStateByCountryNameInput>, CountryUncheckedUpdateWithoutStateByCountryNameInput>
  }

  export type CityUpdateManyWithoutStateByStateNameNestedInput = {
    create?: XOR<CityCreateWithoutStateByStateNameInput, CityUncheckedCreateWithoutStateByStateNameInput> | CityCreateWithoutStateByStateNameInput[] | CityUncheckedCreateWithoutStateByStateNameInput[]
    connectOrCreate?: CityCreateOrConnectWithoutStateByStateNameInput | CityCreateOrConnectWithoutStateByStateNameInput[]
    upsert?: CityUpsertWithWhereUniqueWithoutStateByStateNameInput | CityUpsertWithWhereUniqueWithoutStateByStateNameInput[]
    createMany?: CityCreateManyStateByStateNameInputEnvelope
    set?: CityWhereUniqueInput | CityWhereUniqueInput[]
    disconnect?: CityWhereUniqueInput | CityWhereUniqueInput[]
    delete?: CityWhereUniqueInput | CityWhereUniqueInput[]
    connect?: CityWhereUniqueInput | CityWhereUniqueInput[]
    update?: CityUpdateWithWhereUniqueWithoutStateByStateNameInput | CityUpdateWithWhereUniqueWithoutStateByStateNameInput[]
    updateMany?: CityUpdateManyWithWhereWithoutStateByStateNameInput | CityUpdateManyWithWhereWithoutStateByStateNameInput[]
    deleteMany?: CityScalarWhereInput | CityScalarWhereInput[]
  }

  export type Travel_Road_MapUpdateManyWithoutStateRelationNestedInput = {
    create?: XOR<Travel_Road_MapCreateWithoutStateRelationInput, Travel_Road_MapUncheckedCreateWithoutStateRelationInput> | Travel_Road_MapCreateWithoutStateRelationInput[] | Travel_Road_MapUncheckedCreateWithoutStateRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutStateRelationInput | Travel_Road_MapCreateOrConnectWithoutStateRelationInput[]
    upsert?: Travel_Road_MapUpsertWithWhereUniqueWithoutStateRelationInput | Travel_Road_MapUpsertWithWhereUniqueWithoutStateRelationInput[]
    set?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    disconnect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    delete?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    update?: Travel_Road_MapUpdateWithWhereUniqueWithoutStateRelationInput | Travel_Road_MapUpdateWithWhereUniqueWithoutStateRelationInput[]
    updateMany?: Travel_Road_MapUpdateManyWithWhereWithoutStateRelationInput | Travel_Road_MapUpdateManyWithWhereWithoutStateRelationInput[]
    deleteMany?: Travel_Road_MapScalarWhereInput | Travel_Road_MapScalarWhereInput[]
  }

  export type CityUncheckedUpdateManyWithoutStateByStateNameNestedInput = {
    create?: XOR<CityCreateWithoutStateByStateNameInput, CityUncheckedCreateWithoutStateByStateNameInput> | CityCreateWithoutStateByStateNameInput[] | CityUncheckedCreateWithoutStateByStateNameInput[]
    connectOrCreate?: CityCreateOrConnectWithoutStateByStateNameInput | CityCreateOrConnectWithoutStateByStateNameInput[]
    upsert?: CityUpsertWithWhereUniqueWithoutStateByStateNameInput | CityUpsertWithWhereUniqueWithoutStateByStateNameInput[]
    createMany?: CityCreateManyStateByStateNameInputEnvelope
    set?: CityWhereUniqueInput | CityWhereUniqueInput[]
    disconnect?: CityWhereUniqueInput | CityWhereUniqueInput[]
    delete?: CityWhereUniqueInput | CityWhereUniqueInput[]
    connect?: CityWhereUniqueInput | CityWhereUniqueInput[]
    update?: CityUpdateWithWhereUniqueWithoutStateByStateNameInput | CityUpdateWithWhereUniqueWithoutStateByStateNameInput[]
    updateMany?: CityUpdateManyWithWhereWithoutStateByStateNameInput | CityUpdateManyWithWhereWithoutStateByStateNameInput[]
    deleteMany?: CityScalarWhereInput | CityScalarWhereInput[]
  }

  export type Travel_Road_MapUncheckedUpdateManyWithoutStateRelationNestedInput = {
    create?: XOR<Travel_Road_MapCreateWithoutStateRelationInput, Travel_Road_MapUncheckedCreateWithoutStateRelationInput> | Travel_Road_MapCreateWithoutStateRelationInput[] | Travel_Road_MapUncheckedCreateWithoutStateRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutStateRelationInput | Travel_Road_MapCreateOrConnectWithoutStateRelationInput[]
    upsert?: Travel_Road_MapUpsertWithWhereUniqueWithoutStateRelationInput | Travel_Road_MapUpsertWithWhereUniqueWithoutStateRelationInput[]
    set?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    disconnect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    delete?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    update?: Travel_Road_MapUpdateWithWhereUniqueWithoutStateRelationInput | Travel_Road_MapUpdateWithWhereUniqueWithoutStateRelationInput[]
    updateMany?: Travel_Road_MapUpdateManyWithWhereWithoutStateRelationInput | Travel_Road_MapUpdateManyWithWhereWithoutStateRelationInput[]
    deleteMany?: Travel_Road_MapScalarWhereInput | Travel_Road_MapScalarWhereInput[]
  }

  export type StateCreateNestedOneWithoutStateByStateNameInput = {
    create?: XOR<StateCreateWithoutStateByStateNameInput, StateUncheckedCreateWithoutStateByStateNameInput>
    connectOrCreate?: StateCreateOrConnectWithoutStateByStateNameInput
    connect?: StateWhereUniqueInput
  }

  export type CountryCreateNestedOneWithoutCityByCountryNameInput = {
    create?: XOR<CountryCreateWithoutCityByCountryNameInput, CountryUncheckedCreateWithoutCityByCountryNameInput>
    connectOrCreate?: CountryCreateOrConnectWithoutCityByCountryNameInput
    connect?: CountryWhereUniqueInput
  }

  export type Travel_Road_MapCreateNestedManyWithoutCityRelationInput = {
    create?: XOR<Travel_Road_MapCreateWithoutCityRelationInput, Travel_Road_MapUncheckedCreateWithoutCityRelationInput> | Travel_Road_MapCreateWithoutCityRelationInput[] | Travel_Road_MapUncheckedCreateWithoutCityRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutCityRelationInput | Travel_Road_MapCreateOrConnectWithoutCityRelationInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
  }

  export type Travel_Road_MapUncheckedCreateNestedManyWithoutCityRelationInput = {
    create?: XOR<Travel_Road_MapCreateWithoutCityRelationInput, Travel_Road_MapUncheckedCreateWithoutCityRelationInput> | Travel_Road_MapCreateWithoutCityRelationInput[] | Travel_Road_MapUncheckedCreateWithoutCityRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutCityRelationInput | Travel_Road_MapCreateOrConnectWithoutCityRelationInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
  }

  export type StateUpdateOneRequiredWithoutStateByStateNameNestedInput = {
    create?: XOR<StateCreateWithoutStateByStateNameInput, StateUncheckedCreateWithoutStateByStateNameInput>
    connectOrCreate?: StateCreateOrConnectWithoutStateByStateNameInput
    upsert?: StateUpsertWithoutStateByStateNameInput
    connect?: StateWhereUniqueInput
    update?: XOR<XOR<StateUpdateToOneWithWhereWithoutStateByStateNameInput, StateUpdateWithoutStateByStateNameInput>, StateUncheckedUpdateWithoutStateByStateNameInput>
  }

  export type CountryUpdateOneRequiredWithoutCityByCountryNameNestedInput = {
    create?: XOR<CountryCreateWithoutCityByCountryNameInput, CountryUncheckedCreateWithoutCityByCountryNameInput>
    connectOrCreate?: CountryCreateOrConnectWithoutCityByCountryNameInput
    upsert?: CountryUpsertWithoutCityByCountryNameInput
    connect?: CountryWhereUniqueInput
    update?: XOR<XOR<CountryUpdateToOneWithWhereWithoutCityByCountryNameInput, CountryUpdateWithoutCityByCountryNameInput>, CountryUncheckedUpdateWithoutCityByCountryNameInput>
  }

  export type Travel_Road_MapUpdateManyWithoutCityRelationNestedInput = {
    create?: XOR<Travel_Road_MapCreateWithoutCityRelationInput, Travel_Road_MapUncheckedCreateWithoutCityRelationInput> | Travel_Road_MapCreateWithoutCityRelationInput[] | Travel_Road_MapUncheckedCreateWithoutCityRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutCityRelationInput | Travel_Road_MapCreateOrConnectWithoutCityRelationInput[]
    upsert?: Travel_Road_MapUpsertWithWhereUniqueWithoutCityRelationInput | Travel_Road_MapUpsertWithWhereUniqueWithoutCityRelationInput[]
    set?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    disconnect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    delete?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    update?: Travel_Road_MapUpdateWithWhereUniqueWithoutCityRelationInput | Travel_Road_MapUpdateWithWhereUniqueWithoutCityRelationInput[]
    updateMany?: Travel_Road_MapUpdateManyWithWhereWithoutCityRelationInput | Travel_Road_MapUpdateManyWithWhereWithoutCityRelationInput[]
    deleteMany?: Travel_Road_MapScalarWhereInput | Travel_Road_MapScalarWhereInput[]
  }

  export type Travel_Road_MapUncheckedUpdateManyWithoutCityRelationNestedInput = {
    create?: XOR<Travel_Road_MapCreateWithoutCityRelationInput, Travel_Road_MapUncheckedCreateWithoutCityRelationInput> | Travel_Road_MapCreateWithoutCityRelationInput[] | Travel_Road_MapUncheckedCreateWithoutCityRelationInput[]
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutCityRelationInput | Travel_Road_MapCreateOrConnectWithoutCityRelationInput[]
    upsert?: Travel_Road_MapUpsertWithWhereUniqueWithoutCityRelationInput | Travel_Road_MapUpsertWithWhereUniqueWithoutCityRelationInput[]
    set?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    disconnect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    delete?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    connect?: Travel_Road_MapWhereUniqueInput | Travel_Road_MapWhereUniqueInput[]
    update?: Travel_Road_MapUpdateWithWhereUniqueWithoutCityRelationInput | Travel_Road_MapUpdateWithWhereUniqueWithoutCityRelationInput[]
    updateMany?: Travel_Road_MapUpdateManyWithWhereWithoutCityRelationInput | Travel_Road_MapUpdateManyWithWhereWithoutCityRelationInput[]
    deleteMany?: Travel_Road_MapScalarWhereInput | Travel_Road_MapScalarWhereInput[]
  }

  export type Ponto_TuristicoCreateNestedOneWithoutImageTouristPointByTouristPointIdInput = {
    create?: XOR<Ponto_TuristicoCreateWithoutImageTouristPointByTouristPointIdInput, Ponto_TuristicoUncheckedCreateWithoutImageTouristPointByTouristPointIdInput>
    connectOrCreate?: Ponto_TuristicoCreateOrConnectWithoutImageTouristPointByTouristPointIdInput
    connect?: Ponto_TuristicoWhereUniqueInput
  }

  export type Ponto_TuristicoUpdateOneRequiredWithoutImageTouristPointByTouristPointIdNestedInput = {
    create?: XOR<Ponto_TuristicoCreateWithoutImageTouristPointByTouristPointIdInput, Ponto_TuristicoUncheckedCreateWithoutImageTouristPointByTouristPointIdInput>
    connectOrCreate?: Ponto_TuristicoCreateOrConnectWithoutImageTouristPointByTouristPointIdInput
    upsert?: Ponto_TuristicoUpsertWithoutImageTouristPointByTouristPointIdInput
    connect?: Ponto_TuristicoWhereUniqueInput
    update?: XOR<XOR<Ponto_TuristicoUpdateToOneWithWhereWithoutImageTouristPointByTouristPointIdInput, Ponto_TuristicoUpdateWithoutImageTouristPointByTouristPointIdInput>, Ponto_TuristicoUncheckedUpdateWithoutImageTouristPointByTouristPointIdInput>
  }

  export type Ponto_ComercialCreateNestedOneWithoutImageCommercialPointByCommercialPointIdInput = {
    create?: XOR<Ponto_ComercialCreateWithoutImageCommercialPointByCommercialPointIdInput, Ponto_ComercialUncheckedCreateWithoutImageCommercialPointByCommercialPointIdInput>
    connectOrCreate?: Ponto_ComercialCreateOrConnectWithoutImageCommercialPointByCommercialPointIdInput
    connect?: Ponto_ComercialWhereUniqueInput
  }

  export type Ponto_ComercialUpdateOneRequiredWithoutImageCommercialPointByCommercialPointIdNestedInput = {
    create?: XOR<Ponto_ComercialCreateWithoutImageCommercialPointByCommercialPointIdInput, Ponto_ComercialUncheckedCreateWithoutImageCommercialPointByCommercialPointIdInput>
    connectOrCreate?: Ponto_ComercialCreateOrConnectWithoutImageCommercialPointByCommercialPointIdInput
    upsert?: Ponto_ComercialUpsertWithoutImageCommercialPointByCommercialPointIdInput
    connect?: Ponto_ComercialWhereUniqueInput
    update?: XOR<XOR<Ponto_ComercialUpdateToOneWithWhereWithoutImageCommercialPointByCommercialPointIdInput, Ponto_ComercialUpdateWithoutImageCommercialPointByCommercialPointIdInput>, Ponto_ComercialUncheckedUpdateWithoutImageCommercialPointByCommercialPointIdInput>
  }

  export type Travel_Road_MapCreateNestedOneWithoutImageRoadMapByRoadMapIdInput = {
    create?: XOR<Travel_Road_MapCreateWithoutImageRoadMapByRoadMapIdInput, Travel_Road_MapUncheckedCreateWithoutImageRoadMapByRoadMapIdInput>
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutImageRoadMapByRoadMapIdInput
    connect?: Travel_Road_MapWhereUniqueInput
  }

  export type Travel_Road_MapUpdateOneRequiredWithoutImageRoadMapByRoadMapIdNestedInput = {
    create?: XOR<Travel_Road_MapCreateWithoutImageRoadMapByRoadMapIdInput, Travel_Road_MapUncheckedCreateWithoutImageRoadMapByRoadMapIdInput>
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutImageRoadMapByRoadMapIdInput
    upsert?: Travel_Road_MapUpsertWithoutImageRoadMapByRoadMapIdInput
    connect?: Travel_Road_MapWhereUniqueInput
    update?: XOR<XOR<Travel_Road_MapUpdateToOneWithWhereWithoutImageRoadMapByRoadMapIdInput, Travel_Road_MapUpdateWithoutImageRoadMapByRoadMapIdInput>, Travel_Road_MapUncheckedUpdateWithoutImageRoadMapByRoadMapIdInput>
  }

  export type User_ClientCreateNestedOneWithoutCommentRoadMapByClientEmailInput = {
    create?: XOR<User_ClientCreateWithoutCommentRoadMapByClientEmailInput, User_ClientUncheckedCreateWithoutCommentRoadMapByClientEmailInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutCommentRoadMapByClientEmailInput
    connect?: User_ClientWhereUniqueInput
  }

  export type User_ClientCreateNestedOneWithoutCommentRoadMapByClientIdInput = {
    create?: XOR<User_ClientCreateWithoutCommentRoadMapByClientIdInput, User_ClientUncheckedCreateWithoutCommentRoadMapByClientIdInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutCommentRoadMapByClientIdInput
    connect?: User_ClientWhereUniqueInput
  }

  export type Travel_Road_MapCreateNestedOneWithoutCommentRoadMapByRoadMapIdInput = {
    create?: XOR<Travel_Road_MapCreateWithoutCommentRoadMapByRoadMapIdInput, Travel_Road_MapUncheckedCreateWithoutCommentRoadMapByRoadMapIdInput>
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutCommentRoadMapByRoadMapIdInput
    connect?: Travel_Road_MapWhereUniqueInput
  }

  export type User_ClientUpdateOneRequiredWithoutCommentRoadMapByClientEmailNestedInput = {
    create?: XOR<User_ClientCreateWithoutCommentRoadMapByClientEmailInput, User_ClientUncheckedCreateWithoutCommentRoadMapByClientEmailInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutCommentRoadMapByClientEmailInput
    upsert?: User_ClientUpsertWithoutCommentRoadMapByClientEmailInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutCommentRoadMapByClientEmailInput, User_ClientUpdateWithoutCommentRoadMapByClientEmailInput>, User_ClientUncheckedUpdateWithoutCommentRoadMapByClientEmailInput>
  }

  export type User_ClientUpdateOneRequiredWithoutCommentRoadMapByClientIdNestedInput = {
    create?: XOR<User_ClientCreateWithoutCommentRoadMapByClientIdInput, User_ClientUncheckedCreateWithoutCommentRoadMapByClientIdInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutCommentRoadMapByClientIdInput
    upsert?: User_ClientUpsertWithoutCommentRoadMapByClientIdInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutCommentRoadMapByClientIdInput, User_ClientUpdateWithoutCommentRoadMapByClientIdInput>, User_ClientUncheckedUpdateWithoutCommentRoadMapByClientIdInput>
  }

  export type Travel_Road_MapUpdateOneRequiredWithoutCommentRoadMapByRoadMapIdNestedInput = {
    create?: XOR<Travel_Road_MapCreateWithoutCommentRoadMapByRoadMapIdInput, Travel_Road_MapUncheckedCreateWithoutCommentRoadMapByRoadMapIdInput>
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutCommentRoadMapByRoadMapIdInput
    upsert?: Travel_Road_MapUpsertWithoutCommentRoadMapByRoadMapIdInput
    connect?: Travel_Road_MapWhereUniqueInput
    update?: XOR<XOR<Travel_Road_MapUpdateToOneWithWhereWithoutCommentRoadMapByRoadMapIdInput, Travel_Road_MapUpdateWithoutCommentRoadMapByRoadMapIdInput>, Travel_Road_MapUncheckedUpdateWithoutCommentRoadMapByRoadMapIdInput>
  }

  export type User_ClientCreateNestedOneWithoutCommentTouristPointByClientEmailInput = {
    create?: XOR<User_ClientCreateWithoutCommentTouristPointByClientEmailInput, User_ClientUncheckedCreateWithoutCommentTouristPointByClientEmailInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutCommentTouristPointByClientEmailInput
    connect?: User_ClientWhereUniqueInput
  }

  export type User_ClientCreateNestedOneWithoutCommentTouristPointByClientIdInput = {
    create?: XOR<User_ClientCreateWithoutCommentTouristPointByClientIdInput, User_ClientUncheckedCreateWithoutCommentTouristPointByClientIdInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutCommentTouristPointByClientIdInput
    connect?: User_ClientWhereUniqueInput
  }

  export type Ponto_TuristicoCreateNestedOneWithoutCommentTouristPointByTouristPointIdInput = {
    create?: XOR<Ponto_TuristicoCreateWithoutCommentTouristPointByTouristPointIdInput, Ponto_TuristicoUncheckedCreateWithoutCommentTouristPointByTouristPointIdInput>
    connectOrCreate?: Ponto_TuristicoCreateOrConnectWithoutCommentTouristPointByTouristPointIdInput
    connect?: Ponto_TuristicoWhereUniqueInput
  }

  export type User_ClientUpdateOneRequiredWithoutCommentTouristPointByClientEmailNestedInput = {
    create?: XOR<User_ClientCreateWithoutCommentTouristPointByClientEmailInput, User_ClientUncheckedCreateWithoutCommentTouristPointByClientEmailInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutCommentTouristPointByClientEmailInput
    upsert?: User_ClientUpsertWithoutCommentTouristPointByClientEmailInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutCommentTouristPointByClientEmailInput, User_ClientUpdateWithoutCommentTouristPointByClientEmailInput>, User_ClientUncheckedUpdateWithoutCommentTouristPointByClientEmailInput>
  }

  export type User_ClientUpdateOneRequiredWithoutCommentTouristPointByClientIdNestedInput = {
    create?: XOR<User_ClientCreateWithoutCommentTouristPointByClientIdInput, User_ClientUncheckedCreateWithoutCommentTouristPointByClientIdInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutCommentTouristPointByClientIdInput
    upsert?: User_ClientUpsertWithoutCommentTouristPointByClientIdInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutCommentTouristPointByClientIdInput, User_ClientUpdateWithoutCommentTouristPointByClientIdInput>, User_ClientUncheckedUpdateWithoutCommentTouristPointByClientIdInput>
  }

  export type Ponto_TuristicoUpdateOneRequiredWithoutCommentTouristPointByTouristPointIdNestedInput = {
    create?: XOR<Ponto_TuristicoCreateWithoutCommentTouristPointByTouristPointIdInput, Ponto_TuristicoUncheckedCreateWithoutCommentTouristPointByTouristPointIdInput>
    connectOrCreate?: Ponto_TuristicoCreateOrConnectWithoutCommentTouristPointByTouristPointIdInput
    upsert?: Ponto_TuristicoUpsertWithoutCommentTouristPointByTouristPointIdInput
    connect?: Ponto_TuristicoWhereUniqueInput
    update?: XOR<XOR<Ponto_TuristicoUpdateToOneWithWhereWithoutCommentTouristPointByTouristPointIdInput, Ponto_TuristicoUpdateWithoutCommentTouristPointByTouristPointIdInput>, Ponto_TuristicoUncheckedUpdateWithoutCommentTouristPointByTouristPointIdInput>
  }

  export type User_ClientCreateNestedOneWithoutCommentCommercialPointByClientEmailInput = {
    create?: XOR<User_ClientCreateWithoutCommentCommercialPointByClientEmailInput, User_ClientUncheckedCreateWithoutCommentCommercialPointByClientEmailInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutCommentCommercialPointByClientEmailInput
    connect?: User_ClientWhereUniqueInput
  }

  export type User_ClientCreateNestedOneWithoutCommentCommercialPointByClientIdInput = {
    create?: XOR<User_ClientCreateWithoutCommentCommercialPointByClientIdInput, User_ClientUncheckedCreateWithoutCommentCommercialPointByClientIdInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutCommentCommercialPointByClientIdInput
    connect?: User_ClientWhereUniqueInput
  }

  export type Ponto_ComercialCreateNestedOneWithoutCommentCommercialPointByCommercialPointIdInput = {
    create?: XOR<Ponto_ComercialCreateWithoutCommentCommercialPointByCommercialPointIdInput, Ponto_ComercialUncheckedCreateWithoutCommentCommercialPointByCommercialPointIdInput>
    connectOrCreate?: Ponto_ComercialCreateOrConnectWithoutCommentCommercialPointByCommercialPointIdInput
    connect?: Ponto_ComercialWhereUniqueInput
  }

  export type User_ClientUpdateOneRequiredWithoutCommentCommercialPointByClientEmailNestedInput = {
    create?: XOR<User_ClientCreateWithoutCommentCommercialPointByClientEmailInput, User_ClientUncheckedCreateWithoutCommentCommercialPointByClientEmailInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutCommentCommercialPointByClientEmailInput
    upsert?: User_ClientUpsertWithoutCommentCommercialPointByClientEmailInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutCommentCommercialPointByClientEmailInput, User_ClientUpdateWithoutCommentCommercialPointByClientEmailInput>, User_ClientUncheckedUpdateWithoutCommentCommercialPointByClientEmailInput>
  }

  export type User_ClientUpdateOneRequiredWithoutCommentCommercialPointByClientIdNestedInput = {
    create?: XOR<User_ClientCreateWithoutCommentCommercialPointByClientIdInput, User_ClientUncheckedCreateWithoutCommentCommercialPointByClientIdInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutCommentCommercialPointByClientIdInput
    upsert?: User_ClientUpsertWithoutCommentCommercialPointByClientIdInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutCommentCommercialPointByClientIdInput, User_ClientUpdateWithoutCommentCommercialPointByClientIdInput>, User_ClientUncheckedUpdateWithoutCommentCommercialPointByClientIdInput>
  }

  export type Ponto_ComercialUpdateOneRequiredWithoutCommentCommercialPointByCommercialPointIdNestedInput = {
    create?: XOR<Ponto_ComercialCreateWithoutCommentCommercialPointByCommercialPointIdInput, Ponto_ComercialUncheckedCreateWithoutCommentCommercialPointByCommercialPointIdInput>
    connectOrCreate?: Ponto_ComercialCreateOrConnectWithoutCommentCommercialPointByCommercialPointIdInput
    upsert?: Ponto_ComercialUpsertWithoutCommentCommercialPointByCommercialPointIdInput
    connect?: Ponto_ComercialWhereUniqueInput
    update?: XOR<XOR<Ponto_ComercialUpdateToOneWithWhereWithoutCommentCommercialPointByCommercialPointIdInput, Ponto_ComercialUpdateWithoutCommentCommercialPointByCommercialPointIdInput>, Ponto_ComercialUncheckedUpdateWithoutCommentCommercialPointByCommercialPointIdInput>
  }

  export type User_ClientCreateNestedOneWithoutAvaliationsByEmailClientInput = {
    create?: XOR<User_ClientCreateWithoutAvaliationsByEmailClientInput, User_ClientUncheckedCreateWithoutAvaliationsByEmailClientInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutAvaliationsByEmailClientInput
    connect?: User_ClientWhereUniqueInput
  }

  export type User_ClientCreateNestedOneWithoutAvaliationsRoadMapByIdClientInput = {
    create?: XOR<User_ClientCreateWithoutAvaliationsRoadMapByIdClientInput, User_ClientUncheckedCreateWithoutAvaliationsRoadMapByIdClientInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutAvaliationsRoadMapByIdClientInput
    connect?: User_ClientWhereUniqueInput
  }

  export type Travel_Road_MapCreateNestedOneWithoutAvaliationRoadMapInput = {
    create?: XOR<Travel_Road_MapCreateWithoutAvaliationRoadMapInput, Travel_Road_MapUncheckedCreateWithoutAvaliationRoadMapInput>
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutAvaliationRoadMapInput
    connect?: Travel_Road_MapWhereUniqueInput
  }

  export type User_ClientUpdateOneRequiredWithoutAvaliationsByEmailClientNestedInput = {
    create?: XOR<User_ClientCreateWithoutAvaliationsByEmailClientInput, User_ClientUncheckedCreateWithoutAvaliationsByEmailClientInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutAvaliationsByEmailClientInput
    upsert?: User_ClientUpsertWithoutAvaliationsByEmailClientInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutAvaliationsByEmailClientInput, User_ClientUpdateWithoutAvaliationsByEmailClientInput>, User_ClientUncheckedUpdateWithoutAvaliationsByEmailClientInput>
  }

  export type User_ClientUpdateOneRequiredWithoutAvaliationsRoadMapByIdClientNestedInput = {
    create?: XOR<User_ClientCreateWithoutAvaliationsRoadMapByIdClientInput, User_ClientUncheckedCreateWithoutAvaliationsRoadMapByIdClientInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutAvaliationsRoadMapByIdClientInput
    upsert?: User_ClientUpsertWithoutAvaliationsRoadMapByIdClientInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutAvaliationsRoadMapByIdClientInput, User_ClientUpdateWithoutAvaliationsRoadMapByIdClientInput>, User_ClientUncheckedUpdateWithoutAvaliationsRoadMapByIdClientInput>
  }

  export type Travel_Road_MapUpdateOneRequiredWithoutAvaliationRoadMapNestedInput = {
    create?: XOR<Travel_Road_MapCreateWithoutAvaliationRoadMapInput, Travel_Road_MapUncheckedCreateWithoutAvaliationRoadMapInput>
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutAvaliationRoadMapInput
    upsert?: Travel_Road_MapUpsertWithoutAvaliationRoadMapInput
    connect?: Travel_Road_MapWhereUniqueInput
    update?: XOR<XOR<Travel_Road_MapUpdateToOneWithWhereWithoutAvaliationRoadMapInput, Travel_Road_MapUpdateWithoutAvaliationRoadMapInput>, Travel_Road_MapUncheckedUpdateWithoutAvaliationRoadMapInput>
  }

  export type User_ClientCreateNestedOneWithoutAvaliationTouristPointByUserClientEmailInput = {
    create?: XOR<User_ClientCreateWithoutAvaliationTouristPointByUserClientEmailInput, User_ClientUncheckedCreateWithoutAvaliationTouristPointByUserClientEmailInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutAvaliationTouristPointByUserClientEmailInput
    connect?: User_ClientWhereUniqueInput
  }

  export type User_ClientCreateNestedOneWithoutAvaliationTouristPointByIdCreatorInput = {
    create?: XOR<User_ClientCreateWithoutAvaliationTouristPointByIdCreatorInput, User_ClientUncheckedCreateWithoutAvaliationTouristPointByIdCreatorInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutAvaliationTouristPointByIdCreatorInput
    connect?: User_ClientWhereUniqueInput
  }

  export type Ponto_TuristicoCreateNestedOneWithoutAvaliationTouristPointInput = {
    create?: XOR<Ponto_TuristicoCreateWithoutAvaliationTouristPointInput, Ponto_TuristicoUncheckedCreateWithoutAvaliationTouristPointInput>
    connectOrCreate?: Ponto_TuristicoCreateOrConnectWithoutAvaliationTouristPointInput
    connect?: Ponto_TuristicoWhereUniqueInput
  }

  export type User_ClientUpdateOneRequiredWithoutAvaliationTouristPointByUserClientEmailNestedInput = {
    create?: XOR<User_ClientCreateWithoutAvaliationTouristPointByUserClientEmailInput, User_ClientUncheckedCreateWithoutAvaliationTouristPointByUserClientEmailInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutAvaliationTouristPointByUserClientEmailInput
    upsert?: User_ClientUpsertWithoutAvaliationTouristPointByUserClientEmailInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutAvaliationTouristPointByUserClientEmailInput, User_ClientUpdateWithoutAvaliationTouristPointByUserClientEmailInput>, User_ClientUncheckedUpdateWithoutAvaliationTouristPointByUserClientEmailInput>
  }

  export type User_ClientUpdateOneRequiredWithoutAvaliationTouristPointByIdCreatorNestedInput = {
    create?: XOR<User_ClientCreateWithoutAvaliationTouristPointByIdCreatorInput, User_ClientUncheckedCreateWithoutAvaliationTouristPointByIdCreatorInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutAvaliationTouristPointByIdCreatorInput
    upsert?: User_ClientUpsertWithoutAvaliationTouristPointByIdCreatorInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutAvaliationTouristPointByIdCreatorInput, User_ClientUpdateWithoutAvaliationTouristPointByIdCreatorInput>, User_ClientUncheckedUpdateWithoutAvaliationTouristPointByIdCreatorInput>
  }

  export type Ponto_TuristicoUpdateOneRequiredWithoutAvaliationTouristPointNestedInput = {
    create?: XOR<Ponto_TuristicoCreateWithoutAvaliationTouristPointInput, Ponto_TuristicoUncheckedCreateWithoutAvaliationTouristPointInput>
    connectOrCreate?: Ponto_TuristicoCreateOrConnectWithoutAvaliationTouristPointInput
    upsert?: Ponto_TuristicoUpsertWithoutAvaliationTouristPointInput
    connect?: Ponto_TuristicoWhereUniqueInput
    update?: XOR<XOR<Ponto_TuristicoUpdateToOneWithWhereWithoutAvaliationTouristPointInput, Ponto_TuristicoUpdateWithoutAvaliationTouristPointInput>, Ponto_TuristicoUncheckedUpdateWithoutAvaliationTouristPointInput>
  }

  export type User_ClientCreateNestedOneWithoutAvaliationCommercialPointByUserClientEmailInput = {
    create?: XOR<User_ClientCreateWithoutAvaliationCommercialPointByUserClientEmailInput, User_ClientUncheckedCreateWithoutAvaliationCommercialPointByUserClientEmailInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutAvaliationCommercialPointByUserClientEmailInput
    connect?: User_ClientWhereUniqueInput
  }

  export type User_ClientCreateNestedOneWithoutAvaliationCommercialPointByIdCreatorInput = {
    create?: XOR<User_ClientCreateWithoutAvaliationCommercialPointByIdCreatorInput, User_ClientUncheckedCreateWithoutAvaliationCommercialPointByIdCreatorInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutAvaliationCommercialPointByIdCreatorInput
    connect?: User_ClientWhereUniqueInput
  }

  export type Ponto_ComercialCreateNestedOneWithoutAvaliationCommercialPointInput = {
    create?: XOR<Ponto_ComercialCreateWithoutAvaliationCommercialPointInput, Ponto_ComercialUncheckedCreateWithoutAvaliationCommercialPointInput>
    connectOrCreate?: Ponto_ComercialCreateOrConnectWithoutAvaliationCommercialPointInput
    connect?: Ponto_ComercialWhereUniqueInput
  }

  export type User_ClientUpdateOneRequiredWithoutAvaliationCommercialPointByUserClientEmailNestedInput = {
    create?: XOR<User_ClientCreateWithoutAvaliationCommercialPointByUserClientEmailInput, User_ClientUncheckedCreateWithoutAvaliationCommercialPointByUserClientEmailInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutAvaliationCommercialPointByUserClientEmailInput
    upsert?: User_ClientUpsertWithoutAvaliationCommercialPointByUserClientEmailInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutAvaliationCommercialPointByUserClientEmailInput, User_ClientUpdateWithoutAvaliationCommercialPointByUserClientEmailInput>, User_ClientUncheckedUpdateWithoutAvaliationCommercialPointByUserClientEmailInput>
  }

  export type User_ClientUpdateOneRequiredWithoutAvaliationCommercialPointByIdCreatorNestedInput = {
    create?: XOR<User_ClientCreateWithoutAvaliationCommercialPointByIdCreatorInput, User_ClientUncheckedCreateWithoutAvaliationCommercialPointByIdCreatorInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutAvaliationCommercialPointByIdCreatorInput
    upsert?: User_ClientUpsertWithoutAvaliationCommercialPointByIdCreatorInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutAvaliationCommercialPointByIdCreatorInput, User_ClientUpdateWithoutAvaliationCommercialPointByIdCreatorInput>, User_ClientUncheckedUpdateWithoutAvaliationCommercialPointByIdCreatorInput>
  }

  export type Ponto_ComercialUpdateOneRequiredWithoutAvaliationCommercialPointNestedInput = {
    create?: XOR<Ponto_ComercialCreateWithoutAvaliationCommercialPointInput, Ponto_ComercialUncheckedCreateWithoutAvaliationCommercialPointInput>
    connectOrCreate?: Ponto_ComercialCreateOrConnectWithoutAvaliationCommercialPointInput
    upsert?: Ponto_ComercialUpsertWithoutAvaliationCommercialPointInput
    connect?: Ponto_ComercialWhereUniqueInput
    update?: XOR<XOR<Ponto_ComercialUpdateToOneWithWhereWithoutAvaliationCommercialPointInput, Ponto_ComercialUpdateWithoutAvaliationCommercialPointInput>, Ponto_ComercialUncheckedUpdateWithoutAvaliationCommercialPointInput>
  }

  export type User_ClientCreateNestedOneWithoutFavoriteCommercialPointByClientIdInput = {
    create?: XOR<User_ClientCreateWithoutFavoriteCommercialPointByClientIdInput, User_ClientUncheckedCreateWithoutFavoriteCommercialPointByClientIdInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutFavoriteCommercialPointByClientIdInput
    connect?: User_ClientWhereUniqueInput
  }

  export type Ponto_ComercialCreateNestedOneWithoutFavoriteCommercialPointByCommercialPointIdInput = {
    create?: XOR<Ponto_ComercialCreateWithoutFavoriteCommercialPointByCommercialPointIdInput, Ponto_ComercialUncheckedCreateWithoutFavoriteCommercialPointByCommercialPointIdInput>
    connectOrCreate?: Ponto_ComercialCreateOrConnectWithoutFavoriteCommercialPointByCommercialPointIdInput
    connect?: Ponto_ComercialWhereUniqueInput
  }

  export type User_ClientUpdateOneRequiredWithoutFavoriteCommercialPointByClientIdNestedInput = {
    create?: XOR<User_ClientCreateWithoutFavoriteCommercialPointByClientIdInput, User_ClientUncheckedCreateWithoutFavoriteCommercialPointByClientIdInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutFavoriteCommercialPointByClientIdInput
    upsert?: User_ClientUpsertWithoutFavoriteCommercialPointByClientIdInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutFavoriteCommercialPointByClientIdInput, User_ClientUpdateWithoutFavoriteCommercialPointByClientIdInput>, User_ClientUncheckedUpdateWithoutFavoriteCommercialPointByClientIdInput>
  }

  export type Ponto_ComercialUpdateOneRequiredWithoutFavoriteCommercialPointByCommercialPointIdNestedInput = {
    create?: XOR<Ponto_ComercialCreateWithoutFavoriteCommercialPointByCommercialPointIdInput, Ponto_ComercialUncheckedCreateWithoutFavoriteCommercialPointByCommercialPointIdInput>
    connectOrCreate?: Ponto_ComercialCreateOrConnectWithoutFavoriteCommercialPointByCommercialPointIdInput
    upsert?: Ponto_ComercialUpsertWithoutFavoriteCommercialPointByCommercialPointIdInput
    connect?: Ponto_ComercialWhereUniqueInput
    update?: XOR<XOR<Ponto_ComercialUpdateToOneWithWhereWithoutFavoriteCommercialPointByCommercialPointIdInput, Ponto_ComercialUpdateWithoutFavoriteCommercialPointByCommercialPointIdInput>, Ponto_ComercialUncheckedUpdateWithoutFavoriteCommercialPointByCommercialPointIdInput>
  }

  export type User_ClientCreateNestedOneWithoutFavoriteTouristPointPointByClientIdInput = {
    create?: XOR<User_ClientCreateWithoutFavoriteTouristPointPointByClientIdInput, User_ClientUncheckedCreateWithoutFavoriteTouristPointPointByClientIdInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutFavoriteTouristPointPointByClientIdInput
    connect?: User_ClientWhereUniqueInput
  }

  export type Ponto_TuristicoCreateNestedOneWithoutFavoriteTouristPointByTouristPointIdInput = {
    create?: XOR<Ponto_TuristicoCreateWithoutFavoriteTouristPointByTouristPointIdInput, Ponto_TuristicoUncheckedCreateWithoutFavoriteTouristPointByTouristPointIdInput>
    connectOrCreate?: Ponto_TuristicoCreateOrConnectWithoutFavoriteTouristPointByTouristPointIdInput
    connect?: Ponto_TuristicoWhereUniqueInput
  }

  export type User_ClientUpdateOneRequiredWithoutFavoriteTouristPointPointByClientIdNestedInput = {
    create?: XOR<User_ClientCreateWithoutFavoriteTouristPointPointByClientIdInput, User_ClientUncheckedCreateWithoutFavoriteTouristPointPointByClientIdInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutFavoriteTouristPointPointByClientIdInput
    upsert?: User_ClientUpsertWithoutFavoriteTouristPointPointByClientIdInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutFavoriteTouristPointPointByClientIdInput, User_ClientUpdateWithoutFavoriteTouristPointPointByClientIdInput>, User_ClientUncheckedUpdateWithoutFavoriteTouristPointPointByClientIdInput>
  }

  export type Ponto_TuristicoUpdateOneRequiredWithoutFavoriteTouristPointByTouristPointIdNestedInput = {
    create?: XOR<Ponto_TuristicoCreateWithoutFavoriteTouristPointByTouristPointIdInput, Ponto_TuristicoUncheckedCreateWithoutFavoriteTouristPointByTouristPointIdInput>
    connectOrCreate?: Ponto_TuristicoCreateOrConnectWithoutFavoriteTouristPointByTouristPointIdInput
    upsert?: Ponto_TuristicoUpsertWithoutFavoriteTouristPointByTouristPointIdInput
    connect?: Ponto_TuristicoWhereUniqueInput
    update?: XOR<XOR<Ponto_TuristicoUpdateToOneWithWhereWithoutFavoriteTouristPointByTouristPointIdInput, Ponto_TuristicoUpdateWithoutFavoriteTouristPointByTouristPointIdInput>, Ponto_TuristicoUncheckedUpdateWithoutFavoriteTouristPointByTouristPointIdInput>
  }

  export type User_ClientCreateNestedOneWithoutFavoriteRoadMapPointByClientIdInput = {
    create?: XOR<User_ClientCreateWithoutFavoriteRoadMapPointByClientIdInput, User_ClientUncheckedCreateWithoutFavoriteRoadMapPointByClientIdInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutFavoriteRoadMapPointByClientIdInput
    connect?: User_ClientWhereUniqueInput
  }

  export type Travel_Road_MapCreateNestedOneWithoutFavoriteRoadMapByRoadMapIdInput = {
    create?: XOR<Travel_Road_MapCreateWithoutFavoriteRoadMapByRoadMapIdInput, Travel_Road_MapUncheckedCreateWithoutFavoriteRoadMapByRoadMapIdInput>
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutFavoriteRoadMapByRoadMapIdInput
    connect?: Travel_Road_MapWhereUniqueInput
  }

  export type User_ClientUpdateOneRequiredWithoutFavoriteRoadMapPointByClientIdNestedInput = {
    create?: XOR<User_ClientCreateWithoutFavoriteRoadMapPointByClientIdInput, User_ClientUncheckedCreateWithoutFavoriteRoadMapPointByClientIdInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutFavoriteRoadMapPointByClientIdInput
    upsert?: User_ClientUpsertWithoutFavoriteRoadMapPointByClientIdInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutFavoriteRoadMapPointByClientIdInput, User_ClientUpdateWithoutFavoriteRoadMapPointByClientIdInput>, User_ClientUncheckedUpdateWithoutFavoriteRoadMapPointByClientIdInput>
  }

  export type Travel_Road_MapUpdateOneRequiredWithoutFavoriteRoadMapByRoadMapIdNestedInput = {
    create?: XOR<Travel_Road_MapCreateWithoutFavoriteRoadMapByRoadMapIdInput, Travel_Road_MapUncheckedCreateWithoutFavoriteRoadMapByRoadMapIdInput>
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutFavoriteRoadMapByRoadMapIdInput
    upsert?: Travel_Road_MapUpsertWithoutFavoriteRoadMapByRoadMapIdInput
    connect?: Travel_Road_MapWhereUniqueInput
    update?: XOR<XOR<Travel_Road_MapUpdateToOneWithWhereWithoutFavoriteRoadMapByRoadMapIdInput, Travel_Road_MapUpdateWithoutFavoriteRoadMapByRoadMapIdInput>, Travel_Road_MapUncheckedUpdateWithoutFavoriteRoadMapByRoadMapIdInput>
  }

  export type Ponto_TuristicoCreateNestedOneWithoutUserReportTouristPointByIdTouristPointInput = {
    create?: XOR<Ponto_TuristicoCreateWithoutUserReportTouristPointByIdTouristPointInput, Ponto_TuristicoUncheckedCreateWithoutUserReportTouristPointByIdTouristPointInput>
    connectOrCreate?: Ponto_TuristicoCreateOrConnectWithoutUserReportTouristPointByIdTouristPointInput
    connect?: Ponto_TuristicoWhereUniqueInput
  }

  export type User_ClientCreateNestedOneWithoutUserReportTouristPointByIdUserReportInput = {
    create?: XOR<User_ClientCreateWithoutUserReportTouristPointByIdUserReportInput, User_ClientUncheckedCreateWithoutUserReportTouristPointByIdUserReportInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutUserReportTouristPointByIdUserReportInput
    connect?: User_ClientWhereUniqueInput
  }

  export type Ponto_TuristicoUpdateOneRequiredWithoutUserReportTouristPointByIdTouristPointNestedInput = {
    create?: XOR<Ponto_TuristicoCreateWithoutUserReportTouristPointByIdTouristPointInput, Ponto_TuristicoUncheckedCreateWithoutUserReportTouristPointByIdTouristPointInput>
    connectOrCreate?: Ponto_TuristicoCreateOrConnectWithoutUserReportTouristPointByIdTouristPointInput
    upsert?: Ponto_TuristicoUpsertWithoutUserReportTouristPointByIdTouristPointInput
    connect?: Ponto_TuristicoWhereUniqueInput
    update?: XOR<XOR<Ponto_TuristicoUpdateToOneWithWhereWithoutUserReportTouristPointByIdTouristPointInput, Ponto_TuristicoUpdateWithoutUserReportTouristPointByIdTouristPointInput>, Ponto_TuristicoUncheckedUpdateWithoutUserReportTouristPointByIdTouristPointInput>
  }

  export type User_ClientUpdateOneRequiredWithoutUserReportTouristPointByIdUserReportNestedInput = {
    create?: XOR<User_ClientCreateWithoutUserReportTouristPointByIdUserReportInput, User_ClientUncheckedCreateWithoutUserReportTouristPointByIdUserReportInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutUserReportTouristPointByIdUserReportInput
    upsert?: User_ClientUpsertWithoutUserReportTouristPointByIdUserReportInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutUserReportTouristPointByIdUserReportInput, User_ClientUpdateWithoutUserReportTouristPointByIdUserReportInput>, User_ClientUncheckedUpdateWithoutUserReportTouristPointByIdUserReportInput>
  }

  export type Ponto_ComercialCreateNestedOneWithoutReportCommercialPointByIdCommercialPointInput = {
    create?: XOR<Ponto_ComercialCreateWithoutReportCommercialPointByIdCommercialPointInput, Ponto_ComercialUncheckedCreateWithoutReportCommercialPointByIdCommercialPointInput>
    connectOrCreate?: Ponto_ComercialCreateOrConnectWithoutReportCommercialPointByIdCommercialPointInput
    connect?: Ponto_ComercialWhereUniqueInput
  }

  export type User_ClientCreateNestedOneWithoutUserReportCommercialPointByIdUserReportInput = {
    create?: XOR<User_ClientCreateWithoutUserReportCommercialPointByIdUserReportInput, User_ClientUncheckedCreateWithoutUserReportCommercialPointByIdUserReportInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutUserReportCommercialPointByIdUserReportInput
    connect?: User_ClientWhereUniqueInput
  }

  export type Ponto_ComercialUpdateOneRequiredWithoutReportCommercialPointByIdCommercialPointNestedInput = {
    create?: XOR<Ponto_ComercialCreateWithoutReportCommercialPointByIdCommercialPointInput, Ponto_ComercialUncheckedCreateWithoutReportCommercialPointByIdCommercialPointInput>
    connectOrCreate?: Ponto_ComercialCreateOrConnectWithoutReportCommercialPointByIdCommercialPointInput
    upsert?: Ponto_ComercialUpsertWithoutReportCommercialPointByIdCommercialPointInput
    connect?: Ponto_ComercialWhereUniqueInput
    update?: XOR<XOR<Ponto_ComercialUpdateToOneWithWhereWithoutReportCommercialPointByIdCommercialPointInput, Ponto_ComercialUpdateWithoutReportCommercialPointByIdCommercialPointInput>, Ponto_ComercialUncheckedUpdateWithoutReportCommercialPointByIdCommercialPointInput>
  }

  export type User_ClientUpdateOneRequiredWithoutUserReportCommercialPointByIdUserReportNestedInput = {
    create?: XOR<User_ClientCreateWithoutUserReportCommercialPointByIdUserReportInput, User_ClientUncheckedCreateWithoutUserReportCommercialPointByIdUserReportInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutUserReportCommercialPointByIdUserReportInput
    upsert?: User_ClientUpsertWithoutUserReportCommercialPointByIdUserReportInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutUserReportCommercialPointByIdUserReportInput, User_ClientUpdateWithoutUserReportCommercialPointByIdUserReportInput>, User_ClientUncheckedUpdateWithoutUserReportCommercialPointByIdUserReportInput>
  }

  export type Travel_Road_MapCreateNestedOneWithoutUserReportRoadMapByIdRoadMapInput = {
    create?: XOR<Travel_Road_MapCreateWithoutUserReportRoadMapByIdRoadMapInput, Travel_Road_MapUncheckedCreateWithoutUserReportRoadMapByIdRoadMapInput>
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutUserReportRoadMapByIdRoadMapInput
    connect?: Travel_Road_MapWhereUniqueInput
  }

  export type User_ClientCreateNestedOneWithoutUserReportRoadMapByIdUserReportInput = {
    create?: XOR<User_ClientCreateWithoutUserReportRoadMapByIdUserReportInput, User_ClientUncheckedCreateWithoutUserReportRoadMapByIdUserReportInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutUserReportRoadMapByIdUserReportInput
    connect?: User_ClientWhereUniqueInput
  }

  export type Travel_Road_MapUpdateOneRequiredWithoutUserReportRoadMapByIdRoadMapNestedInput = {
    create?: XOR<Travel_Road_MapCreateWithoutUserReportRoadMapByIdRoadMapInput, Travel_Road_MapUncheckedCreateWithoutUserReportRoadMapByIdRoadMapInput>
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutUserReportRoadMapByIdRoadMapInput
    upsert?: Travel_Road_MapUpsertWithoutUserReportRoadMapByIdRoadMapInput
    connect?: Travel_Road_MapWhereUniqueInput
    update?: XOR<XOR<Travel_Road_MapUpdateToOneWithWhereWithoutUserReportRoadMapByIdRoadMapInput, Travel_Road_MapUpdateWithoutUserReportRoadMapByIdRoadMapInput>, Travel_Road_MapUncheckedUpdateWithoutUserReportRoadMapByIdRoadMapInput>
  }

  export type User_ClientUpdateOneRequiredWithoutUserReportRoadMapByIdUserReportNestedInput = {
    create?: XOR<User_ClientCreateWithoutUserReportRoadMapByIdUserReportInput, User_ClientUncheckedCreateWithoutUserReportRoadMapByIdUserReportInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutUserReportRoadMapByIdUserReportInput
    upsert?: User_ClientUpsertWithoutUserReportRoadMapByIdUserReportInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutUserReportRoadMapByIdUserReportInput, User_ClientUpdateWithoutUserReportRoadMapByIdUserReportInput>, User_ClientUncheckedUpdateWithoutUserReportRoadMapByIdUserReportInput>
  }

  export type User_ClientCreateNestedOneWithoutUserNotificationRoadMapByIdClientInput = {
    create?: XOR<User_ClientCreateWithoutUserNotificationRoadMapByIdClientInput, User_ClientUncheckedCreateWithoutUserNotificationRoadMapByIdClientInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutUserNotificationRoadMapByIdClientInput
    connect?: User_ClientWhereUniqueInput
  }

  export type Travel_Road_MapCreateNestedOneWithoutUserNotificationRoadMapByIdRoadMapInput = {
    create?: XOR<Travel_Road_MapCreateWithoutUserNotificationRoadMapByIdRoadMapInput, Travel_Road_MapUncheckedCreateWithoutUserNotificationRoadMapByIdRoadMapInput>
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutUserNotificationRoadMapByIdRoadMapInput
    connect?: Travel_Road_MapWhereUniqueInput
  }

  export type User_ClientUpdateOneRequiredWithoutUserNotificationRoadMapByIdClientNestedInput = {
    create?: XOR<User_ClientCreateWithoutUserNotificationRoadMapByIdClientInput, User_ClientUncheckedCreateWithoutUserNotificationRoadMapByIdClientInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutUserNotificationRoadMapByIdClientInput
    upsert?: User_ClientUpsertWithoutUserNotificationRoadMapByIdClientInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutUserNotificationRoadMapByIdClientInput, User_ClientUpdateWithoutUserNotificationRoadMapByIdClientInput>, User_ClientUncheckedUpdateWithoutUserNotificationRoadMapByIdClientInput>
  }

  export type Travel_Road_MapUpdateOneRequiredWithoutUserNotificationRoadMapByIdRoadMapNestedInput = {
    create?: XOR<Travel_Road_MapCreateWithoutUserNotificationRoadMapByIdRoadMapInput, Travel_Road_MapUncheckedCreateWithoutUserNotificationRoadMapByIdRoadMapInput>
    connectOrCreate?: Travel_Road_MapCreateOrConnectWithoutUserNotificationRoadMapByIdRoadMapInput
    upsert?: Travel_Road_MapUpsertWithoutUserNotificationRoadMapByIdRoadMapInput
    connect?: Travel_Road_MapWhereUniqueInput
    update?: XOR<XOR<Travel_Road_MapUpdateToOneWithWhereWithoutUserNotificationRoadMapByIdRoadMapInput, Travel_Road_MapUpdateWithoutUserNotificationRoadMapByIdRoadMapInput>, Travel_Road_MapUncheckedUpdateWithoutUserNotificationRoadMapByIdRoadMapInput>
  }

  export type User_ClientCreateNestedOneWithoutUserNotificationTouristPointByIdClientInput = {
    create?: XOR<User_ClientCreateWithoutUserNotificationTouristPointByIdClientInput, User_ClientUncheckedCreateWithoutUserNotificationTouristPointByIdClientInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutUserNotificationTouristPointByIdClientInput
    connect?: User_ClientWhereUniqueInput
  }

  export type Ponto_TuristicoCreateNestedOneWithoutUserNotificationTouristPointByIdTouristPointInput = {
    create?: XOR<Ponto_TuristicoCreateWithoutUserNotificationTouristPointByIdTouristPointInput, Ponto_TuristicoUncheckedCreateWithoutUserNotificationTouristPointByIdTouristPointInput>
    connectOrCreate?: Ponto_TuristicoCreateOrConnectWithoutUserNotificationTouristPointByIdTouristPointInput
    connect?: Ponto_TuristicoWhereUniqueInput
  }

  export type User_ClientUpdateOneRequiredWithoutUserNotificationTouristPointByIdClientNestedInput = {
    create?: XOR<User_ClientCreateWithoutUserNotificationTouristPointByIdClientInput, User_ClientUncheckedCreateWithoutUserNotificationTouristPointByIdClientInput>
    connectOrCreate?: User_ClientCreateOrConnectWithoutUserNotificationTouristPointByIdClientInput
    upsert?: User_ClientUpsertWithoutUserNotificationTouristPointByIdClientInput
    connect?: User_ClientWhereUniqueInput
    update?: XOR<XOR<User_ClientUpdateToOneWithWhereWithoutUserNotificationTouristPointByIdClientInput, User_ClientUpdateWithoutUserNotificationTouristPointByIdClientInput>, User_ClientUncheckedUpdateWithoutUserNotificationTouristPointByIdClientInput>
  }

  export type Ponto_TuristicoUpdateOneRequiredWithoutUserNotificationTouristPointByIdTouristPointNestedInput = {
    create?: XOR<Ponto_TuristicoCreateWithoutUserNotificationTouristPointByIdTouristPointInput, Ponto_TuristicoUncheckedCreateWithoutUserNotificationTouristPointByIdTouristPointInput>
    connectOrCreate?: Ponto_TuristicoCreateOrConnectWithoutUserNotificationTouristPointByIdTouristPointInput
    upsert?: Ponto_TuristicoUpsertWithoutUserNotificationTouristPointByIdTouristPointInput
    connect?: Ponto_TuristicoWhereUniqueInput
    update?: XOR<XOR<Ponto_TuristicoUpdateToOneWithWhereWithoutUserNotificationTouristPointByIdTouristPointInput, Ponto_TuristicoUpdateWithoutUserNotificationTouristPointByIdTouristPointInput>, Ponto_TuristicoUncheckedUpdateWithoutUserNotificationTouristPointByIdTouristPointInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type AvaliationRoadMapCreateWithoutUserClientByEmailInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientByIdClient: User_ClientCreateNestedOneWithoutAvaliationsRoadMapByIdClientInput
    userRoadMapByIdRoadMap: Travel_Road_MapCreateNestedOneWithoutAvaliationRoadMapInput
  }

  export type AvaliationRoadMapUncheckedCreateWithoutUserClientByEmailInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    idUserClient: string
    idTravelRoadMap: string
  }

  export type AvaliationRoadMapCreateOrConnectWithoutUserClientByEmailInput = {
    where: AvaliationRoadMapWhereUniqueInput
    create: XOR<AvaliationRoadMapCreateWithoutUserClientByEmailInput, AvaliationRoadMapUncheckedCreateWithoutUserClientByEmailInput>
  }

  export type AvaliationRoadMapCreateManyUserClientByEmailInputEnvelope = {
    data: AvaliationRoadMapCreateManyUserClientByEmailInput | AvaliationRoadMapCreateManyUserClientByEmailInput[]
    skipDuplicates?: boolean
  }

  export type AvaliationRoadMapCreateWithoutUserClientByIdClientInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientByEmail: User_ClientCreateNestedOneWithoutAvaliationsByEmailClientInput
    userRoadMapByIdRoadMap: Travel_Road_MapCreateNestedOneWithoutAvaliationRoadMapInput
  }

  export type AvaliationRoadMapUncheckedCreateWithoutUserClientByIdClientInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientEmail: string
    idTravelRoadMap: string
  }

  export type AvaliationRoadMapCreateOrConnectWithoutUserClientByIdClientInput = {
    where: AvaliationRoadMapWhereUniqueInput
    create: XOR<AvaliationRoadMapCreateWithoutUserClientByIdClientInput, AvaliationRoadMapUncheckedCreateWithoutUserClientByIdClientInput>
  }

  export type AvaliationRoadMapCreateManyUserClientByIdClientInputEnvelope = {
    data: AvaliationRoadMapCreateManyUserClientByIdClientInput | AvaliationRoadMapCreateManyUserClientByIdClientInput[]
    skipDuplicates?: boolean
  }

  export type Travel_Road_MapCreateWithoutUserClientInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    AvaliationRoadMap?: AvaliationRoadMapCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapUncheckedCreateWithoutUserClientInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryUncheckedCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityUncheckedCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapCreateOrConnectWithoutUserClientInput = {
    where: Travel_Road_MapWhereUniqueInput
    create: XOR<Travel_Road_MapCreateWithoutUserClientInput, Travel_Road_MapUncheckedCreateWithoutUserClientInput>
  }

  export type Travel_Road_MapCreateManyUserClientInputEnvelope = {
    data: Travel_Road_MapCreateManyUserClientInput | Travel_Road_MapCreateManyUserClientInput[]
    skipDuplicates?: boolean
  }

  export type AvaliationTouristPointCreateWithoutUserClientByEmailInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientByIdClient: User_ClientCreateNestedOneWithoutAvaliationTouristPointByIdCreatorInput
    userTouristPointByIdTouristPoint: Ponto_TuristicoCreateNestedOneWithoutAvaliationTouristPointInput
  }

  export type AvaliationTouristPointUncheckedCreateWithoutUserClientByEmailInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    idUserClient: string
    idTouristPoint: string
  }

  export type AvaliationTouristPointCreateOrConnectWithoutUserClientByEmailInput = {
    where: AvaliationTouristPointWhereUniqueInput
    create: XOR<AvaliationTouristPointCreateWithoutUserClientByEmailInput, AvaliationTouristPointUncheckedCreateWithoutUserClientByEmailInput>
  }

  export type AvaliationTouristPointCreateManyUserClientByEmailInputEnvelope = {
    data: AvaliationTouristPointCreateManyUserClientByEmailInput | AvaliationTouristPointCreateManyUserClientByEmailInput[]
    skipDuplicates?: boolean
  }

  export type AvaliationTouristPointCreateWithoutUserClientByIdClientInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientByEmail: User_ClientCreateNestedOneWithoutAvaliationTouristPointByUserClientEmailInput
    userTouristPointByIdTouristPoint: Ponto_TuristicoCreateNestedOneWithoutAvaliationTouristPointInput
  }

  export type AvaliationTouristPointUncheckedCreateWithoutUserClientByIdClientInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientEmail: string
    idTouristPoint: string
  }

  export type AvaliationTouristPointCreateOrConnectWithoutUserClientByIdClientInput = {
    where: AvaliationTouristPointWhereUniqueInput
    create: XOR<AvaliationTouristPointCreateWithoutUserClientByIdClientInput, AvaliationTouristPointUncheckedCreateWithoutUserClientByIdClientInput>
  }

  export type AvaliationTouristPointCreateManyUserClientByIdClientInputEnvelope = {
    data: AvaliationTouristPointCreateManyUserClientByIdClientInput | AvaliationTouristPointCreateManyUserClientByIdClientInput[]
    skipDuplicates?: boolean
  }

  export type AvaliationCommercialPointCreateWithoutUserClientByEmailClientInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientByIdClient: User_ClientCreateNestedOneWithoutAvaliationCommercialPointByIdCreatorInput
    userCommercialPointByIdCommercialPoint: Ponto_ComercialCreateNestedOneWithoutAvaliationCommercialPointInput
  }

  export type AvaliationCommercialPointUncheckedCreateWithoutUserClientByEmailClientInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    idUserClient: string
    idCommercialPoint: string
  }

  export type AvaliationCommercialPointCreateOrConnectWithoutUserClientByEmailClientInput = {
    where: AvaliationCommercialPointWhereUniqueInput
    create: XOR<AvaliationCommercialPointCreateWithoutUserClientByEmailClientInput, AvaliationCommercialPointUncheckedCreateWithoutUserClientByEmailClientInput>
  }

  export type AvaliationCommercialPointCreateManyUserClientByEmailClientInputEnvelope = {
    data: AvaliationCommercialPointCreateManyUserClientByEmailClientInput | AvaliationCommercialPointCreateManyUserClientByEmailClientInput[]
    skipDuplicates?: boolean
  }

  export type AvaliationCommercialPointCreateWithoutUserClientByIdClientInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientByEmailClient: User_ClientCreateNestedOneWithoutAvaliationCommercialPointByUserClientEmailInput
    userCommercialPointByIdCommercialPoint: Ponto_ComercialCreateNestedOneWithoutAvaliationCommercialPointInput
  }

  export type AvaliationCommercialPointUncheckedCreateWithoutUserClientByIdClientInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientEmail: string
    idCommercialPoint: string
  }

  export type AvaliationCommercialPointCreateOrConnectWithoutUserClientByIdClientInput = {
    where: AvaliationCommercialPointWhereUniqueInput
    create: XOR<AvaliationCommercialPointCreateWithoutUserClientByIdClientInput, AvaliationCommercialPointUncheckedCreateWithoutUserClientByIdClientInput>
  }

  export type AvaliationCommercialPointCreateManyUserClientByIdClientInputEnvelope = {
    data: AvaliationCommercialPointCreateManyUserClientByIdClientInput | AvaliationCommercialPointCreateManyUserClientByIdClientInput[]
    skipDuplicates?: boolean
  }

  export type CommentRoadMapCreateWithoutUserClientByClientEmailInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientByClientId: User_ClientCreateNestedOneWithoutCommentRoadMapByClientIdInput
    userRoadMapByRoadMapId: Travel_Road_MapCreateNestedOneWithoutCommentRoadMapByRoadMapIdInput
  }

  export type CommentRoadMapUncheckedCreateWithoutUserClientByClientEmailInput = {
    id?: string
    dataPublication: Date | string
    content: string
    idUserClient: string
    idTravelRoadMap: string
  }

  export type CommentRoadMapCreateOrConnectWithoutUserClientByClientEmailInput = {
    where: CommentRoadMapWhereUniqueInput
    create: XOR<CommentRoadMapCreateWithoutUserClientByClientEmailInput, CommentRoadMapUncheckedCreateWithoutUserClientByClientEmailInput>
  }

  export type CommentRoadMapCreateManyUserClientByClientEmailInputEnvelope = {
    data: CommentRoadMapCreateManyUserClientByClientEmailInput | CommentRoadMapCreateManyUserClientByClientEmailInput[]
    skipDuplicates?: boolean
  }

  export type CommentRoadMapCreateWithoutUserClientByClientIdInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientByClientEmail: User_ClientCreateNestedOneWithoutCommentRoadMapByClientEmailInput
    userRoadMapByRoadMapId: Travel_Road_MapCreateNestedOneWithoutCommentRoadMapByRoadMapIdInput
  }

  export type CommentRoadMapUncheckedCreateWithoutUserClientByClientIdInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientEmail: string
    idTravelRoadMap: string
  }

  export type CommentRoadMapCreateOrConnectWithoutUserClientByClientIdInput = {
    where: CommentRoadMapWhereUniqueInput
    create: XOR<CommentRoadMapCreateWithoutUserClientByClientIdInput, CommentRoadMapUncheckedCreateWithoutUserClientByClientIdInput>
  }

  export type CommentRoadMapCreateManyUserClientByClientIdInputEnvelope = {
    data: CommentRoadMapCreateManyUserClientByClientIdInput | CommentRoadMapCreateManyUserClientByClientIdInput[]
    skipDuplicates?: boolean
  }

  export type CommentTouristPointCreateWithoutUserClientByClientEmailInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientByClientId: User_ClientCreateNestedOneWithoutCommentTouristPointByClientIdInput
    userTouristPointByTouristPointId: Ponto_TuristicoCreateNestedOneWithoutCommentTouristPointByTouristPointIdInput
  }

  export type CommentTouristPointUncheckedCreateWithoutUserClientByClientEmailInput = {
    id?: string
    dataPublication: Date | string
    content: string
    idUserClient: string
    idTouristPoint: string
  }

  export type CommentTouristPointCreateOrConnectWithoutUserClientByClientEmailInput = {
    where: CommentTouristPointWhereUniqueInput
    create: XOR<CommentTouristPointCreateWithoutUserClientByClientEmailInput, CommentTouristPointUncheckedCreateWithoutUserClientByClientEmailInput>
  }

  export type CommentTouristPointCreateManyUserClientByClientEmailInputEnvelope = {
    data: CommentTouristPointCreateManyUserClientByClientEmailInput | CommentTouristPointCreateManyUserClientByClientEmailInput[]
    skipDuplicates?: boolean
  }

  export type CommentTouristPointCreateWithoutUserClientByClientIdInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientByClientEmail: User_ClientCreateNestedOneWithoutCommentTouristPointByClientEmailInput
    userTouristPointByTouristPointId: Ponto_TuristicoCreateNestedOneWithoutCommentTouristPointByTouristPointIdInput
  }

  export type CommentTouristPointUncheckedCreateWithoutUserClientByClientIdInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientEmail: string
    idTouristPoint: string
  }

  export type CommentTouristPointCreateOrConnectWithoutUserClientByClientIdInput = {
    where: CommentTouristPointWhereUniqueInput
    create: XOR<CommentTouristPointCreateWithoutUserClientByClientIdInput, CommentTouristPointUncheckedCreateWithoutUserClientByClientIdInput>
  }

  export type CommentTouristPointCreateManyUserClientByClientIdInputEnvelope = {
    data: CommentTouristPointCreateManyUserClientByClientIdInput | CommentTouristPointCreateManyUserClientByClientIdInput[]
    skipDuplicates?: boolean
  }

  export type CommentCommercialPointCreateWithoutUserClientByClientEmailInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientByClientId: User_ClientCreateNestedOneWithoutCommentCommercialPointByClientIdInput
    userCommercialPointByCommercialPointId: Ponto_ComercialCreateNestedOneWithoutCommentCommercialPointByCommercialPointIdInput
  }

  export type CommentCommercialPointUncheckedCreateWithoutUserClientByClientEmailInput = {
    id?: string
    dataPublication: Date | string
    content: string
    idUserClient: string
    idCommercialPoint: string
  }

  export type CommentCommercialPointCreateOrConnectWithoutUserClientByClientEmailInput = {
    where: CommentCommercialPointWhereUniqueInput
    create: XOR<CommentCommercialPointCreateWithoutUserClientByClientEmailInput, CommentCommercialPointUncheckedCreateWithoutUserClientByClientEmailInput>
  }

  export type CommentCommercialPointCreateManyUserClientByClientEmailInputEnvelope = {
    data: CommentCommercialPointCreateManyUserClientByClientEmailInput | CommentCommercialPointCreateManyUserClientByClientEmailInput[]
    skipDuplicates?: boolean
  }

  export type CommentCommercialPointCreateWithoutUserClientByClientIdInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientByClientEmail: User_ClientCreateNestedOneWithoutCommentCommercialPointByClientEmailInput
    userCommercialPointByCommercialPointId: Ponto_ComercialCreateNestedOneWithoutCommentCommercialPointByCommercialPointIdInput
  }

  export type CommentCommercialPointUncheckedCreateWithoutUserClientByClientIdInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientEmail: string
    idCommercialPoint: string
  }

  export type CommentCommercialPointCreateOrConnectWithoutUserClientByClientIdInput = {
    where: CommentCommercialPointWhereUniqueInput
    create: XOR<CommentCommercialPointCreateWithoutUserClientByClientIdInput, CommentCommercialPointUncheckedCreateWithoutUserClientByClientIdInput>
  }

  export type CommentCommercialPointCreateManyUserClientByClientIdInputEnvelope = {
    data: CommentCommercialPointCreateManyUserClientByClientIdInput | CommentCommercialPointCreateManyUserClientByClientIdInput[]
    skipDuplicates?: boolean
  }

  export type FavoriteCommercialPointCreateWithoutUserClientByClientIdInput = {
    id?: string
    Favorite?: boolean
    userCommercialPointByCommercialPointId: Ponto_ComercialCreateNestedOneWithoutFavoriteCommercialPointByCommercialPointIdInput
  }

  export type FavoriteCommercialPointUncheckedCreateWithoutUserClientByClientIdInput = {
    id?: string
    Favorite?: boolean
    idCommercialPoint: string
  }

  export type FavoriteCommercialPointCreateOrConnectWithoutUserClientByClientIdInput = {
    where: FavoriteCommercialPointWhereUniqueInput
    create: XOR<FavoriteCommercialPointCreateWithoutUserClientByClientIdInput, FavoriteCommercialPointUncheckedCreateWithoutUserClientByClientIdInput>
  }

  export type FavoriteCommercialPointCreateManyUserClientByClientIdInputEnvelope = {
    data: FavoriteCommercialPointCreateManyUserClientByClientIdInput | FavoriteCommercialPointCreateManyUserClientByClientIdInput[]
    skipDuplicates?: boolean
  }

  export type FavoriteTouristPointCreateWithoutUserClientByClientIdInput = {
    id?: string
    Favorite?: boolean
    userTouristPointByTouristPointId: Ponto_TuristicoCreateNestedOneWithoutFavoriteTouristPointByTouristPointIdInput
  }

  export type FavoriteTouristPointUncheckedCreateWithoutUserClientByClientIdInput = {
    id?: string
    Favorite?: boolean
    idTouristPoint: string
  }

  export type FavoriteTouristPointCreateOrConnectWithoutUserClientByClientIdInput = {
    where: FavoriteTouristPointWhereUniqueInput
    create: XOR<FavoriteTouristPointCreateWithoutUserClientByClientIdInput, FavoriteTouristPointUncheckedCreateWithoutUserClientByClientIdInput>
  }

  export type FavoriteTouristPointCreateManyUserClientByClientIdInputEnvelope = {
    data: FavoriteTouristPointCreateManyUserClientByClientIdInput | FavoriteTouristPointCreateManyUserClientByClientIdInput[]
    skipDuplicates?: boolean
  }

  export type FavoriteRoadMapCreateWithoutUserClientByClientIdInput = {
    id?: string
    Favorite?: boolean
    userRoadMapPointByRoadMapId: Travel_Road_MapCreateNestedOneWithoutFavoriteRoadMapByRoadMapIdInput
  }

  export type FavoriteRoadMapUncheckedCreateWithoutUserClientByClientIdInput = {
    id?: string
    Favorite?: boolean
    idRoadMap: string
  }

  export type FavoriteRoadMapCreateOrConnectWithoutUserClientByClientIdInput = {
    where: FavoriteRoadMapWhereUniqueInput
    create: XOR<FavoriteRoadMapCreateWithoutUserClientByClientIdInput, FavoriteRoadMapUncheckedCreateWithoutUserClientByClientIdInput>
  }

  export type FavoriteRoadMapCreateManyUserClientByClientIdInputEnvelope = {
    data: FavoriteRoadMapCreateManyUserClientByClientIdInput | FavoriteRoadMapCreateManyUserClientByClientIdInput[]
    skipDuplicates?: boolean
  }

  export type notificationTouristPointCreateWithoutUserNotificationTouristPointByIdClientInput = {
    id?: string
    userNotificationTouristPointByIdTouristPoint: Ponto_TuristicoCreateNestedOneWithoutUserNotificationTouristPointByIdTouristPointInput
  }

  export type notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdClientInput = {
    id?: string
    idTouristPoint: string
  }

  export type notificationTouristPointCreateOrConnectWithoutUserNotificationTouristPointByIdClientInput = {
    where: notificationTouristPointWhereUniqueInput
    create: XOR<notificationTouristPointCreateWithoutUserNotificationTouristPointByIdClientInput, notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdClientInput>
  }

  export type notificationTouristPointCreateManyUserNotificationTouristPointByIdClientInputEnvelope = {
    data: notificationTouristPointCreateManyUserNotificationTouristPointByIdClientInput | notificationTouristPointCreateManyUserNotificationTouristPointByIdClientInput[]
    skipDuplicates?: boolean
  }

  export type notificationRoadMapCreateWithoutUserNotificationRoadMapByIdClientInput = {
    id?: string
    userNotificationRoadMapByIdRoadMap: Travel_Road_MapCreateNestedOneWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdClientInput = {
    id?: string
    idRoadMap: string
  }

  export type notificationRoadMapCreateOrConnectWithoutUserNotificationRoadMapByIdClientInput = {
    where: notificationRoadMapWhereUniqueInput
    create: XOR<notificationRoadMapCreateWithoutUserNotificationRoadMapByIdClientInput, notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdClientInput>
  }

  export type notificationRoadMapCreateManyUserNotificationRoadMapByIdClientInputEnvelope = {
    data: notificationRoadMapCreateManyUserNotificationRoadMapByIdClientInput | notificationRoadMapCreateManyUserNotificationRoadMapByIdClientInput[]
    skipDuplicates?: boolean
  }

  export type reportRoadMapCreateWithoutUserReportRoadMapByIdUserReportInput = {
    id?: string
    content: string
    userReportRoadMapByIdRoadMap: Travel_Road_MapCreateNestedOneWithoutUserReportRoadMapByIdRoadMapInput
  }

  export type reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdUserReportInput = {
    id?: string
    content: string
    idRoadMap: string
  }

  export type reportRoadMapCreateOrConnectWithoutUserReportRoadMapByIdUserReportInput = {
    where: reportRoadMapWhereUniqueInput
    create: XOR<reportRoadMapCreateWithoutUserReportRoadMapByIdUserReportInput, reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdUserReportInput>
  }

  export type reportRoadMapCreateManyUserReportRoadMapByIdUserReportInputEnvelope = {
    data: reportRoadMapCreateManyUserReportRoadMapByIdUserReportInput | reportRoadMapCreateManyUserReportRoadMapByIdUserReportInput[]
    skipDuplicates?: boolean
  }

  export type reportCommercialPointCreateWithoutUserReportCommercialPointByIdUserReportInput = {
    id?: string
    content: string
    userReportCommercialPointByIdCommercialPoint: Ponto_ComercialCreateNestedOneWithoutReportCommercialPointByIdCommercialPointInput
  }

  export type reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdUserReportInput = {
    id?: string
    content: string
    idCommercialPoint: string
  }

  export type reportCommercialPointCreateOrConnectWithoutUserReportCommercialPointByIdUserReportInput = {
    where: reportCommercialPointWhereUniqueInput
    create: XOR<reportCommercialPointCreateWithoutUserReportCommercialPointByIdUserReportInput, reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdUserReportInput>
  }

  export type reportCommercialPointCreateManyUserReportCommercialPointByIdUserReportInputEnvelope = {
    data: reportCommercialPointCreateManyUserReportCommercialPointByIdUserReportInput | reportCommercialPointCreateManyUserReportCommercialPointByIdUserReportInput[]
    skipDuplicates?: boolean
  }

  export type reportTouristPointCreateWithoutUserReportTouristPointByIdUserReportInput = {
    id?: string
    content: string
    userReportTouristPointByIdTouristPoint: Ponto_TuristicoCreateNestedOneWithoutUserReportTouristPointByIdTouristPointInput
  }

  export type reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdUserReportInput = {
    id?: string
    content: string
    idTouristPoint: string
  }

  export type reportTouristPointCreateOrConnectWithoutUserReportTouristPointByIdUserReportInput = {
    where: reportTouristPointWhereUniqueInput
    create: XOR<reportTouristPointCreateWithoutUserReportTouristPointByIdUserReportInput, reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdUserReportInput>
  }

  export type reportTouristPointCreateManyUserReportTouristPointByIdUserReportInputEnvelope = {
    data: reportTouristPointCreateManyUserReportTouristPointByIdUserReportInput | reportTouristPointCreateManyUserReportTouristPointByIdUserReportInput[]
    skipDuplicates?: boolean
  }

  export type AvaliationRoadMapUpsertWithWhereUniqueWithoutUserClientByEmailInput = {
    where: AvaliationRoadMapWhereUniqueInput
    update: XOR<AvaliationRoadMapUpdateWithoutUserClientByEmailInput, AvaliationRoadMapUncheckedUpdateWithoutUserClientByEmailInput>
    create: XOR<AvaliationRoadMapCreateWithoutUserClientByEmailInput, AvaliationRoadMapUncheckedCreateWithoutUserClientByEmailInput>
  }

  export type AvaliationRoadMapUpdateWithWhereUniqueWithoutUserClientByEmailInput = {
    where: AvaliationRoadMapWhereUniqueInput
    data: XOR<AvaliationRoadMapUpdateWithoutUserClientByEmailInput, AvaliationRoadMapUncheckedUpdateWithoutUserClientByEmailInput>
  }

  export type AvaliationRoadMapUpdateManyWithWhereWithoutUserClientByEmailInput = {
    where: AvaliationRoadMapScalarWhereInput
    data: XOR<AvaliationRoadMapUpdateManyMutationInput, AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailInput>
  }

  export type AvaliationRoadMapScalarWhereInput = {
    AND?: AvaliationRoadMapScalarWhereInput | AvaliationRoadMapScalarWhereInput[]
    OR?: AvaliationRoadMapScalarWhereInput[]
    NOT?: AvaliationRoadMapScalarWhereInput | AvaliationRoadMapScalarWhereInput[]
    id?: StringFilter<"AvaliationRoadMap"> | string
    dataPublication?: DateTimeFilter<"AvaliationRoadMap"> | Date | string
    avaliation?: IntFilter<"AvaliationRoadMap"> | number
    userClientEmail?: StringFilter<"AvaliationRoadMap"> | string
    idUserClient?: StringFilter<"AvaliationRoadMap"> | string
    idTravelRoadMap?: StringFilter<"AvaliationRoadMap"> | string
  }

  export type AvaliationRoadMapUpsertWithWhereUniqueWithoutUserClientByIdClientInput = {
    where: AvaliationRoadMapWhereUniqueInput
    update: XOR<AvaliationRoadMapUpdateWithoutUserClientByIdClientInput, AvaliationRoadMapUncheckedUpdateWithoutUserClientByIdClientInput>
    create: XOR<AvaliationRoadMapCreateWithoutUserClientByIdClientInput, AvaliationRoadMapUncheckedCreateWithoutUserClientByIdClientInput>
  }

  export type AvaliationRoadMapUpdateWithWhereUniqueWithoutUserClientByIdClientInput = {
    where: AvaliationRoadMapWhereUniqueInput
    data: XOR<AvaliationRoadMapUpdateWithoutUserClientByIdClientInput, AvaliationRoadMapUncheckedUpdateWithoutUserClientByIdClientInput>
  }

  export type AvaliationRoadMapUpdateManyWithWhereWithoutUserClientByIdClientInput = {
    where: AvaliationRoadMapScalarWhereInput
    data: XOR<AvaliationRoadMapUpdateManyMutationInput, AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientInput>
  }

  export type Travel_Road_MapUpsertWithWhereUniqueWithoutUserClientInput = {
    where: Travel_Road_MapWhereUniqueInput
    update: XOR<Travel_Road_MapUpdateWithoutUserClientInput, Travel_Road_MapUncheckedUpdateWithoutUserClientInput>
    create: XOR<Travel_Road_MapCreateWithoutUserClientInput, Travel_Road_MapUncheckedCreateWithoutUserClientInput>
  }

  export type Travel_Road_MapUpdateWithWhereUniqueWithoutUserClientInput = {
    where: Travel_Road_MapWhereUniqueInput
    data: XOR<Travel_Road_MapUpdateWithoutUserClientInput, Travel_Road_MapUncheckedUpdateWithoutUserClientInput>
  }

  export type Travel_Road_MapUpdateManyWithWhereWithoutUserClientInput = {
    where: Travel_Road_MapScalarWhereInput
    data: XOR<Travel_Road_MapUpdateManyMutationInput, Travel_Road_MapUncheckedUpdateManyWithoutUserClientInput>
  }

  export type Travel_Road_MapScalarWhereInput = {
    AND?: Travel_Road_MapScalarWhereInput | Travel_Road_MapScalarWhereInput[]
    OR?: Travel_Road_MapScalarWhereInput[]
    NOT?: Travel_Road_MapScalarWhereInput | Travel_Road_MapScalarWhereInput[]
    id?: StringFilter<"Travel_Road_Map"> | string
    title?: StringFilter<"Travel_Road_Map"> | string
    dataPublication?: DateTimeNullableFilter<"Travel_Road_Map"> | Date | string | null
    description?: StringFilter<"Travel_Road_Map"> | string
    idCreator?: StringFilter<"Travel_Road_Map"> | string
    avaliationValue?: IntFilter<"Travel_Road_Map"> | number
    isPublished?: BoolFilter<"Travel_Road_Map"> | boolean
    userImageUrl?: StringNullableFilter<"Travel_Road_Map"> | string | null
    reportNumber?: IntFilter<"Travel_Road_Map"> | number
  }

  export type AvaliationTouristPointUpsertWithWhereUniqueWithoutUserClientByEmailInput = {
    where: AvaliationTouristPointWhereUniqueInput
    update: XOR<AvaliationTouristPointUpdateWithoutUserClientByEmailInput, AvaliationTouristPointUncheckedUpdateWithoutUserClientByEmailInput>
    create: XOR<AvaliationTouristPointCreateWithoutUserClientByEmailInput, AvaliationTouristPointUncheckedCreateWithoutUserClientByEmailInput>
  }

  export type AvaliationTouristPointUpdateWithWhereUniqueWithoutUserClientByEmailInput = {
    where: AvaliationTouristPointWhereUniqueInput
    data: XOR<AvaliationTouristPointUpdateWithoutUserClientByEmailInput, AvaliationTouristPointUncheckedUpdateWithoutUserClientByEmailInput>
  }

  export type AvaliationTouristPointUpdateManyWithWhereWithoutUserClientByEmailInput = {
    where: AvaliationTouristPointScalarWhereInput
    data: XOR<AvaliationTouristPointUpdateManyMutationInput, AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailInput>
  }

  export type AvaliationTouristPointScalarWhereInput = {
    AND?: AvaliationTouristPointScalarWhereInput | AvaliationTouristPointScalarWhereInput[]
    OR?: AvaliationTouristPointScalarWhereInput[]
    NOT?: AvaliationTouristPointScalarWhereInput | AvaliationTouristPointScalarWhereInput[]
    id?: StringFilter<"AvaliationTouristPoint"> | string
    dataPublication?: DateTimeFilter<"AvaliationTouristPoint"> | Date | string
    avaliation?: IntFilter<"AvaliationTouristPoint"> | number
    userClientEmail?: StringFilter<"AvaliationTouristPoint"> | string
    idUserClient?: StringFilter<"AvaliationTouristPoint"> | string
    idTouristPoint?: StringFilter<"AvaliationTouristPoint"> | string
  }

  export type AvaliationTouristPointUpsertWithWhereUniqueWithoutUserClientByIdClientInput = {
    where: AvaliationTouristPointWhereUniqueInput
    update: XOR<AvaliationTouristPointUpdateWithoutUserClientByIdClientInput, AvaliationTouristPointUncheckedUpdateWithoutUserClientByIdClientInput>
    create: XOR<AvaliationTouristPointCreateWithoutUserClientByIdClientInput, AvaliationTouristPointUncheckedCreateWithoutUserClientByIdClientInput>
  }

  export type AvaliationTouristPointUpdateWithWhereUniqueWithoutUserClientByIdClientInput = {
    where: AvaliationTouristPointWhereUniqueInput
    data: XOR<AvaliationTouristPointUpdateWithoutUserClientByIdClientInput, AvaliationTouristPointUncheckedUpdateWithoutUserClientByIdClientInput>
  }

  export type AvaliationTouristPointUpdateManyWithWhereWithoutUserClientByIdClientInput = {
    where: AvaliationTouristPointScalarWhereInput
    data: XOR<AvaliationTouristPointUpdateManyMutationInput, AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientInput>
  }

  export type AvaliationCommercialPointUpsertWithWhereUniqueWithoutUserClientByEmailClientInput = {
    where: AvaliationCommercialPointWhereUniqueInput
    update: XOR<AvaliationCommercialPointUpdateWithoutUserClientByEmailClientInput, AvaliationCommercialPointUncheckedUpdateWithoutUserClientByEmailClientInput>
    create: XOR<AvaliationCommercialPointCreateWithoutUserClientByEmailClientInput, AvaliationCommercialPointUncheckedCreateWithoutUserClientByEmailClientInput>
  }

  export type AvaliationCommercialPointUpdateWithWhereUniqueWithoutUserClientByEmailClientInput = {
    where: AvaliationCommercialPointWhereUniqueInput
    data: XOR<AvaliationCommercialPointUpdateWithoutUserClientByEmailClientInput, AvaliationCommercialPointUncheckedUpdateWithoutUserClientByEmailClientInput>
  }

  export type AvaliationCommercialPointUpdateManyWithWhereWithoutUserClientByEmailClientInput = {
    where: AvaliationCommercialPointScalarWhereInput
    data: XOR<AvaliationCommercialPointUpdateManyMutationInput, AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientInput>
  }

  export type AvaliationCommercialPointScalarWhereInput = {
    AND?: AvaliationCommercialPointScalarWhereInput | AvaliationCommercialPointScalarWhereInput[]
    OR?: AvaliationCommercialPointScalarWhereInput[]
    NOT?: AvaliationCommercialPointScalarWhereInput | AvaliationCommercialPointScalarWhereInput[]
    id?: StringFilter<"AvaliationCommercialPoint"> | string
    dataPublication?: DateTimeFilter<"AvaliationCommercialPoint"> | Date | string
    avaliation?: IntFilter<"AvaliationCommercialPoint"> | number
    userClientEmail?: StringFilter<"AvaliationCommercialPoint"> | string
    idUserClient?: StringFilter<"AvaliationCommercialPoint"> | string
    idCommercialPoint?: StringFilter<"AvaliationCommercialPoint"> | string
  }

  export type AvaliationCommercialPointUpsertWithWhereUniqueWithoutUserClientByIdClientInput = {
    where: AvaliationCommercialPointWhereUniqueInput
    update: XOR<AvaliationCommercialPointUpdateWithoutUserClientByIdClientInput, AvaliationCommercialPointUncheckedUpdateWithoutUserClientByIdClientInput>
    create: XOR<AvaliationCommercialPointCreateWithoutUserClientByIdClientInput, AvaliationCommercialPointUncheckedCreateWithoutUserClientByIdClientInput>
  }

  export type AvaliationCommercialPointUpdateWithWhereUniqueWithoutUserClientByIdClientInput = {
    where: AvaliationCommercialPointWhereUniqueInput
    data: XOR<AvaliationCommercialPointUpdateWithoutUserClientByIdClientInput, AvaliationCommercialPointUncheckedUpdateWithoutUserClientByIdClientInput>
  }

  export type AvaliationCommercialPointUpdateManyWithWhereWithoutUserClientByIdClientInput = {
    where: AvaliationCommercialPointScalarWhereInput
    data: XOR<AvaliationCommercialPointUpdateManyMutationInput, AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientInput>
  }

  export type CommentRoadMapUpsertWithWhereUniqueWithoutUserClientByClientEmailInput = {
    where: CommentRoadMapWhereUniqueInput
    update: XOR<CommentRoadMapUpdateWithoutUserClientByClientEmailInput, CommentRoadMapUncheckedUpdateWithoutUserClientByClientEmailInput>
    create: XOR<CommentRoadMapCreateWithoutUserClientByClientEmailInput, CommentRoadMapUncheckedCreateWithoutUserClientByClientEmailInput>
  }

  export type CommentRoadMapUpdateWithWhereUniqueWithoutUserClientByClientEmailInput = {
    where: CommentRoadMapWhereUniqueInput
    data: XOR<CommentRoadMapUpdateWithoutUserClientByClientEmailInput, CommentRoadMapUncheckedUpdateWithoutUserClientByClientEmailInput>
  }

  export type CommentRoadMapUpdateManyWithWhereWithoutUserClientByClientEmailInput = {
    where: CommentRoadMapScalarWhereInput
    data: XOR<CommentRoadMapUpdateManyMutationInput, CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailInput>
  }

  export type CommentRoadMapScalarWhereInput = {
    AND?: CommentRoadMapScalarWhereInput | CommentRoadMapScalarWhereInput[]
    OR?: CommentRoadMapScalarWhereInput[]
    NOT?: CommentRoadMapScalarWhereInput | CommentRoadMapScalarWhereInput[]
    id?: StringFilter<"CommentRoadMap"> | string
    dataPublication?: DateTimeFilter<"CommentRoadMap"> | Date | string
    content?: StringFilter<"CommentRoadMap"> | string
    userClientEmail?: StringFilter<"CommentRoadMap"> | string
    idUserClient?: StringFilter<"CommentRoadMap"> | string
    idTravelRoadMap?: StringFilter<"CommentRoadMap"> | string
  }

  export type CommentRoadMapUpsertWithWhereUniqueWithoutUserClientByClientIdInput = {
    where: CommentRoadMapWhereUniqueInput
    update: XOR<CommentRoadMapUpdateWithoutUserClientByClientIdInput, CommentRoadMapUncheckedUpdateWithoutUserClientByClientIdInput>
    create: XOR<CommentRoadMapCreateWithoutUserClientByClientIdInput, CommentRoadMapUncheckedCreateWithoutUserClientByClientIdInput>
  }

  export type CommentRoadMapUpdateWithWhereUniqueWithoutUserClientByClientIdInput = {
    where: CommentRoadMapWhereUniqueInput
    data: XOR<CommentRoadMapUpdateWithoutUserClientByClientIdInput, CommentRoadMapUncheckedUpdateWithoutUserClientByClientIdInput>
  }

  export type CommentRoadMapUpdateManyWithWhereWithoutUserClientByClientIdInput = {
    where: CommentRoadMapScalarWhereInput
    data: XOR<CommentRoadMapUpdateManyMutationInput, CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdInput>
  }

  export type CommentTouristPointUpsertWithWhereUniqueWithoutUserClientByClientEmailInput = {
    where: CommentTouristPointWhereUniqueInput
    update: XOR<CommentTouristPointUpdateWithoutUserClientByClientEmailInput, CommentTouristPointUncheckedUpdateWithoutUserClientByClientEmailInput>
    create: XOR<CommentTouristPointCreateWithoutUserClientByClientEmailInput, CommentTouristPointUncheckedCreateWithoutUserClientByClientEmailInput>
  }

  export type CommentTouristPointUpdateWithWhereUniqueWithoutUserClientByClientEmailInput = {
    where: CommentTouristPointWhereUniqueInput
    data: XOR<CommentTouristPointUpdateWithoutUserClientByClientEmailInput, CommentTouristPointUncheckedUpdateWithoutUserClientByClientEmailInput>
  }

  export type CommentTouristPointUpdateManyWithWhereWithoutUserClientByClientEmailInput = {
    where: CommentTouristPointScalarWhereInput
    data: XOR<CommentTouristPointUpdateManyMutationInput, CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailInput>
  }

  export type CommentTouristPointScalarWhereInput = {
    AND?: CommentTouristPointScalarWhereInput | CommentTouristPointScalarWhereInput[]
    OR?: CommentTouristPointScalarWhereInput[]
    NOT?: CommentTouristPointScalarWhereInput | CommentTouristPointScalarWhereInput[]
    id?: StringFilter<"CommentTouristPoint"> | string
    dataPublication?: DateTimeFilter<"CommentTouristPoint"> | Date | string
    content?: StringFilter<"CommentTouristPoint"> | string
    userClientEmail?: StringFilter<"CommentTouristPoint"> | string
    idUserClient?: StringFilter<"CommentTouristPoint"> | string
    idTouristPoint?: StringFilter<"CommentTouristPoint"> | string
  }

  export type CommentTouristPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput = {
    where: CommentTouristPointWhereUniqueInput
    update: XOR<CommentTouristPointUpdateWithoutUserClientByClientIdInput, CommentTouristPointUncheckedUpdateWithoutUserClientByClientIdInput>
    create: XOR<CommentTouristPointCreateWithoutUserClientByClientIdInput, CommentTouristPointUncheckedCreateWithoutUserClientByClientIdInput>
  }

  export type CommentTouristPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput = {
    where: CommentTouristPointWhereUniqueInput
    data: XOR<CommentTouristPointUpdateWithoutUserClientByClientIdInput, CommentTouristPointUncheckedUpdateWithoutUserClientByClientIdInput>
  }

  export type CommentTouristPointUpdateManyWithWhereWithoutUserClientByClientIdInput = {
    where: CommentTouristPointScalarWhereInput
    data: XOR<CommentTouristPointUpdateManyMutationInput, CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdInput>
  }

  export type CommentCommercialPointUpsertWithWhereUniqueWithoutUserClientByClientEmailInput = {
    where: CommentCommercialPointWhereUniqueInput
    update: XOR<CommentCommercialPointUpdateWithoutUserClientByClientEmailInput, CommentCommercialPointUncheckedUpdateWithoutUserClientByClientEmailInput>
    create: XOR<CommentCommercialPointCreateWithoutUserClientByClientEmailInput, CommentCommercialPointUncheckedCreateWithoutUserClientByClientEmailInput>
  }

  export type CommentCommercialPointUpdateWithWhereUniqueWithoutUserClientByClientEmailInput = {
    where: CommentCommercialPointWhereUniqueInput
    data: XOR<CommentCommercialPointUpdateWithoutUserClientByClientEmailInput, CommentCommercialPointUncheckedUpdateWithoutUserClientByClientEmailInput>
  }

  export type CommentCommercialPointUpdateManyWithWhereWithoutUserClientByClientEmailInput = {
    where: CommentCommercialPointScalarWhereInput
    data: XOR<CommentCommercialPointUpdateManyMutationInput, CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailInput>
  }

  export type CommentCommercialPointScalarWhereInput = {
    AND?: CommentCommercialPointScalarWhereInput | CommentCommercialPointScalarWhereInput[]
    OR?: CommentCommercialPointScalarWhereInput[]
    NOT?: CommentCommercialPointScalarWhereInput | CommentCommercialPointScalarWhereInput[]
    id?: StringFilter<"CommentCommercialPoint"> | string
    dataPublication?: DateTimeFilter<"CommentCommercialPoint"> | Date | string
    content?: StringFilter<"CommentCommercialPoint"> | string
    userClientEmail?: StringFilter<"CommentCommercialPoint"> | string
    idUserClient?: StringFilter<"CommentCommercialPoint"> | string
    idCommercialPoint?: StringFilter<"CommentCommercialPoint"> | string
  }

  export type CommentCommercialPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput = {
    where: CommentCommercialPointWhereUniqueInput
    update: XOR<CommentCommercialPointUpdateWithoutUserClientByClientIdInput, CommentCommercialPointUncheckedUpdateWithoutUserClientByClientIdInput>
    create: XOR<CommentCommercialPointCreateWithoutUserClientByClientIdInput, CommentCommercialPointUncheckedCreateWithoutUserClientByClientIdInput>
  }

  export type CommentCommercialPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput = {
    where: CommentCommercialPointWhereUniqueInput
    data: XOR<CommentCommercialPointUpdateWithoutUserClientByClientIdInput, CommentCommercialPointUncheckedUpdateWithoutUserClientByClientIdInput>
  }

  export type CommentCommercialPointUpdateManyWithWhereWithoutUserClientByClientIdInput = {
    where: CommentCommercialPointScalarWhereInput
    data: XOR<CommentCommercialPointUpdateManyMutationInput, CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdInput>
  }

  export type FavoriteCommercialPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput = {
    where: FavoriteCommercialPointWhereUniqueInput
    update: XOR<FavoriteCommercialPointUpdateWithoutUserClientByClientIdInput, FavoriteCommercialPointUncheckedUpdateWithoutUserClientByClientIdInput>
    create: XOR<FavoriteCommercialPointCreateWithoutUserClientByClientIdInput, FavoriteCommercialPointUncheckedCreateWithoutUserClientByClientIdInput>
  }

  export type FavoriteCommercialPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput = {
    where: FavoriteCommercialPointWhereUniqueInput
    data: XOR<FavoriteCommercialPointUpdateWithoutUserClientByClientIdInput, FavoriteCommercialPointUncheckedUpdateWithoutUserClientByClientIdInput>
  }

  export type FavoriteCommercialPointUpdateManyWithWhereWithoutUserClientByClientIdInput = {
    where: FavoriteCommercialPointScalarWhereInput
    data: XOR<FavoriteCommercialPointUpdateManyMutationInput, FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdInput>
  }

  export type FavoriteCommercialPointScalarWhereInput = {
    AND?: FavoriteCommercialPointScalarWhereInput | FavoriteCommercialPointScalarWhereInput[]
    OR?: FavoriteCommercialPointScalarWhereInput[]
    NOT?: FavoriteCommercialPointScalarWhereInput | FavoriteCommercialPointScalarWhereInput[]
    id?: StringFilter<"FavoriteCommercialPoint"> | string
    Favorite?: BoolFilter<"FavoriteCommercialPoint"> | boolean
    idUserClient?: StringFilter<"FavoriteCommercialPoint"> | string
    idCommercialPoint?: StringFilter<"FavoriteCommercialPoint"> | string
  }

  export type FavoriteTouristPointUpsertWithWhereUniqueWithoutUserClientByClientIdInput = {
    where: FavoriteTouristPointWhereUniqueInput
    update: XOR<FavoriteTouristPointUpdateWithoutUserClientByClientIdInput, FavoriteTouristPointUncheckedUpdateWithoutUserClientByClientIdInput>
    create: XOR<FavoriteTouristPointCreateWithoutUserClientByClientIdInput, FavoriteTouristPointUncheckedCreateWithoutUserClientByClientIdInput>
  }

  export type FavoriteTouristPointUpdateWithWhereUniqueWithoutUserClientByClientIdInput = {
    where: FavoriteTouristPointWhereUniqueInput
    data: XOR<FavoriteTouristPointUpdateWithoutUserClientByClientIdInput, FavoriteTouristPointUncheckedUpdateWithoutUserClientByClientIdInput>
  }

  export type FavoriteTouristPointUpdateManyWithWhereWithoutUserClientByClientIdInput = {
    where: FavoriteTouristPointScalarWhereInput
    data: XOR<FavoriteTouristPointUpdateManyMutationInput, FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdInput>
  }

  export type FavoriteTouristPointScalarWhereInput = {
    AND?: FavoriteTouristPointScalarWhereInput | FavoriteTouristPointScalarWhereInput[]
    OR?: FavoriteTouristPointScalarWhereInput[]
    NOT?: FavoriteTouristPointScalarWhereInput | FavoriteTouristPointScalarWhereInput[]
    id?: StringFilter<"FavoriteTouristPoint"> | string
    Favorite?: BoolFilter<"FavoriteTouristPoint"> | boolean
    idUserClient?: StringFilter<"FavoriteTouristPoint"> | string
    idTouristPoint?: StringFilter<"FavoriteTouristPoint"> | string
  }

  export type FavoriteRoadMapUpsertWithWhereUniqueWithoutUserClientByClientIdInput = {
    where: FavoriteRoadMapWhereUniqueInput
    update: XOR<FavoriteRoadMapUpdateWithoutUserClientByClientIdInput, FavoriteRoadMapUncheckedUpdateWithoutUserClientByClientIdInput>
    create: XOR<FavoriteRoadMapCreateWithoutUserClientByClientIdInput, FavoriteRoadMapUncheckedCreateWithoutUserClientByClientIdInput>
  }

  export type FavoriteRoadMapUpdateWithWhereUniqueWithoutUserClientByClientIdInput = {
    where: FavoriteRoadMapWhereUniqueInput
    data: XOR<FavoriteRoadMapUpdateWithoutUserClientByClientIdInput, FavoriteRoadMapUncheckedUpdateWithoutUserClientByClientIdInput>
  }

  export type FavoriteRoadMapUpdateManyWithWhereWithoutUserClientByClientIdInput = {
    where: FavoriteRoadMapScalarWhereInput
    data: XOR<FavoriteRoadMapUpdateManyMutationInput, FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdInput>
  }

  export type FavoriteRoadMapScalarWhereInput = {
    AND?: FavoriteRoadMapScalarWhereInput | FavoriteRoadMapScalarWhereInput[]
    OR?: FavoriteRoadMapScalarWhereInput[]
    NOT?: FavoriteRoadMapScalarWhereInput | FavoriteRoadMapScalarWhereInput[]
    id?: StringFilter<"FavoriteRoadMap"> | string
    Favorite?: BoolFilter<"FavoriteRoadMap"> | boolean
    idUserClient?: StringFilter<"FavoriteRoadMap"> | string
    idRoadMap?: StringFilter<"FavoriteRoadMap"> | string
  }

  export type notificationTouristPointUpsertWithWhereUniqueWithoutUserNotificationTouristPointByIdClientInput = {
    where: notificationTouristPointWhereUniqueInput
    update: XOR<notificationTouristPointUpdateWithoutUserNotificationTouristPointByIdClientInput, notificationTouristPointUncheckedUpdateWithoutUserNotificationTouristPointByIdClientInput>
    create: XOR<notificationTouristPointCreateWithoutUserNotificationTouristPointByIdClientInput, notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdClientInput>
  }

  export type notificationTouristPointUpdateWithWhereUniqueWithoutUserNotificationTouristPointByIdClientInput = {
    where: notificationTouristPointWhereUniqueInput
    data: XOR<notificationTouristPointUpdateWithoutUserNotificationTouristPointByIdClientInput, notificationTouristPointUncheckedUpdateWithoutUserNotificationTouristPointByIdClientInput>
  }

  export type notificationTouristPointUpdateManyWithWhereWithoutUserNotificationTouristPointByIdClientInput = {
    where: notificationTouristPointScalarWhereInput
    data: XOR<notificationTouristPointUpdateManyMutationInput, notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientInput>
  }

  export type notificationTouristPointScalarWhereInput = {
    AND?: notificationTouristPointScalarWhereInput | notificationTouristPointScalarWhereInput[]
    OR?: notificationTouristPointScalarWhereInput[]
    NOT?: notificationTouristPointScalarWhereInput | notificationTouristPointScalarWhereInput[]
    id?: StringFilter<"notificationTouristPoint"> | string
    idClient?: StringFilter<"notificationTouristPoint"> | string
    idTouristPoint?: StringFilter<"notificationTouristPoint"> | string
  }

  export type notificationRoadMapUpsertWithWhereUniqueWithoutUserNotificationRoadMapByIdClientInput = {
    where: notificationRoadMapWhereUniqueInput
    update: XOR<notificationRoadMapUpdateWithoutUserNotificationRoadMapByIdClientInput, notificationRoadMapUncheckedUpdateWithoutUserNotificationRoadMapByIdClientInput>
    create: XOR<notificationRoadMapCreateWithoutUserNotificationRoadMapByIdClientInput, notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdClientInput>
  }

  export type notificationRoadMapUpdateWithWhereUniqueWithoutUserNotificationRoadMapByIdClientInput = {
    where: notificationRoadMapWhereUniqueInput
    data: XOR<notificationRoadMapUpdateWithoutUserNotificationRoadMapByIdClientInput, notificationRoadMapUncheckedUpdateWithoutUserNotificationRoadMapByIdClientInput>
  }

  export type notificationRoadMapUpdateManyWithWhereWithoutUserNotificationRoadMapByIdClientInput = {
    where: notificationRoadMapScalarWhereInput
    data: XOR<notificationRoadMapUpdateManyMutationInput, notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientInput>
  }

  export type notificationRoadMapScalarWhereInput = {
    AND?: notificationRoadMapScalarWhereInput | notificationRoadMapScalarWhereInput[]
    OR?: notificationRoadMapScalarWhereInput[]
    NOT?: notificationRoadMapScalarWhereInput | notificationRoadMapScalarWhereInput[]
    id?: StringFilter<"notificationRoadMap"> | string
    idClient?: StringFilter<"notificationRoadMap"> | string
    idRoadMap?: StringFilter<"notificationRoadMap"> | string
  }

  export type reportRoadMapUpsertWithWhereUniqueWithoutUserReportRoadMapByIdUserReportInput = {
    where: reportRoadMapWhereUniqueInput
    update: XOR<reportRoadMapUpdateWithoutUserReportRoadMapByIdUserReportInput, reportRoadMapUncheckedUpdateWithoutUserReportRoadMapByIdUserReportInput>
    create: XOR<reportRoadMapCreateWithoutUserReportRoadMapByIdUserReportInput, reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdUserReportInput>
  }

  export type reportRoadMapUpdateWithWhereUniqueWithoutUserReportRoadMapByIdUserReportInput = {
    where: reportRoadMapWhereUniqueInput
    data: XOR<reportRoadMapUpdateWithoutUserReportRoadMapByIdUserReportInput, reportRoadMapUncheckedUpdateWithoutUserReportRoadMapByIdUserReportInput>
  }

  export type reportRoadMapUpdateManyWithWhereWithoutUserReportRoadMapByIdUserReportInput = {
    where: reportRoadMapScalarWhereInput
    data: XOR<reportRoadMapUpdateManyMutationInput, reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportInput>
  }

  export type reportRoadMapScalarWhereInput = {
    AND?: reportRoadMapScalarWhereInput | reportRoadMapScalarWhereInput[]
    OR?: reportRoadMapScalarWhereInput[]
    NOT?: reportRoadMapScalarWhereInput | reportRoadMapScalarWhereInput[]
    id?: StringFilter<"reportRoadMap"> | string
    content?: StringFilter<"reportRoadMap"> | string
    idRoadMap?: StringFilter<"reportRoadMap"> | string
    idUserReport?: StringFilter<"reportRoadMap"> | string
  }

  export type reportCommercialPointUpsertWithWhereUniqueWithoutUserReportCommercialPointByIdUserReportInput = {
    where: reportCommercialPointWhereUniqueInput
    update: XOR<reportCommercialPointUpdateWithoutUserReportCommercialPointByIdUserReportInput, reportCommercialPointUncheckedUpdateWithoutUserReportCommercialPointByIdUserReportInput>
    create: XOR<reportCommercialPointCreateWithoutUserReportCommercialPointByIdUserReportInput, reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdUserReportInput>
  }

  export type reportCommercialPointUpdateWithWhereUniqueWithoutUserReportCommercialPointByIdUserReportInput = {
    where: reportCommercialPointWhereUniqueInput
    data: XOR<reportCommercialPointUpdateWithoutUserReportCommercialPointByIdUserReportInput, reportCommercialPointUncheckedUpdateWithoutUserReportCommercialPointByIdUserReportInput>
  }

  export type reportCommercialPointUpdateManyWithWhereWithoutUserReportCommercialPointByIdUserReportInput = {
    where: reportCommercialPointScalarWhereInput
    data: XOR<reportCommercialPointUpdateManyMutationInput, reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportInput>
  }

  export type reportCommercialPointScalarWhereInput = {
    AND?: reportCommercialPointScalarWhereInput | reportCommercialPointScalarWhereInput[]
    OR?: reportCommercialPointScalarWhereInput[]
    NOT?: reportCommercialPointScalarWhereInput | reportCommercialPointScalarWhereInput[]
    id?: StringFilter<"reportCommercialPoint"> | string
    content?: StringFilter<"reportCommercialPoint"> | string
    idCommercialPoint?: StringFilter<"reportCommercialPoint"> | string
    idUserReport?: StringFilter<"reportCommercialPoint"> | string
  }

  export type reportTouristPointUpsertWithWhereUniqueWithoutUserReportTouristPointByIdUserReportInput = {
    where: reportTouristPointWhereUniqueInput
    update: XOR<reportTouristPointUpdateWithoutUserReportTouristPointByIdUserReportInput, reportTouristPointUncheckedUpdateWithoutUserReportTouristPointByIdUserReportInput>
    create: XOR<reportTouristPointCreateWithoutUserReportTouristPointByIdUserReportInput, reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdUserReportInput>
  }

  export type reportTouristPointUpdateWithWhereUniqueWithoutUserReportTouristPointByIdUserReportInput = {
    where: reportTouristPointWhereUniqueInput
    data: XOR<reportTouristPointUpdateWithoutUserReportTouristPointByIdUserReportInput, reportTouristPointUncheckedUpdateWithoutUserReportTouristPointByIdUserReportInput>
  }

  export type reportTouristPointUpdateManyWithWhereWithoutUserReportTouristPointByIdUserReportInput = {
    where: reportTouristPointScalarWhereInput
    data: XOR<reportTouristPointUpdateManyMutationInput, reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportInput>
  }

  export type reportTouristPointScalarWhereInput = {
    AND?: reportTouristPointScalarWhereInput | reportTouristPointScalarWhereInput[]
    OR?: reportTouristPointScalarWhereInput[]
    NOT?: reportTouristPointScalarWhereInput | reportTouristPointScalarWhereInput[]
    id?: StringFilter<"reportTouristPoint"> | string
    content?: StringFilter<"reportTouristPoint"> | string
    idTouristPoint?: StringFilter<"reportTouristPoint"> | string
    idUserReport?: StringFilter<"reportTouristPoint"> | string
  }

  export type Ponto_ComercialCreateWithoutUser_BusinessInput = {
    id?: string
    name: string
    description: string
    local: string
    creationDate: Date | string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    avaliationCommercialPoint?: AvaliationCommercialPointCreateNestedManyWithoutUserCommercialPointByIdCommercialPointInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutPontosComerciaisRelationInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdCommercialPointInput
  }

  export type Ponto_ComercialUncheckedCreateWithoutUser_BusinessInput = {
    id?: string
    name: string
    description: string
    local: string
    creationDate: Date | string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    avaliationCommercialPoint?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByIdCommercialPointInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutPontosComerciaisRelationInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdCommercialPointInput
  }

  export type Ponto_ComercialCreateOrConnectWithoutUser_BusinessInput = {
    where: Ponto_ComercialWhereUniqueInput
    create: XOR<Ponto_ComercialCreateWithoutUser_BusinessInput, Ponto_ComercialUncheckedCreateWithoutUser_BusinessInput>
  }

  export type Ponto_ComercialCreateManyUser_BusinessInputEnvelope = {
    data: Ponto_ComercialCreateManyUser_BusinessInput | Ponto_ComercialCreateManyUser_BusinessInput[]
    skipDuplicates?: boolean
  }

  export type Ponto_ComercialUpsertWithWhereUniqueWithoutUser_BusinessInput = {
    where: Ponto_ComercialWhereUniqueInput
    update: XOR<Ponto_ComercialUpdateWithoutUser_BusinessInput, Ponto_ComercialUncheckedUpdateWithoutUser_BusinessInput>
    create: XOR<Ponto_ComercialCreateWithoutUser_BusinessInput, Ponto_ComercialUncheckedCreateWithoutUser_BusinessInput>
  }

  export type Ponto_ComercialUpdateWithWhereUniqueWithoutUser_BusinessInput = {
    where: Ponto_ComercialWhereUniqueInput
    data: XOR<Ponto_ComercialUpdateWithoutUser_BusinessInput, Ponto_ComercialUncheckedUpdateWithoutUser_BusinessInput>
  }

  export type Ponto_ComercialUpdateManyWithWhereWithoutUser_BusinessInput = {
    where: Ponto_ComercialScalarWhereInput
    data: XOR<Ponto_ComercialUpdateManyMutationInput, Ponto_ComercialUncheckedUpdateManyWithoutUser_BusinessInput>
  }

  export type Ponto_ComercialScalarWhereInput = {
    AND?: Ponto_ComercialScalarWhereInput | Ponto_ComercialScalarWhereInput[]
    OR?: Ponto_ComercialScalarWhereInput[]
    NOT?: Ponto_ComercialScalarWhereInput | Ponto_ComercialScalarWhereInput[]
    id?: StringFilter<"Ponto_Comercial"> | string
    name?: StringFilter<"Ponto_Comercial"> | string
    description?: StringFilter<"Ponto_Comercial"> | string
    local?: StringFilter<"Ponto_Comercial"> | string
    creationDate?: DateTimeFilter<"Ponto_Comercial"> | Date | string
    userImageUrl?: StringNullableFilter<"Ponto_Comercial"> | string | null
    reportNumber?: IntFilter<"Ponto_Comercial"> | number
    isPublished?: BoolFilter<"Ponto_Comercial"> | boolean
    businessId?: StringFilter<"Ponto_Comercial"> | string
  }

  export type User_BusinessCreateWithoutPontosComerciaisInput = {
    id?: string
    CNPJ: string
    name: string
    email: string
    telefone: string
    password: string
    userImageUrl?: string | null
  }

  export type User_BusinessUncheckedCreateWithoutPontosComerciaisInput = {
    id?: string
    CNPJ: string
    name: string
    email: string
    telefone: string
    password: string
    userImageUrl?: string | null
  }

  export type User_BusinessCreateOrConnectWithoutPontosComerciaisInput = {
    where: User_BusinessWhereUniqueInput
    create: XOR<User_BusinessCreateWithoutPontosComerciaisInput, User_BusinessUncheckedCreateWithoutPontosComerciaisInput>
  }

  export type AvaliationCommercialPointCreateWithoutUserCommercialPointByIdCommercialPointInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientByEmailClient: User_ClientCreateNestedOneWithoutAvaliationCommercialPointByUserClientEmailInput
    userClientByIdClient: User_ClientCreateNestedOneWithoutAvaliationCommercialPointByIdCreatorInput
  }

  export type AvaliationCommercialPointUncheckedCreateWithoutUserCommercialPointByIdCommercialPointInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientEmail: string
    idUserClient: string
  }

  export type AvaliationCommercialPointCreateOrConnectWithoutUserCommercialPointByIdCommercialPointInput = {
    where: AvaliationCommercialPointWhereUniqueInput
    create: XOR<AvaliationCommercialPointCreateWithoutUserCommercialPointByIdCommercialPointInput, AvaliationCommercialPointUncheckedCreateWithoutUserCommercialPointByIdCommercialPointInput>
  }

  export type AvaliationCommercialPointCreateManyUserCommercialPointByIdCommercialPointInputEnvelope = {
    data: AvaliationCommercialPointCreateManyUserCommercialPointByIdCommercialPointInput | AvaliationCommercialPointCreateManyUserCommercialPointByIdCommercialPointInput[]
    skipDuplicates?: boolean
  }

  export type CommentCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientByClientEmail: User_ClientCreateNestedOneWithoutCommentCommercialPointByClientEmailInput
    userClientByClientId: User_ClientCreateNestedOneWithoutCommentCommercialPointByClientIdInput
  }

  export type CommentCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientEmail: string
    idUserClient: string
  }

  export type CommentCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput = {
    where: CommentCommercialPointWhereUniqueInput
    create: XOR<CommentCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput, CommentCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput>
  }

  export type CommentCommercialPointCreateManyUserCommercialPointByCommercialPointIdInputEnvelope = {
    data: CommentCommercialPointCreateManyUserCommercialPointByCommercialPointIdInput | CommentCommercialPointCreateManyUserCommercialPointByCommercialPointIdInput[]
    skipDuplicates?: boolean
  }

  export type FavoriteCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput = {
    id?: string
    Favorite?: boolean
    userClientByClientId: User_ClientCreateNestedOneWithoutFavoriteCommercialPointByClientIdInput
  }

  export type FavoriteCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput = {
    id?: string
    Favorite?: boolean
    idUserClient: string
  }

  export type FavoriteCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput = {
    where: FavoriteCommercialPointWhereUniqueInput
    create: XOR<FavoriteCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput, FavoriteCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput>
  }

  export type FavoriteCommercialPointCreateManyUserCommercialPointByCommercialPointIdInputEnvelope = {
    data: FavoriteCommercialPointCreateManyUserCommercialPointByCommercialPointIdInput | FavoriteCommercialPointCreateManyUserCommercialPointByCommercialPointIdInput[]
    skipDuplicates?: boolean
  }

  export type ImageCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput = {
    id?: string
    image: string
  }

  export type ImageCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput = {
    id?: string
    image: string
  }

  export type ImageCommercialPointCreateOrConnectWithoutUserCommercialPointByCommercialPointIdInput = {
    where: ImageCommercialPointWhereUniqueInput
    create: XOR<ImageCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput, ImageCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput>
  }

  export type ImageCommercialPointCreateManyUserCommercialPointByCommercialPointIdInputEnvelope = {
    data: ImageCommercialPointCreateManyUserCommercialPointByCommercialPointIdInput | ImageCommercialPointCreateManyUserCommercialPointByCommercialPointIdInput[]
    skipDuplicates?: boolean
  }

  export type Travel_Road_MapCreateWithoutPontosComerciaisRelationInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    userClient: User_ClientCreateNestedOneWithoutTravelRoadMapsInput
    AvaliationRoadMap?: AvaliationRoadMapCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapUncheckedCreateWithoutPontosComerciaisRelationInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    idCreator: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryUncheckedCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityUncheckedCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapCreateOrConnectWithoutPontosComerciaisRelationInput = {
    where: Travel_Road_MapWhereUniqueInput
    create: XOR<Travel_Road_MapCreateWithoutPontosComerciaisRelationInput, Travel_Road_MapUncheckedCreateWithoutPontosComerciaisRelationInput>
  }

  export type reportCommercialPointCreateWithoutUserReportCommercialPointByIdCommercialPointInput = {
    id?: string
    content: string
    userReportCommercialPointByIdUserReport: User_ClientCreateNestedOneWithoutUserReportCommercialPointByIdUserReportInput
  }

  export type reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdCommercialPointInput = {
    id?: string
    content: string
    idUserReport: string
  }

  export type reportCommercialPointCreateOrConnectWithoutUserReportCommercialPointByIdCommercialPointInput = {
    where: reportCommercialPointWhereUniqueInput
    create: XOR<reportCommercialPointCreateWithoutUserReportCommercialPointByIdCommercialPointInput, reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdCommercialPointInput>
  }

  export type reportCommercialPointCreateManyUserReportCommercialPointByIdCommercialPointInputEnvelope = {
    data: reportCommercialPointCreateManyUserReportCommercialPointByIdCommercialPointInput | reportCommercialPointCreateManyUserReportCommercialPointByIdCommercialPointInput[]
    skipDuplicates?: boolean
  }

  export type User_BusinessUpsertWithoutPontosComerciaisInput = {
    update: XOR<User_BusinessUpdateWithoutPontosComerciaisInput, User_BusinessUncheckedUpdateWithoutPontosComerciaisInput>
    create: XOR<User_BusinessCreateWithoutPontosComerciaisInput, User_BusinessUncheckedCreateWithoutPontosComerciaisInput>
    where?: User_BusinessWhereInput
  }

  export type User_BusinessUpdateToOneWithWhereWithoutPontosComerciaisInput = {
    where?: User_BusinessWhereInput
    data: XOR<User_BusinessUpdateWithoutPontosComerciaisInput, User_BusinessUncheckedUpdateWithoutPontosComerciaisInput>
  }

  export type User_BusinessUpdateWithoutPontosComerciaisInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type User_BusinessUncheckedUpdateWithoutPontosComerciaisInput = {
    id?: StringFieldUpdateOperationsInput | string
    CNPJ?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AvaliationCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByIdCommercialPointInput = {
    where: AvaliationCommercialPointWhereUniqueInput
    update: XOR<AvaliationCommercialPointUpdateWithoutUserCommercialPointByIdCommercialPointInput, AvaliationCommercialPointUncheckedUpdateWithoutUserCommercialPointByIdCommercialPointInput>
    create: XOR<AvaliationCommercialPointCreateWithoutUserCommercialPointByIdCommercialPointInput, AvaliationCommercialPointUncheckedCreateWithoutUserCommercialPointByIdCommercialPointInput>
  }

  export type AvaliationCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByIdCommercialPointInput = {
    where: AvaliationCommercialPointWhereUniqueInput
    data: XOR<AvaliationCommercialPointUpdateWithoutUserCommercialPointByIdCommercialPointInput, AvaliationCommercialPointUncheckedUpdateWithoutUserCommercialPointByIdCommercialPointInput>
  }

  export type AvaliationCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByIdCommercialPointInput = {
    where: AvaliationCommercialPointScalarWhereInput
    data: XOR<AvaliationCommercialPointUpdateManyMutationInput, AvaliationCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByIdCommercialPointInput>
  }

  export type CommentCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput = {
    where: CommentCommercialPointWhereUniqueInput
    update: XOR<CommentCommercialPointUpdateWithoutUserCommercialPointByCommercialPointIdInput, CommentCommercialPointUncheckedUpdateWithoutUserCommercialPointByCommercialPointIdInput>
    create: XOR<CommentCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput, CommentCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput>
  }

  export type CommentCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput = {
    where: CommentCommercialPointWhereUniqueInput
    data: XOR<CommentCommercialPointUpdateWithoutUserCommercialPointByCommercialPointIdInput, CommentCommercialPointUncheckedUpdateWithoutUserCommercialPointByCommercialPointIdInput>
  }

  export type CommentCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByCommercialPointIdInput = {
    where: CommentCommercialPointScalarWhereInput
    data: XOR<CommentCommercialPointUpdateManyMutationInput, CommentCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdInput>
  }

  export type FavoriteCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput = {
    where: FavoriteCommercialPointWhereUniqueInput
    update: XOR<FavoriteCommercialPointUpdateWithoutUserCommercialPointByCommercialPointIdInput, FavoriteCommercialPointUncheckedUpdateWithoutUserCommercialPointByCommercialPointIdInput>
    create: XOR<FavoriteCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput, FavoriteCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput>
  }

  export type FavoriteCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput = {
    where: FavoriteCommercialPointWhereUniqueInput
    data: XOR<FavoriteCommercialPointUpdateWithoutUserCommercialPointByCommercialPointIdInput, FavoriteCommercialPointUncheckedUpdateWithoutUserCommercialPointByCommercialPointIdInput>
  }

  export type FavoriteCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByCommercialPointIdInput = {
    where: FavoriteCommercialPointScalarWhereInput
    data: XOR<FavoriteCommercialPointUpdateManyMutationInput, FavoriteCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdInput>
  }

  export type ImageCommercialPointUpsertWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput = {
    where: ImageCommercialPointWhereUniqueInput
    update: XOR<ImageCommercialPointUpdateWithoutUserCommercialPointByCommercialPointIdInput, ImageCommercialPointUncheckedUpdateWithoutUserCommercialPointByCommercialPointIdInput>
    create: XOR<ImageCommercialPointCreateWithoutUserCommercialPointByCommercialPointIdInput, ImageCommercialPointUncheckedCreateWithoutUserCommercialPointByCommercialPointIdInput>
  }

  export type ImageCommercialPointUpdateWithWhereUniqueWithoutUserCommercialPointByCommercialPointIdInput = {
    where: ImageCommercialPointWhereUniqueInput
    data: XOR<ImageCommercialPointUpdateWithoutUserCommercialPointByCommercialPointIdInput, ImageCommercialPointUncheckedUpdateWithoutUserCommercialPointByCommercialPointIdInput>
  }

  export type ImageCommercialPointUpdateManyWithWhereWithoutUserCommercialPointByCommercialPointIdInput = {
    where: ImageCommercialPointScalarWhereInput
    data: XOR<ImageCommercialPointUpdateManyMutationInput, ImageCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdInput>
  }

  export type ImageCommercialPointScalarWhereInput = {
    AND?: ImageCommercialPointScalarWhereInput | ImageCommercialPointScalarWhereInput[]
    OR?: ImageCommercialPointScalarWhereInput[]
    NOT?: ImageCommercialPointScalarWhereInput | ImageCommercialPointScalarWhereInput[]
    id?: StringFilter<"ImageCommercialPoint"> | string
    image?: StringFilter<"ImageCommercialPoint"> | string
    idCommercialPoint?: StringFilter<"ImageCommercialPoint"> | string
  }

  export type Travel_Road_MapUpsertWithWhereUniqueWithoutPontosComerciaisRelationInput = {
    where: Travel_Road_MapWhereUniqueInput
    update: XOR<Travel_Road_MapUpdateWithoutPontosComerciaisRelationInput, Travel_Road_MapUncheckedUpdateWithoutPontosComerciaisRelationInput>
    create: XOR<Travel_Road_MapCreateWithoutPontosComerciaisRelationInput, Travel_Road_MapUncheckedCreateWithoutPontosComerciaisRelationInput>
  }

  export type Travel_Road_MapUpdateWithWhereUniqueWithoutPontosComerciaisRelationInput = {
    where: Travel_Road_MapWhereUniqueInput
    data: XOR<Travel_Road_MapUpdateWithoutPontosComerciaisRelationInput, Travel_Road_MapUncheckedUpdateWithoutPontosComerciaisRelationInput>
  }

  export type Travel_Road_MapUpdateManyWithWhereWithoutPontosComerciaisRelationInput = {
    where: Travel_Road_MapScalarWhereInput
    data: XOR<Travel_Road_MapUpdateManyMutationInput, Travel_Road_MapUncheckedUpdateManyWithoutPontosComerciaisRelationInput>
  }

  export type reportCommercialPointUpsertWithWhereUniqueWithoutUserReportCommercialPointByIdCommercialPointInput = {
    where: reportCommercialPointWhereUniqueInput
    update: XOR<reportCommercialPointUpdateWithoutUserReportCommercialPointByIdCommercialPointInput, reportCommercialPointUncheckedUpdateWithoutUserReportCommercialPointByIdCommercialPointInput>
    create: XOR<reportCommercialPointCreateWithoutUserReportCommercialPointByIdCommercialPointInput, reportCommercialPointUncheckedCreateWithoutUserReportCommercialPointByIdCommercialPointInput>
  }

  export type reportCommercialPointUpdateWithWhereUniqueWithoutUserReportCommercialPointByIdCommercialPointInput = {
    where: reportCommercialPointWhereUniqueInput
    data: XOR<reportCommercialPointUpdateWithoutUserReportCommercialPointByIdCommercialPointInput, reportCommercialPointUncheckedUpdateWithoutUserReportCommercialPointByIdCommercialPointInput>
  }

  export type reportCommercialPointUpdateManyWithWhereWithoutUserReportCommercialPointByIdCommercialPointInput = {
    where: reportCommercialPointScalarWhereInput
    data: XOR<reportCommercialPointUpdateManyMutationInput, reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdCommercialPointInput>
  }

  export type AvaliationTouristPointCreateWithoutUserTouristPointByIdTouristPointInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientByEmail: User_ClientCreateNestedOneWithoutAvaliationTouristPointByUserClientEmailInput
    userClientByIdClient: User_ClientCreateNestedOneWithoutAvaliationTouristPointByIdCreatorInput
  }

  export type AvaliationTouristPointUncheckedCreateWithoutUserTouristPointByIdTouristPointInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientEmail: string
    idUserClient: string
  }

  export type AvaliationTouristPointCreateOrConnectWithoutUserTouristPointByIdTouristPointInput = {
    where: AvaliationTouristPointWhereUniqueInput
    create: XOR<AvaliationTouristPointCreateWithoutUserTouristPointByIdTouristPointInput, AvaliationTouristPointUncheckedCreateWithoutUserTouristPointByIdTouristPointInput>
  }

  export type AvaliationTouristPointCreateManyUserTouristPointByIdTouristPointInputEnvelope = {
    data: AvaliationTouristPointCreateManyUserTouristPointByIdTouristPointInput | AvaliationTouristPointCreateManyUserTouristPointByIdTouristPointInput[]
    skipDuplicates?: boolean
  }

  export type CommentTouristPointCreateWithoutUserTouristPointByTouristPointIdInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientByClientEmail: User_ClientCreateNestedOneWithoutCommentTouristPointByClientEmailInput
    userClientByClientId: User_ClientCreateNestedOneWithoutCommentTouristPointByClientIdInput
  }

  export type CommentTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientEmail: string
    idUserClient: string
  }

  export type CommentTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput = {
    where: CommentTouristPointWhereUniqueInput
    create: XOR<CommentTouristPointCreateWithoutUserTouristPointByTouristPointIdInput, CommentTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput>
  }

  export type CommentTouristPointCreateManyUserTouristPointByTouristPointIdInputEnvelope = {
    data: CommentTouristPointCreateManyUserTouristPointByTouristPointIdInput | CommentTouristPointCreateManyUserTouristPointByTouristPointIdInput[]
    skipDuplicates?: boolean
  }

  export type FavoriteTouristPointCreateWithoutUserTouristPointByTouristPointIdInput = {
    id?: string
    Favorite?: boolean
    userClientByClientId: User_ClientCreateNestedOneWithoutFavoriteTouristPointPointByClientIdInput
  }

  export type FavoriteTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput = {
    id?: string
    Favorite?: boolean
    idUserClient: string
  }

  export type FavoriteTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput = {
    where: FavoriteTouristPointWhereUniqueInput
    create: XOR<FavoriteTouristPointCreateWithoutUserTouristPointByTouristPointIdInput, FavoriteTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput>
  }

  export type FavoriteTouristPointCreateManyUserTouristPointByTouristPointIdInputEnvelope = {
    data: FavoriteTouristPointCreateManyUserTouristPointByTouristPointIdInput | FavoriteTouristPointCreateManyUserTouristPointByTouristPointIdInput[]
    skipDuplicates?: boolean
  }

  export type ImageTouristPointCreateWithoutUserTouristPointByTouristPointIdInput = {
    id?: string
    image: string
  }

  export type ImageTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput = {
    id?: string
    image: string
  }

  export type ImageTouristPointCreateOrConnectWithoutUserTouristPointByTouristPointIdInput = {
    where: ImageTouristPointWhereUniqueInput
    create: XOR<ImageTouristPointCreateWithoutUserTouristPointByTouristPointIdInput, ImageTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput>
  }

  export type ImageTouristPointCreateManyUserTouristPointByTouristPointIdInputEnvelope = {
    data: ImageTouristPointCreateManyUserTouristPointByTouristPointIdInput | ImageTouristPointCreateManyUserTouristPointByTouristPointIdInput[]
    skipDuplicates?: boolean
  }

  export type Travel_Road_MapCreateWithoutPontosTuristicosRelationInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    userClient: User_ClientCreateNestedOneWithoutTravelRoadMapsInput
    AvaliationRoadMap?: AvaliationRoadMapCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosComerciaisRelation?: Ponto_ComercialCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapUncheckedCreateWithoutPontosTuristicosRelationInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    idCreator: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryUncheckedCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityUncheckedCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapCreateOrConnectWithoutPontosTuristicosRelationInput = {
    where: Travel_Road_MapWhereUniqueInput
    create: XOR<Travel_Road_MapCreateWithoutPontosTuristicosRelationInput, Travel_Road_MapUncheckedCreateWithoutPontosTuristicosRelationInput>
  }

  export type reportTouristPointCreateWithoutUserReportTouristPointByIdTouristPointInput = {
    id?: string
    content: string
    userReportTouristPointByIdUserReport: User_ClientCreateNestedOneWithoutUserReportTouristPointByIdUserReportInput
  }

  export type reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdTouristPointInput = {
    id?: string
    content: string
    idUserReport: string
  }

  export type reportTouristPointCreateOrConnectWithoutUserReportTouristPointByIdTouristPointInput = {
    where: reportTouristPointWhereUniqueInput
    create: XOR<reportTouristPointCreateWithoutUserReportTouristPointByIdTouristPointInput, reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdTouristPointInput>
  }

  export type reportTouristPointCreateManyUserReportTouristPointByIdTouristPointInputEnvelope = {
    data: reportTouristPointCreateManyUserReportTouristPointByIdTouristPointInput | reportTouristPointCreateManyUserReportTouristPointByIdTouristPointInput[]
    skipDuplicates?: boolean
  }

  export type notificationTouristPointCreateWithoutUserNotificationTouristPointByIdTouristPointInput = {
    id?: string
    userNotificationTouristPointByIdClient: User_ClientCreateNestedOneWithoutUserNotificationTouristPointByIdClientInput
  }

  export type notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdTouristPointInput = {
    id?: string
    idClient: string
  }

  export type notificationTouristPointCreateOrConnectWithoutUserNotificationTouristPointByIdTouristPointInput = {
    where: notificationTouristPointWhereUniqueInput
    create: XOR<notificationTouristPointCreateWithoutUserNotificationTouristPointByIdTouristPointInput, notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdTouristPointInput>
  }

  export type notificationTouristPointCreateManyUserNotificationTouristPointByIdTouristPointInputEnvelope = {
    data: notificationTouristPointCreateManyUserNotificationTouristPointByIdTouristPointInput | notificationTouristPointCreateManyUserNotificationTouristPointByIdTouristPointInput[]
    skipDuplicates?: boolean
  }

  export type AvaliationTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByIdTouristPointInput = {
    where: AvaliationTouristPointWhereUniqueInput
    update: XOR<AvaliationTouristPointUpdateWithoutUserTouristPointByIdTouristPointInput, AvaliationTouristPointUncheckedUpdateWithoutUserTouristPointByIdTouristPointInput>
    create: XOR<AvaliationTouristPointCreateWithoutUserTouristPointByIdTouristPointInput, AvaliationTouristPointUncheckedCreateWithoutUserTouristPointByIdTouristPointInput>
  }

  export type AvaliationTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByIdTouristPointInput = {
    where: AvaliationTouristPointWhereUniqueInput
    data: XOR<AvaliationTouristPointUpdateWithoutUserTouristPointByIdTouristPointInput, AvaliationTouristPointUncheckedUpdateWithoutUserTouristPointByIdTouristPointInput>
  }

  export type AvaliationTouristPointUpdateManyWithWhereWithoutUserTouristPointByIdTouristPointInput = {
    where: AvaliationTouristPointScalarWhereInput
    data: XOR<AvaliationTouristPointUpdateManyMutationInput, AvaliationTouristPointUncheckedUpdateManyWithoutUserTouristPointByIdTouristPointInput>
  }

  export type CommentTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput = {
    where: CommentTouristPointWhereUniqueInput
    update: XOR<CommentTouristPointUpdateWithoutUserTouristPointByTouristPointIdInput, CommentTouristPointUncheckedUpdateWithoutUserTouristPointByTouristPointIdInput>
    create: XOR<CommentTouristPointCreateWithoutUserTouristPointByTouristPointIdInput, CommentTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput>
  }

  export type CommentTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput = {
    where: CommentTouristPointWhereUniqueInput
    data: XOR<CommentTouristPointUpdateWithoutUserTouristPointByTouristPointIdInput, CommentTouristPointUncheckedUpdateWithoutUserTouristPointByTouristPointIdInput>
  }

  export type CommentTouristPointUpdateManyWithWhereWithoutUserTouristPointByTouristPointIdInput = {
    where: CommentTouristPointScalarWhereInput
    data: XOR<CommentTouristPointUpdateManyMutationInput, CommentTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdInput>
  }

  export type FavoriteTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput = {
    where: FavoriteTouristPointWhereUniqueInput
    update: XOR<FavoriteTouristPointUpdateWithoutUserTouristPointByTouristPointIdInput, FavoriteTouristPointUncheckedUpdateWithoutUserTouristPointByTouristPointIdInput>
    create: XOR<FavoriteTouristPointCreateWithoutUserTouristPointByTouristPointIdInput, FavoriteTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput>
  }

  export type FavoriteTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput = {
    where: FavoriteTouristPointWhereUniqueInput
    data: XOR<FavoriteTouristPointUpdateWithoutUserTouristPointByTouristPointIdInput, FavoriteTouristPointUncheckedUpdateWithoutUserTouristPointByTouristPointIdInput>
  }

  export type FavoriteTouristPointUpdateManyWithWhereWithoutUserTouristPointByTouristPointIdInput = {
    where: FavoriteTouristPointScalarWhereInput
    data: XOR<FavoriteTouristPointUpdateManyMutationInput, FavoriteTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdInput>
  }

  export type ImageTouristPointUpsertWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput = {
    where: ImageTouristPointWhereUniqueInput
    update: XOR<ImageTouristPointUpdateWithoutUserTouristPointByTouristPointIdInput, ImageTouristPointUncheckedUpdateWithoutUserTouristPointByTouristPointIdInput>
    create: XOR<ImageTouristPointCreateWithoutUserTouristPointByTouristPointIdInput, ImageTouristPointUncheckedCreateWithoutUserTouristPointByTouristPointIdInput>
  }

  export type ImageTouristPointUpdateWithWhereUniqueWithoutUserTouristPointByTouristPointIdInput = {
    where: ImageTouristPointWhereUniqueInput
    data: XOR<ImageTouristPointUpdateWithoutUserTouristPointByTouristPointIdInput, ImageTouristPointUncheckedUpdateWithoutUserTouristPointByTouristPointIdInput>
  }

  export type ImageTouristPointUpdateManyWithWhereWithoutUserTouristPointByTouristPointIdInput = {
    where: ImageTouristPointScalarWhereInput
    data: XOR<ImageTouristPointUpdateManyMutationInput, ImageTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdInput>
  }

  export type ImageTouristPointScalarWhereInput = {
    AND?: ImageTouristPointScalarWhereInput | ImageTouristPointScalarWhereInput[]
    OR?: ImageTouristPointScalarWhereInput[]
    NOT?: ImageTouristPointScalarWhereInput | ImageTouristPointScalarWhereInput[]
    id?: StringFilter<"ImageTouristPoint"> | string
    image?: StringFilter<"ImageTouristPoint"> | string
    idTouristPoint?: StringFilter<"ImageTouristPoint"> | string
  }

  export type Travel_Road_MapUpsertWithWhereUniqueWithoutPontosTuristicosRelationInput = {
    where: Travel_Road_MapWhereUniqueInput
    update: XOR<Travel_Road_MapUpdateWithoutPontosTuristicosRelationInput, Travel_Road_MapUncheckedUpdateWithoutPontosTuristicosRelationInput>
    create: XOR<Travel_Road_MapCreateWithoutPontosTuristicosRelationInput, Travel_Road_MapUncheckedCreateWithoutPontosTuristicosRelationInput>
  }

  export type Travel_Road_MapUpdateWithWhereUniqueWithoutPontosTuristicosRelationInput = {
    where: Travel_Road_MapWhereUniqueInput
    data: XOR<Travel_Road_MapUpdateWithoutPontosTuristicosRelationInput, Travel_Road_MapUncheckedUpdateWithoutPontosTuristicosRelationInput>
  }

  export type Travel_Road_MapUpdateManyWithWhereWithoutPontosTuristicosRelationInput = {
    where: Travel_Road_MapScalarWhereInput
    data: XOR<Travel_Road_MapUpdateManyMutationInput, Travel_Road_MapUncheckedUpdateManyWithoutPontosTuristicosRelationInput>
  }

  export type reportTouristPointUpsertWithWhereUniqueWithoutUserReportTouristPointByIdTouristPointInput = {
    where: reportTouristPointWhereUniqueInput
    update: XOR<reportTouristPointUpdateWithoutUserReportTouristPointByIdTouristPointInput, reportTouristPointUncheckedUpdateWithoutUserReportTouristPointByIdTouristPointInput>
    create: XOR<reportTouristPointCreateWithoutUserReportTouristPointByIdTouristPointInput, reportTouristPointUncheckedCreateWithoutUserReportTouristPointByIdTouristPointInput>
  }

  export type reportTouristPointUpdateWithWhereUniqueWithoutUserReportTouristPointByIdTouristPointInput = {
    where: reportTouristPointWhereUniqueInput
    data: XOR<reportTouristPointUpdateWithoutUserReportTouristPointByIdTouristPointInput, reportTouristPointUncheckedUpdateWithoutUserReportTouristPointByIdTouristPointInput>
  }

  export type reportTouristPointUpdateManyWithWhereWithoutUserReportTouristPointByIdTouristPointInput = {
    where: reportTouristPointScalarWhereInput
    data: XOR<reportTouristPointUpdateManyMutationInput, reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdTouristPointInput>
  }

  export type notificationTouristPointUpsertWithWhereUniqueWithoutUserNotificationTouristPointByIdTouristPointInput = {
    where: notificationTouristPointWhereUniqueInput
    update: XOR<notificationTouristPointUpdateWithoutUserNotificationTouristPointByIdTouristPointInput, notificationTouristPointUncheckedUpdateWithoutUserNotificationTouristPointByIdTouristPointInput>
    create: XOR<notificationTouristPointCreateWithoutUserNotificationTouristPointByIdTouristPointInput, notificationTouristPointUncheckedCreateWithoutUserNotificationTouristPointByIdTouristPointInput>
  }

  export type notificationTouristPointUpdateWithWhereUniqueWithoutUserNotificationTouristPointByIdTouristPointInput = {
    where: notificationTouristPointWhereUniqueInput
    data: XOR<notificationTouristPointUpdateWithoutUserNotificationTouristPointByIdTouristPointInput, notificationTouristPointUncheckedUpdateWithoutUserNotificationTouristPointByIdTouristPointInput>
  }

  export type notificationTouristPointUpdateManyWithWhereWithoutUserNotificationTouristPointByIdTouristPointInput = {
    where: notificationTouristPointScalarWhereInput
    data: XOR<notificationTouristPointUpdateManyMutationInput, notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdTouristPointInput>
  }

  export type User_ClientCreateWithoutTravelRoadMapsInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutTravelRoadMapsInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutTravelRoadMapsInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutTravelRoadMapsInput, User_ClientUncheckedCreateWithoutTravelRoadMapsInput>
  }

  export type AvaliationRoadMapCreateWithoutUserRoadMapByIdRoadMapInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientByEmail: User_ClientCreateNestedOneWithoutAvaliationsByEmailClientInput
    userClientByIdClient: User_ClientCreateNestedOneWithoutAvaliationsRoadMapByIdClientInput
  }

  export type AvaliationRoadMapUncheckedCreateWithoutUserRoadMapByIdRoadMapInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientEmail: string
    idUserClient: string
  }

  export type AvaliationRoadMapCreateOrConnectWithoutUserRoadMapByIdRoadMapInput = {
    where: AvaliationRoadMapWhereUniqueInput
    create: XOR<AvaliationRoadMapCreateWithoutUserRoadMapByIdRoadMapInput, AvaliationRoadMapUncheckedCreateWithoutUserRoadMapByIdRoadMapInput>
  }

  export type AvaliationRoadMapCreateManyUserRoadMapByIdRoadMapInputEnvelope = {
    data: AvaliationRoadMapCreateManyUserRoadMapByIdRoadMapInput | AvaliationRoadMapCreateManyUserRoadMapByIdRoadMapInput[]
    skipDuplicates?: boolean
  }

  export type CommentRoadMapCreateWithoutUserRoadMapByRoadMapIdInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientByClientEmail: User_ClientCreateNestedOneWithoutCommentRoadMapByClientEmailInput
    userClientByClientId: User_ClientCreateNestedOneWithoutCommentRoadMapByClientIdInput
  }

  export type CommentRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientEmail: string
    idUserClient: string
  }

  export type CommentRoadMapCreateOrConnectWithoutUserRoadMapByRoadMapIdInput = {
    where: CommentRoadMapWhereUniqueInput
    create: XOR<CommentRoadMapCreateWithoutUserRoadMapByRoadMapIdInput, CommentRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput>
  }

  export type CommentRoadMapCreateManyUserRoadMapByRoadMapIdInputEnvelope = {
    data: CommentRoadMapCreateManyUserRoadMapByRoadMapIdInput | CommentRoadMapCreateManyUserRoadMapByRoadMapIdInput[]
    skipDuplicates?: boolean
  }

  export type FavoriteRoadMapCreateWithoutUserRoadMapPointByRoadMapIdInput = {
    id?: string
    Favorite?: boolean
    userClientByClientId: User_ClientCreateNestedOneWithoutFavoriteRoadMapPointByClientIdInput
  }

  export type FavoriteRoadMapUncheckedCreateWithoutUserRoadMapPointByRoadMapIdInput = {
    id?: string
    Favorite?: boolean
    idUserClient: string
  }

  export type FavoriteRoadMapCreateOrConnectWithoutUserRoadMapPointByRoadMapIdInput = {
    where: FavoriteRoadMapWhereUniqueInput
    create: XOR<FavoriteRoadMapCreateWithoutUserRoadMapPointByRoadMapIdInput, FavoriteRoadMapUncheckedCreateWithoutUserRoadMapPointByRoadMapIdInput>
  }

  export type FavoriteRoadMapCreateManyUserRoadMapPointByRoadMapIdInputEnvelope = {
    data: FavoriteRoadMapCreateManyUserRoadMapPointByRoadMapIdInput | FavoriteRoadMapCreateManyUserRoadMapPointByRoadMapIdInput[]
    skipDuplicates?: boolean
  }

  export type ImageRoadMapCreateWithoutUserRoadMapByRoadMapIdInput = {
    id?: string
    image: string
  }

  export type ImageRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput = {
    id?: string
    image: string
  }

  export type ImageRoadMapCreateOrConnectWithoutUserRoadMapByRoadMapIdInput = {
    where: ImageRoadMapWhereUniqueInput
    create: XOR<ImageRoadMapCreateWithoutUserRoadMapByRoadMapIdInput, ImageRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput>
  }

  export type ImageRoadMapCreateManyUserRoadMapByRoadMapIdInputEnvelope = {
    data: ImageRoadMapCreateManyUserRoadMapByRoadMapIdInput | ImageRoadMapCreateManyUserRoadMapByRoadMapIdInput[]
    skipDuplicates?: boolean
  }

  export type Ponto_TuristicoCreateWithoutRoadMapRelationInput = {
    id?: string
    name: string
    description: string
    creationDate: Date | string
    local: string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    avaliationTouristPoint?: AvaliationTouristPointCreateNestedManyWithoutUserTouristPointByIdTouristPointInput
    commentTouristPointByTouristPointId?: CommentTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    ImageTouristPointByTouristPointId?: ImageTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdTouristPointInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdTouristPointInput
  }

  export type Ponto_TuristicoUncheckedCreateWithoutRoadMapRelationInput = {
    id?: string
    name: string
    description: string
    creationDate: Date | string
    local: string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    avaliationTouristPoint?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByIdTouristPointInput
    commentTouristPointByTouristPointId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdTouristPointInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdTouristPointInput
  }

  export type Ponto_TuristicoCreateOrConnectWithoutRoadMapRelationInput = {
    where: Ponto_TuristicoWhereUniqueInput
    create: XOR<Ponto_TuristicoCreateWithoutRoadMapRelationInput, Ponto_TuristicoUncheckedCreateWithoutRoadMapRelationInput>
  }

  export type Ponto_ComercialCreateWithoutRoadMapRelationInput = {
    id?: string
    name: string
    description: string
    local: string
    creationDate: Date | string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    User_Business: User_BusinessCreateNestedOneWithoutPontosComerciaisInput
    avaliationCommercialPoint?: AvaliationCommercialPointCreateNestedManyWithoutUserCommercialPointByIdCommercialPointInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdCommercialPointInput
  }

  export type Ponto_ComercialUncheckedCreateWithoutRoadMapRelationInput = {
    id?: string
    name: string
    description: string
    local: string
    creationDate: Date | string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    businessId: string
    avaliationCommercialPoint?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByIdCommercialPointInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdCommercialPointInput
  }

  export type Ponto_ComercialCreateOrConnectWithoutRoadMapRelationInput = {
    where: Ponto_ComercialWhereUniqueInput
    create: XOR<Ponto_ComercialCreateWithoutRoadMapRelationInput, Ponto_ComercialUncheckedCreateWithoutRoadMapRelationInput>
  }

  export type CountryCreateWithoutRoadMapRelationInput = {
    id?: string
    name: string
    StateByCountryName?: StateCreateNestedManyWithoutCountryByCountryNameInput
    CityByCountryName?: CityCreateNestedManyWithoutCityByCountryNameInput
  }

  export type CountryUncheckedCreateWithoutRoadMapRelationInput = {
    id?: string
    name: string
    StateByCountryName?: StateUncheckedCreateNestedManyWithoutCountryByCountryNameInput
    CityByCountryName?: CityUncheckedCreateNestedManyWithoutCityByCountryNameInput
  }

  export type CountryCreateOrConnectWithoutRoadMapRelationInput = {
    where: CountryWhereUniqueInput
    create: XOR<CountryCreateWithoutRoadMapRelationInput, CountryUncheckedCreateWithoutRoadMapRelationInput>
  }

  export type StateCreateWithoutRoadMapRelationInput = {
    id?: string
    name: string
    CountryByCountryName: CountryCreateNestedOneWithoutStateByCountryNameInput
    StateByStateName?: CityCreateNestedManyWithoutStateByStateNameInput
  }

  export type StateUncheckedCreateWithoutRoadMapRelationInput = {
    id?: string
    name: string
    countryName: string
    StateByStateName?: CityUncheckedCreateNestedManyWithoutStateByStateNameInput
  }

  export type StateCreateOrConnectWithoutRoadMapRelationInput = {
    where: StateWhereUniqueInput
    create: XOR<StateCreateWithoutRoadMapRelationInput, StateUncheckedCreateWithoutRoadMapRelationInput>
  }

  export type CityCreateWithoutRoadMapRelationInput = {
    id?: string
    name: string
    StateByStateName: StateCreateNestedOneWithoutStateByStateNameInput
    CityByCountryName: CountryCreateNestedOneWithoutCityByCountryNameInput
  }

  export type CityUncheckedCreateWithoutRoadMapRelationInput = {
    id?: string
    name: string
    countryName: string
    stateName: string
  }

  export type CityCreateOrConnectWithoutRoadMapRelationInput = {
    where: CityWhereUniqueInput
    create: XOR<CityCreateWithoutRoadMapRelationInput, CityUncheckedCreateWithoutRoadMapRelationInput>
  }

  export type reportRoadMapCreateWithoutUserReportRoadMapByIdRoadMapInput = {
    id?: string
    content: string
    userReportRoadMapByIdUserReport: User_ClientCreateNestedOneWithoutUserReportRoadMapByIdUserReportInput
  }

  export type reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdRoadMapInput = {
    id?: string
    content: string
    idUserReport: string
  }

  export type reportRoadMapCreateOrConnectWithoutUserReportRoadMapByIdRoadMapInput = {
    where: reportRoadMapWhereUniqueInput
    create: XOR<reportRoadMapCreateWithoutUserReportRoadMapByIdRoadMapInput, reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdRoadMapInput>
  }

  export type reportRoadMapCreateManyUserReportRoadMapByIdRoadMapInputEnvelope = {
    data: reportRoadMapCreateManyUserReportRoadMapByIdRoadMapInput | reportRoadMapCreateManyUserReportRoadMapByIdRoadMapInput[]
    skipDuplicates?: boolean
  }

  export type notificationRoadMapCreateWithoutUserNotificationRoadMapByIdRoadMapInput = {
    id?: string
    userNotificationRoadMapByIdClient: User_ClientCreateNestedOneWithoutUserNotificationRoadMapByIdClientInput
  }

  export type notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdRoadMapInput = {
    id?: string
    idClient: string
  }

  export type notificationRoadMapCreateOrConnectWithoutUserNotificationRoadMapByIdRoadMapInput = {
    where: notificationRoadMapWhereUniqueInput
    create: XOR<notificationRoadMapCreateWithoutUserNotificationRoadMapByIdRoadMapInput, notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdRoadMapInput>
  }

  export type notificationRoadMapCreateManyUserNotificationRoadMapByIdRoadMapInputEnvelope = {
    data: notificationRoadMapCreateManyUserNotificationRoadMapByIdRoadMapInput | notificationRoadMapCreateManyUserNotificationRoadMapByIdRoadMapInput[]
    skipDuplicates?: boolean
  }

  export type User_ClientUpsertWithoutTravelRoadMapsInput = {
    update: XOR<User_ClientUpdateWithoutTravelRoadMapsInput, User_ClientUncheckedUpdateWithoutTravelRoadMapsInput>
    create: XOR<User_ClientCreateWithoutTravelRoadMapsInput, User_ClientUncheckedCreateWithoutTravelRoadMapsInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutTravelRoadMapsInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutTravelRoadMapsInput, User_ClientUncheckedUpdateWithoutTravelRoadMapsInput>
  }

  export type User_ClientUpdateWithoutTravelRoadMapsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutTravelRoadMapsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type AvaliationRoadMapUpsertWithWhereUniqueWithoutUserRoadMapByIdRoadMapInput = {
    where: AvaliationRoadMapWhereUniqueInput
    update: XOR<AvaliationRoadMapUpdateWithoutUserRoadMapByIdRoadMapInput, AvaliationRoadMapUncheckedUpdateWithoutUserRoadMapByIdRoadMapInput>
    create: XOR<AvaliationRoadMapCreateWithoutUserRoadMapByIdRoadMapInput, AvaliationRoadMapUncheckedCreateWithoutUserRoadMapByIdRoadMapInput>
  }

  export type AvaliationRoadMapUpdateWithWhereUniqueWithoutUserRoadMapByIdRoadMapInput = {
    where: AvaliationRoadMapWhereUniqueInput
    data: XOR<AvaliationRoadMapUpdateWithoutUserRoadMapByIdRoadMapInput, AvaliationRoadMapUncheckedUpdateWithoutUserRoadMapByIdRoadMapInput>
  }

  export type AvaliationRoadMapUpdateManyWithWhereWithoutUserRoadMapByIdRoadMapInput = {
    where: AvaliationRoadMapScalarWhereInput
    data: XOR<AvaliationRoadMapUpdateManyMutationInput, AvaliationRoadMapUncheckedUpdateManyWithoutUserRoadMapByIdRoadMapInput>
  }

  export type CommentRoadMapUpsertWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput = {
    where: CommentRoadMapWhereUniqueInput
    update: XOR<CommentRoadMapUpdateWithoutUserRoadMapByRoadMapIdInput, CommentRoadMapUncheckedUpdateWithoutUserRoadMapByRoadMapIdInput>
    create: XOR<CommentRoadMapCreateWithoutUserRoadMapByRoadMapIdInput, CommentRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput>
  }

  export type CommentRoadMapUpdateWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput = {
    where: CommentRoadMapWhereUniqueInput
    data: XOR<CommentRoadMapUpdateWithoutUserRoadMapByRoadMapIdInput, CommentRoadMapUncheckedUpdateWithoutUserRoadMapByRoadMapIdInput>
  }

  export type CommentRoadMapUpdateManyWithWhereWithoutUserRoadMapByRoadMapIdInput = {
    where: CommentRoadMapScalarWhereInput
    data: XOR<CommentRoadMapUpdateManyMutationInput, CommentRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdInput>
  }

  export type FavoriteRoadMapUpsertWithWhereUniqueWithoutUserRoadMapPointByRoadMapIdInput = {
    where: FavoriteRoadMapWhereUniqueInput
    update: XOR<FavoriteRoadMapUpdateWithoutUserRoadMapPointByRoadMapIdInput, FavoriteRoadMapUncheckedUpdateWithoutUserRoadMapPointByRoadMapIdInput>
    create: XOR<FavoriteRoadMapCreateWithoutUserRoadMapPointByRoadMapIdInput, FavoriteRoadMapUncheckedCreateWithoutUserRoadMapPointByRoadMapIdInput>
  }

  export type FavoriteRoadMapUpdateWithWhereUniqueWithoutUserRoadMapPointByRoadMapIdInput = {
    where: FavoriteRoadMapWhereUniqueInput
    data: XOR<FavoriteRoadMapUpdateWithoutUserRoadMapPointByRoadMapIdInput, FavoriteRoadMapUncheckedUpdateWithoutUserRoadMapPointByRoadMapIdInput>
  }

  export type FavoriteRoadMapUpdateManyWithWhereWithoutUserRoadMapPointByRoadMapIdInput = {
    where: FavoriteRoadMapScalarWhereInput
    data: XOR<FavoriteRoadMapUpdateManyMutationInput, FavoriteRoadMapUncheckedUpdateManyWithoutUserRoadMapPointByRoadMapIdInput>
  }

  export type ImageRoadMapUpsertWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput = {
    where: ImageRoadMapWhereUniqueInput
    update: XOR<ImageRoadMapUpdateWithoutUserRoadMapByRoadMapIdInput, ImageRoadMapUncheckedUpdateWithoutUserRoadMapByRoadMapIdInput>
    create: XOR<ImageRoadMapCreateWithoutUserRoadMapByRoadMapIdInput, ImageRoadMapUncheckedCreateWithoutUserRoadMapByRoadMapIdInput>
  }

  export type ImageRoadMapUpdateWithWhereUniqueWithoutUserRoadMapByRoadMapIdInput = {
    where: ImageRoadMapWhereUniqueInput
    data: XOR<ImageRoadMapUpdateWithoutUserRoadMapByRoadMapIdInput, ImageRoadMapUncheckedUpdateWithoutUserRoadMapByRoadMapIdInput>
  }

  export type ImageRoadMapUpdateManyWithWhereWithoutUserRoadMapByRoadMapIdInput = {
    where: ImageRoadMapScalarWhereInput
    data: XOR<ImageRoadMapUpdateManyMutationInput, ImageRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdInput>
  }

  export type ImageRoadMapScalarWhereInput = {
    AND?: ImageRoadMapScalarWhereInput | ImageRoadMapScalarWhereInput[]
    OR?: ImageRoadMapScalarWhereInput[]
    NOT?: ImageRoadMapScalarWhereInput | ImageRoadMapScalarWhereInput[]
    id?: StringFilter<"ImageRoadMap"> | string
    image?: StringFilter<"ImageRoadMap"> | string
    idRoadMap?: StringFilter<"ImageRoadMap"> | string
  }

  export type Ponto_TuristicoUpsertWithWhereUniqueWithoutRoadMapRelationInput = {
    where: Ponto_TuristicoWhereUniqueInput
    update: XOR<Ponto_TuristicoUpdateWithoutRoadMapRelationInput, Ponto_TuristicoUncheckedUpdateWithoutRoadMapRelationInput>
    create: XOR<Ponto_TuristicoCreateWithoutRoadMapRelationInput, Ponto_TuristicoUncheckedCreateWithoutRoadMapRelationInput>
  }

  export type Ponto_TuristicoUpdateWithWhereUniqueWithoutRoadMapRelationInput = {
    where: Ponto_TuristicoWhereUniqueInput
    data: XOR<Ponto_TuristicoUpdateWithoutRoadMapRelationInput, Ponto_TuristicoUncheckedUpdateWithoutRoadMapRelationInput>
  }

  export type Ponto_TuristicoUpdateManyWithWhereWithoutRoadMapRelationInput = {
    where: Ponto_TuristicoScalarWhereInput
    data: XOR<Ponto_TuristicoUpdateManyMutationInput, Ponto_TuristicoUncheckedUpdateManyWithoutRoadMapRelationInput>
  }

  export type Ponto_TuristicoScalarWhereInput = {
    AND?: Ponto_TuristicoScalarWhereInput | Ponto_TuristicoScalarWhereInput[]
    OR?: Ponto_TuristicoScalarWhereInput[]
    NOT?: Ponto_TuristicoScalarWhereInput | Ponto_TuristicoScalarWhereInput[]
    id?: StringFilter<"Ponto_Turistico"> | string
    name?: StringFilter<"Ponto_Turistico"> | string
    description?: StringFilter<"Ponto_Turistico"> | string
    creationDate?: DateTimeFilter<"Ponto_Turistico"> | Date | string
    local?: StringFilter<"Ponto_Turistico"> | string
    userImageUrl?: StringNullableFilter<"Ponto_Turistico"> | string | null
    reportNumber?: IntFilter<"Ponto_Turistico"> | number
    isPublished?: BoolFilter<"Ponto_Turistico"> | boolean
  }

  export type Ponto_ComercialUpsertWithWhereUniqueWithoutRoadMapRelationInput = {
    where: Ponto_ComercialWhereUniqueInput
    update: XOR<Ponto_ComercialUpdateWithoutRoadMapRelationInput, Ponto_ComercialUncheckedUpdateWithoutRoadMapRelationInput>
    create: XOR<Ponto_ComercialCreateWithoutRoadMapRelationInput, Ponto_ComercialUncheckedCreateWithoutRoadMapRelationInput>
  }

  export type Ponto_ComercialUpdateWithWhereUniqueWithoutRoadMapRelationInput = {
    where: Ponto_ComercialWhereUniqueInput
    data: XOR<Ponto_ComercialUpdateWithoutRoadMapRelationInput, Ponto_ComercialUncheckedUpdateWithoutRoadMapRelationInput>
  }

  export type Ponto_ComercialUpdateManyWithWhereWithoutRoadMapRelationInput = {
    where: Ponto_ComercialScalarWhereInput
    data: XOR<Ponto_ComercialUpdateManyMutationInput, Ponto_ComercialUncheckedUpdateManyWithoutRoadMapRelationInput>
  }

  export type CountryUpsertWithWhereUniqueWithoutRoadMapRelationInput = {
    where: CountryWhereUniqueInput
    update: XOR<CountryUpdateWithoutRoadMapRelationInput, CountryUncheckedUpdateWithoutRoadMapRelationInput>
    create: XOR<CountryCreateWithoutRoadMapRelationInput, CountryUncheckedCreateWithoutRoadMapRelationInput>
  }

  export type CountryUpdateWithWhereUniqueWithoutRoadMapRelationInput = {
    where: CountryWhereUniqueInput
    data: XOR<CountryUpdateWithoutRoadMapRelationInput, CountryUncheckedUpdateWithoutRoadMapRelationInput>
  }

  export type CountryUpdateManyWithWhereWithoutRoadMapRelationInput = {
    where: CountryScalarWhereInput
    data: XOR<CountryUpdateManyMutationInput, CountryUncheckedUpdateManyWithoutRoadMapRelationInput>
  }

  export type CountryScalarWhereInput = {
    AND?: CountryScalarWhereInput | CountryScalarWhereInput[]
    OR?: CountryScalarWhereInput[]
    NOT?: CountryScalarWhereInput | CountryScalarWhereInput[]
    id?: StringFilter<"Country"> | string
    name?: StringFilter<"Country"> | string
  }

  export type StateUpsertWithWhereUniqueWithoutRoadMapRelationInput = {
    where: StateWhereUniqueInput
    update: XOR<StateUpdateWithoutRoadMapRelationInput, StateUncheckedUpdateWithoutRoadMapRelationInput>
    create: XOR<StateCreateWithoutRoadMapRelationInput, StateUncheckedCreateWithoutRoadMapRelationInput>
  }

  export type StateUpdateWithWhereUniqueWithoutRoadMapRelationInput = {
    where: StateWhereUniqueInput
    data: XOR<StateUpdateWithoutRoadMapRelationInput, StateUncheckedUpdateWithoutRoadMapRelationInput>
  }

  export type StateUpdateManyWithWhereWithoutRoadMapRelationInput = {
    where: StateScalarWhereInput
    data: XOR<StateUpdateManyMutationInput, StateUncheckedUpdateManyWithoutRoadMapRelationInput>
  }

  export type StateScalarWhereInput = {
    AND?: StateScalarWhereInput | StateScalarWhereInput[]
    OR?: StateScalarWhereInput[]
    NOT?: StateScalarWhereInput | StateScalarWhereInput[]
    id?: StringFilter<"State"> | string
    name?: StringFilter<"State"> | string
    countryName?: StringFilter<"State"> | string
  }

  export type CityUpsertWithWhereUniqueWithoutRoadMapRelationInput = {
    where: CityWhereUniqueInput
    update: XOR<CityUpdateWithoutRoadMapRelationInput, CityUncheckedUpdateWithoutRoadMapRelationInput>
    create: XOR<CityCreateWithoutRoadMapRelationInput, CityUncheckedCreateWithoutRoadMapRelationInput>
  }

  export type CityUpdateWithWhereUniqueWithoutRoadMapRelationInput = {
    where: CityWhereUniqueInput
    data: XOR<CityUpdateWithoutRoadMapRelationInput, CityUncheckedUpdateWithoutRoadMapRelationInput>
  }

  export type CityUpdateManyWithWhereWithoutRoadMapRelationInput = {
    where: CityScalarWhereInput
    data: XOR<CityUpdateManyMutationInput, CityUncheckedUpdateManyWithoutRoadMapRelationInput>
  }

  export type CityScalarWhereInput = {
    AND?: CityScalarWhereInput | CityScalarWhereInput[]
    OR?: CityScalarWhereInput[]
    NOT?: CityScalarWhereInput | CityScalarWhereInput[]
    id?: StringFilter<"City"> | string
    name?: StringFilter<"City"> | string
    countryName?: StringFilter<"City"> | string
    stateName?: StringFilter<"City"> | string
  }

  export type reportRoadMapUpsertWithWhereUniqueWithoutUserReportRoadMapByIdRoadMapInput = {
    where: reportRoadMapWhereUniqueInput
    update: XOR<reportRoadMapUpdateWithoutUserReportRoadMapByIdRoadMapInput, reportRoadMapUncheckedUpdateWithoutUserReportRoadMapByIdRoadMapInput>
    create: XOR<reportRoadMapCreateWithoutUserReportRoadMapByIdRoadMapInput, reportRoadMapUncheckedCreateWithoutUserReportRoadMapByIdRoadMapInput>
  }

  export type reportRoadMapUpdateWithWhereUniqueWithoutUserReportRoadMapByIdRoadMapInput = {
    where: reportRoadMapWhereUniqueInput
    data: XOR<reportRoadMapUpdateWithoutUserReportRoadMapByIdRoadMapInput, reportRoadMapUncheckedUpdateWithoutUserReportRoadMapByIdRoadMapInput>
  }

  export type reportRoadMapUpdateManyWithWhereWithoutUserReportRoadMapByIdRoadMapInput = {
    where: reportRoadMapScalarWhereInput
    data: XOR<reportRoadMapUpdateManyMutationInput, reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdRoadMapInput>
  }

  export type notificationRoadMapUpsertWithWhereUniqueWithoutUserNotificationRoadMapByIdRoadMapInput = {
    where: notificationRoadMapWhereUniqueInput
    update: XOR<notificationRoadMapUpdateWithoutUserNotificationRoadMapByIdRoadMapInput, notificationRoadMapUncheckedUpdateWithoutUserNotificationRoadMapByIdRoadMapInput>
    create: XOR<notificationRoadMapCreateWithoutUserNotificationRoadMapByIdRoadMapInput, notificationRoadMapUncheckedCreateWithoutUserNotificationRoadMapByIdRoadMapInput>
  }

  export type notificationRoadMapUpdateWithWhereUniqueWithoutUserNotificationRoadMapByIdRoadMapInput = {
    where: notificationRoadMapWhereUniqueInput
    data: XOR<notificationRoadMapUpdateWithoutUserNotificationRoadMapByIdRoadMapInput, notificationRoadMapUncheckedUpdateWithoutUserNotificationRoadMapByIdRoadMapInput>
  }

  export type notificationRoadMapUpdateManyWithWhereWithoutUserNotificationRoadMapByIdRoadMapInput = {
    where: notificationRoadMapScalarWhereInput
    data: XOR<notificationRoadMapUpdateManyMutationInput, notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdRoadMapInput>
  }

  export type StateCreateWithoutCountryByCountryNameInput = {
    id?: string
    name: string
    StateByStateName?: CityCreateNestedManyWithoutStateByStateNameInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutStateRelationInput
  }

  export type StateUncheckedCreateWithoutCountryByCountryNameInput = {
    id?: string
    name: string
    StateByStateName?: CityUncheckedCreateNestedManyWithoutStateByStateNameInput
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutStateRelationInput
  }

  export type StateCreateOrConnectWithoutCountryByCountryNameInput = {
    where: StateWhereUniqueInput
    create: XOR<StateCreateWithoutCountryByCountryNameInput, StateUncheckedCreateWithoutCountryByCountryNameInput>
  }

  export type StateCreateManyCountryByCountryNameInputEnvelope = {
    data: StateCreateManyCountryByCountryNameInput | StateCreateManyCountryByCountryNameInput[]
    skipDuplicates?: boolean
  }

  export type CityCreateWithoutCityByCountryNameInput = {
    id?: string
    name: string
    StateByStateName: StateCreateNestedOneWithoutStateByStateNameInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutCityRelationInput
  }

  export type CityUncheckedCreateWithoutCityByCountryNameInput = {
    id?: string
    name: string
    stateName: string
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutCityRelationInput
  }

  export type CityCreateOrConnectWithoutCityByCountryNameInput = {
    where: CityWhereUniqueInput
    create: XOR<CityCreateWithoutCityByCountryNameInput, CityUncheckedCreateWithoutCityByCountryNameInput>
  }

  export type CityCreateManyCityByCountryNameInputEnvelope = {
    data: CityCreateManyCityByCountryNameInput | CityCreateManyCityByCountryNameInput[]
    skipDuplicates?: boolean
  }

  export type Travel_Road_MapCreateWithoutCountryRelationInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    userClient: User_ClientCreateNestedOneWithoutTravelRoadMapsInput
    AvaliationRoadMap?: AvaliationRoadMapCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapUncheckedCreateWithoutCountryRelationInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    idCreator: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityUncheckedCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapCreateOrConnectWithoutCountryRelationInput = {
    where: Travel_Road_MapWhereUniqueInput
    create: XOR<Travel_Road_MapCreateWithoutCountryRelationInput, Travel_Road_MapUncheckedCreateWithoutCountryRelationInput>
  }

  export type StateUpsertWithWhereUniqueWithoutCountryByCountryNameInput = {
    where: StateWhereUniqueInput
    update: XOR<StateUpdateWithoutCountryByCountryNameInput, StateUncheckedUpdateWithoutCountryByCountryNameInput>
    create: XOR<StateCreateWithoutCountryByCountryNameInput, StateUncheckedCreateWithoutCountryByCountryNameInput>
  }

  export type StateUpdateWithWhereUniqueWithoutCountryByCountryNameInput = {
    where: StateWhereUniqueInput
    data: XOR<StateUpdateWithoutCountryByCountryNameInput, StateUncheckedUpdateWithoutCountryByCountryNameInput>
  }

  export type StateUpdateManyWithWhereWithoutCountryByCountryNameInput = {
    where: StateScalarWhereInput
    data: XOR<StateUpdateManyMutationInput, StateUncheckedUpdateManyWithoutCountryByCountryNameInput>
  }

  export type CityUpsertWithWhereUniqueWithoutCityByCountryNameInput = {
    where: CityWhereUniqueInput
    update: XOR<CityUpdateWithoutCityByCountryNameInput, CityUncheckedUpdateWithoutCityByCountryNameInput>
    create: XOR<CityCreateWithoutCityByCountryNameInput, CityUncheckedCreateWithoutCityByCountryNameInput>
  }

  export type CityUpdateWithWhereUniqueWithoutCityByCountryNameInput = {
    where: CityWhereUniqueInput
    data: XOR<CityUpdateWithoutCityByCountryNameInput, CityUncheckedUpdateWithoutCityByCountryNameInput>
  }

  export type CityUpdateManyWithWhereWithoutCityByCountryNameInput = {
    where: CityScalarWhereInput
    data: XOR<CityUpdateManyMutationInput, CityUncheckedUpdateManyWithoutCityByCountryNameInput>
  }

  export type Travel_Road_MapUpsertWithWhereUniqueWithoutCountryRelationInput = {
    where: Travel_Road_MapWhereUniqueInput
    update: XOR<Travel_Road_MapUpdateWithoutCountryRelationInput, Travel_Road_MapUncheckedUpdateWithoutCountryRelationInput>
    create: XOR<Travel_Road_MapCreateWithoutCountryRelationInput, Travel_Road_MapUncheckedCreateWithoutCountryRelationInput>
  }

  export type Travel_Road_MapUpdateWithWhereUniqueWithoutCountryRelationInput = {
    where: Travel_Road_MapWhereUniqueInput
    data: XOR<Travel_Road_MapUpdateWithoutCountryRelationInput, Travel_Road_MapUncheckedUpdateWithoutCountryRelationInput>
  }

  export type Travel_Road_MapUpdateManyWithWhereWithoutCountryRelationInput = {
    where: Travel_Road_MapScalarWhereInput
    data: XOR<Travel_Road_MapUpdateManyMutationInput, Travel_Road_MapUncheckedUpdateManyWithoutCountryRelationInput>
  }

  export type CountryCreateWithoutStateByCountryNameInput = {
    id?: string
    name: string
    CityByCountryName?: CityCreateNestedManyWithoutCityByCountryNameInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutCountryRelationInput
  }

  export type CountryUncheckedCreateWithoutStateByCountryNameInput = {
    id?: string
    name: string
    CityByCountryName?: CityUncheckedCreateNestedManyWithoutCityByCountryNameInput
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutCountryRelationInput
  }

  export type CountryCreateOrConnectWithoutStateByCountryNameInput = {
    where: CountryWhereUniqueInput
    create: XOR<CountryCreateWithoutStateByCountryNameInput, CountryUncheckedCreateWithoutStateByCountryNameInput>
  }

  export type CityCreateWithoutStateByStateNameInput = {
    id?: string
    name: string
    CityByCountryName: CountryCreateNestedOneWithoutCityByCountryNameInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutCityRelationInput
  }

  export type CityUncheckedCreateWithoutStateByStateNameInput = {
    id?: string
    name: string
    countryName: string
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutCityRelationInput
  }

  export type CityCreateOrConnectWithoutStateByStateNameInput = {
    where: CityWhereUniqueInput
    create: XOR<CityCreateWithoutStateByStateNameInput, CityUncheckedCreateWithoutStateByStateNameInput>
  }

  export type CityCreateManyStateByStateNameInputEnvelope = {
    data: CityCreateManyStateByStateNameInput | CityCreateManyStateByStateNameInput[]
    skipDuplicates?: boolean
  }

  export type Travel_Road_MapCreateWithoutStateRelationInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    userClient: User_ClientCreateNestedOneWithoutTravelRoadMapsInput
    AvaliationRoadMap?: AvaliationRoadMapCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapUncheckedCreateWithoutStateRelationInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    idCreator: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityUncheckedCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapCreateOrConnectWithoutStateRelationInput = {
    where: Travel_Road_MapWhereUniqueInput
    create: XOR<Travel_Road_MapCreateWithoutStateRelationInput, Travel_Road_MapUncheckedCreateWithoutStateRelationInput>
  }

  export type CountryUpsertWithoutStateByCountryNameInput = {
    update: XOR<CountryUpdateWithoutStateByCountryNameInput, CountryUncheckedUpdateWithoutStateByCountryNameInput>
    create: XOR<CountryCreateWithoutStateByCountryNameInput, CountryUncheckedCreateWithoutStateByCountryNameInput>
    where?: CountryWhereInput
  }

  export type CountryUpdateToOneWithWhereWithoutStateByCountryNameInput = {
    where?: CountryWhereInput
    data: XOR<CountryUpdateWithoutStateByCountryNameInput, CountryUncheckedUpdateWithoutStateByCountryNameInput>
  }

  export type CountryUpdateWithoutStateByCountryNameInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CityByCountryName?: CityUpdateManyWithoutCityByCountryNameNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutCountryRelationNestedInput
  }

  export type CountryUncheckedUpdateWithoutStateByCountryNameInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CityByCountryName?: CityUncheckedUpdateManyWithoutCityByCountryNameNestedInput
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutCountryRelationNestedInput
  }

  export type CityUpsertWithWhereUniqueWithoutStateByStateNameInput = {
    where: CityWhereUniqueInput
    update: XOR<CityUpdateWithoutStateByStateNameInput, CityUncheckedUpdateWithoutStateByStateNameInput>
    create: XOR<CityCreateWithoutStateByStateNameInput, CityUncheckedCreateWithoutStateByStateNameInput>
  }

  export type CityUpdateWithWhereUniqueWithoutStateByStateNameInput = {
    where: CityWhereUniqueInput
    data: XOR<CityUpdateWithoutStateByStateNameInput, CityUncheckedUpdateWithoutStateByStateNameInput>
  }

  export type CityUpdateManyWithWhereWithoutStateByStateNameInput = {
    where: CityScalarWhereInput
    data: XOR<CityUpdateManyMutationInput, CityUncheckedUpdateManyWithoutStateByStateNameInput>
  }

  export type Travel_Road_MapUpsertWithWhereUniqueWithoutStateRelationInput = {
    where: Travel_Road_MapWhereUniqueInput
    update: XOR<Travel_Road_MapUpdateWithoutStateRelationInput, Travel_Road_MapUncheckedUpdateWithoutStateRelationInput>
    create: XOR<Travel_Road_MapCreateWithoutStateRelationInput, Travel_Road_MapUncheckedCreateWithoutStateRelationInput>
  }

  export type Travel_Road_MapUpdateWithWhereUniqueWithoutStateRelationInput = {
    where: Travel_Road_MapWhereUniqueInput
    data: XOR<Travel_Road_MapUpdateWithoutStateRelationInput, Travel_Road_MapUncheckedUpdateWithoutStateRelationInput>
  }

  export type Travel_Road_MapUpdateManyWithWhereWithoutStateRelationInput = {
    where: Travel_Road_MapScalarWhereInput
    data: XOR<Travel_Road_MapUpdateManyMutationInput, Travel_Road_MapUncheckedUpdateManyWithoutStateRelationInput>
  }

  export type StateCreateWithoutStateByStateNameInput = {
    id?: string
    name: string
    CountryByCountryName: CountryCreateNestedOneWithoutStateByCountryNameInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutStateRelationInput
  }

  export type StateUncheckedCreateWithoutStateByStateNameInput = {
    id?: string
    name: string
    countryName: string
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutStateRelationInput
  }

  export type StateCreateOrConnectWithoutStateByStateNameInput = {
    where: StateWhereUniqueInput
    create: XOR<StateCreateWithoutStateByStateNameInput, StateUncheckedCreateWithoutStateByStateNameInput>
  }

  export type CountryCreateWithoutCityByCountryNameInput = {
    id?: string
    name: string
    StateByCountryName?: StateCreateNestedManyWithoutCountryByCountryNameInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutCountryRelationInput
  }

  export type CountryUncheckedCreateWithoutCityByCountryNameInput = {
    id?: string
    name: string
    StateByCountryName?: StateUncheckedCreateNestedManyWithoutCountryByCountryNameInput
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutCountryRelationInput
  }

  export type CountryCreateOrConnectWithoutCityByCountryNameInput = {
    where: CountryWhereUniqueInput
    create: XOR<CountryCreateWithoutCityByCountryNameInput, CountryUncheckedCreateWithoutCityByCountryNameInput>
  }

  export type Travel_Road_MapCreateWithoutCityRelationInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    userClient: User_ClientCreateNestedOneWithoutTravelRoadMapsInput
    AvaliationRoadMap?: AvaliationRoadMapCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapUncheckedCreateWithoutCityRelationInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    idCreator: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryUncheckedCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateUncheckedCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapCreateOrConnectWithoutCityRelationInput = {
    where: Travel_Road_MapWhereUniqueInput
    create: XOR<Travel_Road_MapCreateWithoutCityRelationInput, Travel_Road_MapUncheckedCreateWithoutCityRelationInput>
  }

  export type StateUpsertWithoutStateByStateNameInput = {
    update: XOR<StateUpdateWithoutStateByStateNameInput, StateUncheckedUpdateWithoutStateByStateNameInput>
    create: XOR<StateCreateWithoutStateByStateNameInput, StateUncheckedCreateWithoutStateByStateNameInput>
    where?: StateWhereInput
  }

  export type StateUpdateToOneWithWhereWithoutStateByStateNameInput = {
    where?: StateWhereInput
    data: XOR<StateUpdateWithoutStateByStateNameInput, StateUncheckedUpdateWithoutStateByStateNameInput>
  }

  export type StateUpdateWithoutStateByStateNameInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CountryByCountryName?: CountryUpdateOneRequiredWithoutStateByCountryNameNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutStateRelationNestedInput
  }

  export type StateUncheckedUpdateWithoutStateByStateNameInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    countryName?: StringFieldUpdateOperationsInput | string
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutStateRelationNestedInput
  }

  export type CountryUpsertWithoutCityByCountryNameInput = {
    update: XOR<CountryUpdateWithoutCityByCountryNameInput, CountryUncheckedUpdateWithoutCityByCountryNameInput>
    create: XOR<CountryCreateWithoutCityByCountryNameInput, CountryUncheckedCreateWithoutCityByCountryNameInput>
    where?: CountryWhereInput
  }

  export type CountryUpdateToOneWithWhereWithoutCityByCountryNameInput = {
    where?: CountryWhereInput
    data: XOR<CountryUpdateWithoutCityByCountryNameInput, CountryUncheckedUpdateWithoutCityByCountryNameInput>
  }

  export type CountryUpdateWithoutCityByCountryNameInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    StateByCountryName?: StateUpdateManyWithoutCountryByCountryNameNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutCountryRelationNestedInput
  }

  export type CountryUncheckedUpdateWithoutCityByCountryNameInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    StateByCountryName?: StateUncheckedUpdateManyWithoutCountryByCountryNameNestedInput
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutCountryRelationNestedInput
  }

  export type Travel_Road_MapUpsertWithWhereUniqueWithoutCityRelationInput = {
    where: Travel_Road_MapWhereUniqueInput
    update: XOR<Travel_Road_MapUpdateWithoutCityRelationInput, Travel_Road_MapUncheckedUpdateWithoutCityRelationInput>
    create: XOR<Travel_Road_MapCreateWithoutCityRelationInput, Travel_Road_MapUncheckedCreateWithoutCityRelationInput>
  }

  export type Travel_Road_MapUpdateWithWhereUniqueWithoutCityRelationInput = {
    where: Travel_Road_MapWhereUniqueInput
    data: XOR<Travel_Road_MapUpdateWithoutCityRelationInput, Travel_Road_MapUncheckedUpdateWithoutCityRelationInput>
  }

  export type Travel_Road_MapUpdateManyWithWhereWithoutCityRelationInput = {
    where: Travel_Road_MapScalarWhereInput
    data: XOR<Travel_Road_MapUpdateManyMutationInput, Travel_Road_MapUncheckedUpdateManyWithoutCityRelationInput>
  }

  export type Ponto_TuristicoCreateWithoutImageTouristPointByTouristPointIdInput = {
    id?: string
    name: string
    description: string
    creationDate: Date | string
    local: string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    avaliationTouristPoint?: AvaliationTouristPointCreateNestedManyWithoutUserTouristPointByIdTouristPointInput
    commentTouristPointByTouristPointId?: CommentTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutPontosTuristicosRelationInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdTouristPointInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdTouristPointInput
  }

  export type Ponto_TuristicoUncheckedCreateWithoutImageTouristPointByTouristPointIdInput = {
    id?: string
    name: string
    description: string
    creationDate: Date | string
    local: string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    avaliationTouristPoint?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByIdTouristPointInput
    commentTouristPointByTouristPointId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutPontosTuristicosRelationInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdTouristPointInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdTouristPointInput
  }

  export type Ponto_TuristicoCreateOrConnectWithoutImageTouristPointByTouristPointIdInput = {
    where: Ponto_TuristicoWhereUniqueInput
    create: XOR<Ponto_TuristicoCreateWithoutImageTouristPointByTouristPointIdInput, Ponto_TuristicoUncheckedCreateWithoutImageTouristPointByTouristPointIdInput>
  }

  export type Ponto_TuristicoUpsertWithoutImageTouristPointByTouristPointIdInput = {
    update: XOR<Ponto_TuristicoUpdateWithoutImageTouristPointByTouristPointIdInput, Ponto_TuristicoUncheckedUpdateWithoutImageTouristPointByTouristPointIdInput>
    create: XOR<Ponto_TuristicoCreateWithoutImageTouristPointByTouristPointIdInput, Ponto_TuristicoUncheckedCreateWithoutImageTouristPointByTouristPointIdInput>
    where?: Ponto_TuristicoWhereInput
  }

  export type Ponto_TuristicoUpdateToOneWithWhereWithoutImageTouristPointByTouristPointIdInput = {
    where?: Ponto_TuristicoWhereInput
    data: XOR<Ponto_TuristicoUpdateWithoutImageTouristPointByTouristPointIdInput, Ponto_TuristicoUncheckedUpdateWithoutImageTouristPointByTouristPointIdInput>
  }

  export type Ponto_TuristicoUpdateWithoutImageTouristPointByTouristPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    local?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    avaliationTouristPoint?: AvaliationTouristPointUpdateManyWithoutUserTouristPointByIdTouristPointNestedInput
    commentTouristPointByTouristPointId?: CommentTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutPontosTuristicosRelationNestedInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdTouristPointNestedInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdTouristPointNestedInput
  }

  export type Ponto_TuristicoUncheckedUpdateWithoutImageTouristPointByTouristPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    local?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    avaliationTouristPoint?: AvaliationTouristPointUncheckedUpdateManyWithoutUserTouristPointByIdTouristPointNestedInput
    commentTouristPointByTouristPointId?: CommentTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutPontosTuristicosRelationNestedInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdTouristPointNestedInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdTouristPointNestedInput
  }

  export type Ponto_ComercialCreateWithoutImageCommercialPointByCommercialPointIdInput = {
    id?: string
    name: string
    description: string
    local: string
    creationDate: Date | string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    User_Business: User_BusinessCreateNestedOneWithoutPontosComerciaisInput
    avaliationCommercialPoint?: AvaliationCommercialPointCreateNestedManyWithoutUserCommercialPointByIdCommercialPointInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutPontosComerciaisRelationInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdCommercialPointInput
  }

  export type Ponto_ComercialUncheckedCreateWithoutImageCommercialPointByCommercialPointIdInput = {
    id?: string
    name: string
    description: string
    local: string
    creationDate: Date | string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    businessId: string
    avaliationCommercialPoint?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByIdCommercialPointInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutPontosComerciaisRelationInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdCommercialPointInput
  }

  export type Ponto_ComercialCreateOrConnectWithoutImageCommercialPointByCommercialPointIdInput = {
    where: Ponto_ComercialWhereUniqueInput
    create: XOR<Ponto_ComercialCreateWithoutImageCommercialPointByCommercialPointIdInput, Ponto_ComercialUncheckedCreateWithoutImageCommercialPointByCommercialPointIdInput>
  }

  export type Ponto_ComercialUpsertWithoutImageCommercialPointByCommercialPointIdInput = {
    update: XOR<Ponto_ComercialUpdateWithoutImageCommercialPointByCommercialPointIdInput, Ponto_ComercialUncheckedUpdateWithoutImageCommercialPointByCommercialPointIdInput>
    create: XOR<Ponto_ComercialCreateWithoutImageCommercialPointByCommercialPointIdInput, Ponto_ComercialUncheckedCreateWithoutImageCommercialPointByCommercialPointIdInput>
    where?: Ponto_ComercialWhereInput
  }

  export type Ponto_ComercialUpdateToOneWithWhereWithoutImageCommercialPointByCommercialPointIdInput = {
    where?: Ponto_ComercialWhereInput
    data: XOR<Ponto_ComercialUpdateWithoutImageCommercialPointByCommercialPointIdInput, Ponto_ComercialUncheckedUpdateWithoutImageCommercialPointByCommercialPointIdInput>
  }

  export type Ponto_ComercialUpdateWithoutImageCommercialPointByCommercialPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    User_Business?: User_BusinessUpdateOneRequiredWithoutPontosComerciaisNestedInput
    avaliationCommercialPoint?: AvaliationCommercialPointUpdateManyWithoutUserCommercialPointByIdCommercialPointNestedInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutPontosComerciaisRelationNestedInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdCommercialPointNestedInput
  }

  export type Ponto_ComercialUncheckedUpdateWithoutImageCommercialPointByCommercialPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    businessId?: StringFieldUpdateOperationsInput | string
    avaliationCommercialPoint?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByIdCommercialPointNestedInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutPontosComerciaisRelationNestedInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdCommercialPointNestedInput
  }

  export type Travel_Road_MapCreateWithoutImageRoadMapByRoadMapIdInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    userClient: User_ClientCreateNestedOneWithoutTravelRoadMapsInput
    AvaliationRoadMap?: AvaliationRoadMapCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapUncheckedCreateWithoutImageRoadMapByRoadMapIdInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    idCreator: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryUncheckedCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityUncheckedCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapCreateOrConnectWithoutImageRoadMapByRoadMapIdInput = {
    where: Travel_Road_MapWhereUniqueInput
    create: XOR<Travel_Road_MapCreateWithoutImageRoadMapByRoadMapIdInput, Travel_Road_MapUncheckedCreateWithoutImageRoadMapByRoadMapIdInput>
  }

  export type Travel_Road_MapUpsertWithoutImageRoadMapByRoadMapIdInput = {
    update: XOR<Travel_Road_MapUpdateWithoutImageRoadMapByRoadMapIdInput, Travel_Road_MapUncheckedUpdateWithoutImageRoadMapByRoadMapIdInput>
    create: XOR<Travel_Road_MapCreateWithoutImageRoadMapByRoadMapIdInput, Travel_Road_MapUncheckedCreateWithoutImageRoadMapByRoadMapIdInput>
    where?: Travel_Road_MapWhereInput
  }

  export type Travel_Road_MapUpdateToOneWithWhereWithoutImageRoadMapByRoadMapIdInput = {
    where?: Travel_Road_MapWhereInput
    data: XOR<Travel_Road_MapUpdateWithoutImageRoadMapByRoadMapIdInput, Travel_Road_MapUncheckedUpdateWithoutImageRoadMapByRoadMapIdInput>
  }

  export type Travel_Road_MapUpdateWithoutImageRoadMapByRoadMapIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    userClient?: User_ClientUpdateOneRequiredWithoutTravelRoadMapsNestedInput
    AvaliationRoadMap?: AvaliationRoadMapUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapUncheckedUpdateWithoutImageRoadMapByRoadMapIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    idCreator?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type User_ClientCreateWithoutCommentRoadMapByClientEmailInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutCommentRoadMapByClientEmailInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutCommentRoadMapByClientEmailInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutCommentRoadMapByClientEmailInput, User_ClientUncheckedCreateWithoutCommentRoadMapByClientEmailInput>
  }

  export type User_ClientCreateWithoutCommentRoadMapByClientIdInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutCommentRoadMapByClientIdInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutCommentRoadMapByClientIdInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutCommentRoadMapByClientIdInput, User_ClientUncheckedCreateWithoutCommentRoadMapByClientIdInput>
  }

  export type Travel_Road_MapCreateWithoutCommentRoadMapByRoadMapIdInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    userClient: User_ClientCreateNestedOneWithoutTravelRoadMapsInput
    AvaliationRoadMap?: AvaliationRoadMapCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapUncheckedCreateWithoutCommentRoadMapByRoadMapIdInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    idCreator: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryUncheckedCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityUncheckedCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapCreateOrConnectWithoutCommentRoadMapByRoadMapIdInput = {
    where: Travel_Road_MapWhereUniqueInput
    create: XOR<Travel_Road_MapCreateWithoutCommentRoadMapByRoadMapIdInput, Travel_Road_MapUncheckedCreateWithoutCommentRoadMapByRoadMapIdInput>
  }

  export type User_ClientUpsertWithoutCommentRoadMapByClientEmailInput = {
    update: XOR<User_ClientUpdateWithoutCommentRoadMapByClientEmailInput, User_ClientUncheckedUpdateWithoutCommentRoadMapByClientEmailInput>
    create: XOR<User_ClientCreateWithoutCommentRoadMapByClientEmailInput, User_ClientUncheckedCreateWithoutCommentRoadMapByClientEmailInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutCommentRoadMapByClientEmailInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutCommentRoadMapByClientEmailInput, User_ClientUncheckedUpdateWithoutCommentRoadMapByClientEmailInput>
  }

  export type User_ClientUpdateWithoutCommentRoadMapByClientEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutCommentRoadMapByClientEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUpsertWithoutCommentRoadMapByClientIdInput = {
    update: XOR<User_ClientUpdateWithoutCommentRoadMapByClientIdInput, User_ClientUncheckedUpdateWithoutCommentRoadMapByClientIdInput>
    create: XOR<User_ClientCreateWithoutCommentRoadMapByClientIdInput, User_ClientUncheckedCreateWithoutCommentRoadMapByClientIdInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutCommentRoadMapByClientIdInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutCommentRoadMapByClientIdInput, User_ClientUncheckedUpdateWithoutCommentRoadMapByClientIdInput>
  }

  export type User_ClientUpdateWithoutCommentRoadMapByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutCommentRoadMapByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type Travel_Road_MapUpsertWithoutCommentRoadMapByRoadMapIdInput = {
    update: XOR<Travel_Road_MapUpdateWithoutCommentRoadMapByRoadMapIdInput, Travel_Road_MapUncheckedUpdateWithoutCommentRoadMapByRoadMapIdInput>
    create: XOR<Travel_Road_MapCreateWithoutCommentRoadMapByRoadMapIdInput, Travel_Road_MapUncheckedCreateWithoutCommentRoadMapByRoadMapIdInput>
    where?: Travel_Road_MapWhereInput
  }

  export type Travel_Road_MapUpdateToOneWithWhereWithoutCommentRoadMapByRoadMapIdInput = {
    where?: Travel_Road_MapWhereInput
    data: XOR<Travel_Road_MapUpdateWithoutCommentRoadMapByRoadMapIdInput, Travel_Road_MapUncheckedUpdateWithoutCommentRoadMapByRoadMapIdInput>
  }

  export type Travel_Road_MapUpdateWithoutCommentRoadMapByRoadMapIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    userClient?: User_ClientUpdateOneRequiredWithoutTravelRoadMapsNestedInput
    AvaliationRoadMap?: AvaliationRoadMapUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapUncheckedUpdateWithoutCommentRoadMapByRoadMapIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    idCreator?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type User_ClientCreateWithoutCommentTouristPointByClientEmailInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutCommentTouristPointByClientEmailInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutCommentTouristPointByClientEmailInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutCommentTouristPointByClientEmailInput, User_ClientUncheckedCreateWithoutCommentTouristPointByClientEmailInput>
  }

  export type User_ClientCreateWithoutCommentTouristPointByClientIdInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutCommentTouristPointByClientIdInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutCommentTouristPointByClientIdInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutCommentTouristPointByClientIdInput, User_ClientUncheckedCreateWithoutCommentTouristPointByClientIdInput>
  }

  export type Ponto_TuristicoCreateWithoutCommentTouristPointByTouristPointIdInput = {
    id?: string
    name: string
    description: string
    creationDate: Date | string
    local: string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    avaliationTouristPoint?: AvaliationTouristPointCreateNestedManyWithoutUserTouristPointByIdTouristPointInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    ImageTouristPointByTouristPointId?: ImageTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutPontosTuristicosRelationInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdTouristPointInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdTouristPointInput
  }

  export type Ponto_TuristicoUncheckedCreateWithoutCommentTouristPointByTouristPointIdInput = {
    id?: string
    name: string
    description: string
    creationDate: Date | string
    local: string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    avaliationTouristPoint?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByIdTouristPointInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutPontosTuristicosRelationInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdTouristPointInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdTouristPointInput
  }

  export type Ponto_TuristicoCreateOrConnectWithoutCommentTouristPointByTouristPointIdInput = {
    where: Ponto_TuristicoWhereUniqueInput
    create: XOR<Ponto_TuristicoCreateWithoutCommentTouristPointByTouristPointIdInput, Ponto_TuristicoUncheckedCreateWithoutCommentTouristPointByTouristPointIdInput>
  }

  export type User_ClientUpsertWithoutCommentTouristPointByClientEmailInput = {
    update: XOR<User_ClientUpdateWithoutCommentTouristPointByClientEmailInput, User_ClientUncheckedUpdateWithoutCommentTouristPointByClientEmailInput>
    create: XOR<User_ClientCreateWithoutCommentTouristPointByClientEmailInput, User_ClientUncheckedCreateWithoutCommentTouristPointByClientEmailInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutCommentTouristPointByClientEmailInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutCommentTouristPointByClientEmailInput, User_ClientUncheckedUpdateWithoutCommentTouristPointByClientEmailInput>
  }

  export type User_ClientUpdateWithoutCommentTouristPointByClientEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutCommentTouristPointByClientEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUpsertWithoutCommentTouristPointByClientIdInput = {
    update: XOR<User_ClientUpdateWithoutCommentTouristPointByClientIdInput, User_ClientUncheckedUpdateWithoutCommentTouristPointByClientIdInput>
    create: XOR<User_ClientCreateWithoutCommentTouristPointByClientIdInput, User_ClientUncheckedCreateWithoutCommentTouristPointByClientIdInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutCommentTouristPointByClientIdInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutCommentTouristPointByClientIdInput, User_ClientUncheckedUpdateWithoutCommentTouristPointByClientIdInput>
  }

  export type User_ClientUpdateWithoutCommentTouristPointByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutCommentTouristPointByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type Ponto_TuristicoUpsertWithoutCommentTouristPointByTouristPointIdInput = {
    update: XOR<Ponto_TuristicoUpdateWithoutCommentTouristPointByTouristPointIdInput, Ponto_TuristicoUncheckedUpdateWithoutCommentTouristPointByTouristPointIdInput>
    create: XOR<Ponto_TuristicoCreateWithoutCommentTouristPointByTouristPointIdInput, Ponto_TuristicoUncheckedCreateWithoutCommentTouristPointByTouristPointIdInput>
    where?: Ponto_TuristicoWhereInput
  }

  export type Ponto_TuristicoUpdateToOneWithWhereWithoutCommentTouristPointByTouristPointIdInput = {
    where?: Ponto_TuristicoWhereInput
    data: XOR<Ponto_TuristicoUpdateWithoutCommentTouristPointByTouristPointIdInput, Ponto_TuristicoUncheckedUpdateWithoutCommentTouristPointByTouristPointIdInput>
  }

  export type Ponto_TuristicoUpdateWithoutCommentTouristPointByTouristPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    local?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    avaliationTouristPoint?: AvaliationTouristPointUpdateManyWithoutUserTouristPointByIdTouristPointNestedInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutPontosTuristicosRelationNestedInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdTouristPointNestedInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdTouristPointNestedInput
  }

  export type Ponto_TuristicoUncheckedUpdateWithoutCommentTouristPointByTouristPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    local?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    avaliationTouristPoint?: AvaliationTouristPointUncheckedUpdateManyWithoutUserTouristPointByIdTouristPointNestedInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutPontosTuristicosRelationNestedInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdTouristPointNestedInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdTouristPointNestedInput
  }

  export type User_ClientCreateWithoutCommentCommercialPointByClientEmailInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutCommentCommercialPointByClientEmailInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutCommentCommercialPointByClientEmailInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutCommentCommercialPointByClientEmailInput, User_ClientUncheckedCreateWithoutCommentCommercialPointByClientEmailInput>
  }

  export type User_ClientCreateWithoutCommentCommercialPointByClientIdInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutCommentCommercialPointByClientIdInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutCommentCommercialPointByClientIdInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutCommentCommercialPointByClientIdInput, User_ClientUncheckedCreateWithoutCommentCommercialPointByClientIdInput>
  }

  export type Ponto_ComercialCreateWithoutCommentCommercialPointByCommercialPointIdInput = {
    id?: string
    name: string
    description: string
    local: string
    creationDate: Date | string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    User_Business: User_BusinessCreateNestedOneWithoutPontosComerciaisInput
    avaliationCommercialPoint?: AvaliationCommercialPointCreateNestedManyWithoutUserCommercialPointByIdCommercialPointInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutPontosComerciaisRelationInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdCommercialPointInput
  }

  export type Ponto_ComercialUncheckedCreateWithoutCommentCommercialPointByCommercialPointIdInput = {
    id?: string
    name: string
    description: string
    local: string
    creationDate: Date | string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    businessId: string
    avaliationCommercialPoint?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByIdCommercialPointInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutPontosComerciaisRelationInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdCommercialPointInput
  }

  export type Ponto_ComercialCreateOrConnectWithoutCommentCommercialPointByCommercialPointIdInput = {
    where: Ponto_ComercialWhereUniqueInput
    create: XOR<Ponto_ComercialCreateWithoutCommentCommercialPointByCommercialPointIdInput, Ponto_ComercialUncheckedCreateWithoutCommentCommercialPointByCommercialPointIdInput>
  }

  export type User_ClientUpsertWithoutCommentCommercialPointByClientEmailInput = {
    update: XOR<User_ClientUpdateWithoutCommentCommercialPointByClientEmailInput, User_ClientUncheckedUpdateWithoutCommentCommercialPointByClientEmailInput>
    create: XOR<User_ClientCreateWithoutCommentCommercialPointByClientEmailInput, User_ClientUncheckedCreateWithoutCommentCommercialPointByClientEmailInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutCommentCommercialPointByClientEmailInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutCommentCommercialPointByClientEmailInput, User_ClientUncheckedUpdateWithoutCommentCommercialPointByClientEmailInput>
  }

  export type User_ClientUpdateWithoutCommentCommercialPointByClientEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutCommentCommercialPointByClientEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUpsertWithoutCommentCommercialPointByClientIdInput = {
    update: XOR<User_ClientUpdateWithoutCommentCommercialPointByClientIdInput, User_ClientUncheckedUpdateWithoutCommentCommercialPointByClientIdInput>
    create: XOR<User_ClientCreateWithoutCommentCommercialPointByClientIdInput, User_ClientUncheckedCreateWithoutCommentCommercialPointByClientIdInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutCommentCommercialPointByClientIdInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutCommentCommercialPointByClientIdInput, User_ClientUncheckedUpdateWithoutCommentCommercialPointByClientIdInput>
  }

  export type User_ClientUpdateWithoutCommentCommercialPointByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutCommentCommercialPointByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type Ponto_ComercialUpsertWithoutCommentCommercialPointByCommercialPointIdInput = {
    update: XOR<Ponto_ComercialUpdateWithoutCommentCommercialPointByCommercialPointIdInput, Ponto_ComercialUncheckedUpdateWithoutCommentCommercialPointByCommercialPointIdInput>
    create: XOR<Ponto_ComercialCreateWithoutCommentCommercialPointByCommercialPointIdInput, Ponto_ComercialUncheckedCreateWithoutCommentCommercialPointByCommercialPointIdInput>
    where?: Ponto_ComercialWhereInput
  }

  export type Ponto_ComercialUpdateToOneWithWhereWithoutCommentCommercialPointByCommercialPointIdInput = {
    where?: Ponto_ComercialWhereInput
    data: XOR<Ponto_ComercialUpdateWithoutCommentCommercialPointByCommercialPointIdInput, Ponto_ComercialUncheckedUpdateWithoutCommentCommercialPointByCommercialPointIdInput>
  }

  export type Ponto_ComercialUpdateWithoutCommentCommercialPointByCommercialPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    User_Business?: User_BusinessUpdateOneRequiredWithoutPontosComerciaisNestedInput
    avaliationCommercialPoint?: AvaliationCommercialPointUpdateManyWithoutUserCommercialPointByIdCommercialPointNestedInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutPontosComerciaisRelationNestedInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdCommercialPointNestedInput
  }

  export type Ponto_ComercialUncheckedUpdateWithoutCommentCommercialPointByCommercialPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    businessId?: StringFieldUpdateOperationsInput | string
    avaliationCommercialPoint?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByIdCommercialPointNestedInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutPontosComerciaisRelationNestedInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdCommercialPointNestedInput
  }

  export type User_ClientCreateWithoutAvaliationsByEmailClientInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutAvaliationsByEmailClientInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutAvaliationsByEmailClientInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutAvaliationsByEmailClientInput, User_ClientUncheckedCreateWithoutAvaliationsByEmailClientInput>
  }

  export type User_ClientCreateWithoutAvaliationsRoadMapByIdClientInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutAvaliationsRoadMapByIdClientInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutAvaliationsRoadMapByIdClientInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutAvaliationsRoadMapByIdClientInput, User_ClientUncheckedCreateWithoutAvaliationsRoadMapByIdClientInput>
  }

  export type Travel_Road_MapCreateWithoutAvaliationRoadMapInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    userClient: User_ClientCreateNestedOneWithoutTravelRoadMapsInput
    commentRoadMapByRoadMapId?: CommentRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapUncheckedCreateWithoutAvaliationRoadMapInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    idCreator: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryUncheckedCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityUncheckedCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapCreateOrConnectWithoutAvaliationRoadMapInput = {
    where: Travel_Road_MapWhereUniqueInput
    create: XOR<Travel_Road_MapCreateWithoutAvaliationRoadMapInput, Travel_Road_MapUncheckedCreateWithoutAvaliationRoadMapInput>
  }

  export type User_ClientUpsertWithoutAvaliationsByEmailClientInput = {
    update: XOR<User_ClientUpdateWithoutAvaliationsByEmailClientInput, User_ClientUncheckedUpdateWithoutAvaliationsByEmailClientInput>
    create: XOR<User_ClientCreateWithoutAvaliationsByEmailClientInput, User_ClientUncheckedCreateWithoutAvaliationsByEmailClientInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutAvaliationsByEmailClientInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutAvaliationsByEmailClientInput, User_ClientUncheckedUpdateWithoutAvaliationsByEmailClientInput>
  }

  export type User_ClientUpdateWithoutAvaliationsByEmailClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutAvaliationsByEmailClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUpsertWithoutAvaliationsRoadMapByIdClientInput = {
    update: XOR<User_ClientUpdateWithoutAvaliationsRoadMapByIdClientInput, User_ClientUncheckedUpdateWithoutAvaliationsRoadMapByIdClientInput>
    create: XOR<User_ClientCreateWithoutAvaliationsRoadMapByIdClientInput, User_ClientUncheckedCreateWithoutAvaliationsRoadMapByIdClientInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutAvaliationsRoadMapByIdClientInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutAvaliationsRoadMapByIdClientInput, User_ClientUncheckedUpdateWithoutAvaliationsRoadMapByIdClientInput>
  }

  export type User_ClientUpdateWithoutAvaliationsRoadMapByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutAvaliationsRoadMapByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type Travel_Road_MapUpsertWithoutAvaliationRoadMapInput = {
    update: XOR<Travel_Road_MapUpdateWithoutAvaliationRoadMapInput, Travel_Road_MapUncheckedUpdateWithoutAvaliationRoadMapInput>
    create: XOR<Travel_Road_MapCreateWithoutAvaliationRoadMapInput, Travel_Road_MapUncheckedCreateWithoutAvaliationRoadMapInput>
    where?: Travel_Road_MapWhereInput
  }

  export type Travel_Road_MapUpdateToOneWithWhereWithoutAvaliationRoadMapInput = {
    where?: Travel_Road_MapWhereInput
    data: XOR<Travel_Road_MapUpdateWithoutAvaliationRoadMapInput, Travel_Road_MapUncheckedUpdateWithoutAvaliationRoadMapInput>
  }

  export type Travel_Road_MapUpdateWithoutAvaliationRoadMapInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    userClient?: User_ClientUpdateOneRequiredWithoutTravelRoadMapsNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapUncheckedUpdateWithoutAvaliationRoadMapInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    idCreator?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type User_ClientCreateWithoutAvaliationTouristPointByUserClientEmailInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutAvaliationTouristPointByUserClientEmailInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutAvaliationTouristPointByUserClientEmailInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutAvaliationTouristPointByUserClientEmailInput, User_ClientUncheckedCreateWithoutAvaliationTouristPointByUserClientEmailInput>
  }

  export type User_ClientCreateWithoutAvaliationTouristPointByIdCreatorInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutAvaliationTouristPointByIdCreatorInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutAvaliationTouristPointByIdCreatorInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutAvaliationTouristPointByIdCreatorInput, User_ClientUncheckedCreateWithoutAvaliationTouristPointByIdCreatorInput>
  }

  export type Ponto_TuristicoCreateWithoutAvaliationTouristPointInput = {
    id?: string
    name: string
    description: string
    creationDate: Date | string
    local: string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    commentTouristPointByTouristPointId?: CommentTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    ImageTouristPointByTouristPointId?: ImageTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutPontosTuristicosRelationInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdTouristPointInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdTouristPointInput
  }

  export type Ponto_TuristicoUncheckedCreateWithoutAvaliationTouristPointInput = {
    id?: string
    name: string
    description: string
    creationDate: Date | string
    local: string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    commentTouristPointByTouristPointId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutPontosTuristicosRelationInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdTouristPointInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdTouristPointInput
  }

  export type Ponto_TuristicoCreateOrConnectWithoutAvaliationTouristPointInput = {
    where: Ponto_TuristicoWhereUniqueInput
    create: XOR<Ponto_TuristicoCreateWithoutAvaliationTouristPointInput, Ponto_TuristicoUncheckedCreateWithoutAvaliationTouristPointInput>
  }

  export type User_ClientUpsertWithoutAvaliationTouristPointByUserClientEmailInput = {
    update: XOR<User_ClientUpdateWithoutAvaliationTouristPointByUserClientEmailInput, User_ClientUncheckedUpdateWithoutAvaliationTouristPointByUserClientEmailInput>
    create: XOR<User_ClientCreateWithoutAvaliationTouristPointByUserClientEmailInput, User_ClientUncheckedCreateWithoutAvaliationTouristPointByUserClientEmailInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutAvaliationTouristPointByUserClientEmailInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutAvaliationTouristPointByUserClientEmailInput, User_ClientUncheckedUpdateWithoutAvaliationTouristPointByUserClientEmailInput>
  }

  export type User_ClientUpdateWithoutAvaliationTouristPointByUserClientEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutAvaliationTouristPointByUserClientEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUpsertWithoutAvaliationTouristPointByIdCreatorInput = {
    update: XOR<User_ClientUpdateWithoutAvaliationTouristPointByIdCreatorInput, User_ClientUncheckedUpdateWithoutAvaliationTouristPointByIdCreatorInput>
    create: XOR<User_ClientCreateWithoutAvaliationTouristPointByIdCreatorInput, User_ClientUncheckedCreateWithoutAvaliationTouristPointByIdCreatorInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutAvaliationTouristPointByIdCreatorInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutAvaliationTouristPointByIdCreatorInput, User_ClientUncheckedUpdateWithoutAvaliationTouristPointByIdCreatorInput>
  }

  export type User_ClientUpdateWithoutAvaliationTouristPointByIdCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutAvaliationTouristPointByIdCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type Ponto_TuristicoUpsertWithoutAvaliationTouristPointInput = {
    update: XOR<Ponto_TuristicoUpdateWithoutAvaliationTouristPointInput, Ponto_TuristicoUncheckedUpdateWithoutAvaliationTouristPointInput>
    create: XOR<Ponto_TuristicoCreateWithoutAvaliationTouristPointInput, Ponto_TuristicoUncheckedCreateWithoutAvaliationTouristPointInput>
    where?: Ponto_TuristicoWhereInput
  }

  export type Ponto_TuristicoUpdateToOneWithWhereWithoutAvaliationTouristPointInput = {
    where?: Ponto_TuristicoWhereInput
    data: XOR<Ponto_TuristicoUpdateWithoutAvaliationTouristPointInput, Ponto_TuristicoUncheckedUpdateWithoutAvaliationTouristPointInput>
  }

  export type Ponto_TuristicoUpdateWithoutAvaliationTouristPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    local?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    commentTouristPointByTouristPointId?: CommentTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutPontosTuristicosRelationNestedInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdTouristPointNestedInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdTouristPointNestedInput
  }

  export type Ponto_TuristicoUncheckedUpdateWithoutAvaliationTouristPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    local?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    commentTouristPointByTouristPointId?: CommentTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutPontosTuristicosRelationNestedInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdTouristPointNestedInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdTouristPointNestedInput
  }

  export type User_ClientCreateWithoutAvaliationCommercialPointByUserClientEmailInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutAvaliationCommercialPointByUserClientEmailInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutAvaliationCommercialPointByUserClientEmailInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutAvaliationCommercialPointByUserClientEmailInput, User_ClientUncheckedCreateWithoutAvaliationCommercialPointByUserClientEmailInput>
  }

  export type User_ClientCreateWithoutAvaliationCommercialPointByIdCreatorInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutAvaliationCommercialPointByIdCreatorInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutAvaliationCommercialPointByIdCreatorInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutAvaliationCommercialPointByIdCreatorInput, User_ClientUncheckedCreateWithoutAvaliationCommercialPointByIdCreatorInput>
  }

  export type Ponto_ComercialCreateWithoutAvaliationCommercialPointInput = {
    id?: string
    name: string
    description: string
    local: string
    creationDate: Date | string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    User_Business: User_BusinessCreateNestedOneWithoutPontosComerciaisInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutPontosComerciaisRelationInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdCommercialPointInput
  }

  export type Ponto_ComercialUncheckedCreateWithoutAvaliationCommercialPointInput = {
    id?: string
    name: string
    description: string
    local: string
    creationDate: Date | string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    businessId: string
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutPontosComerciaisRelationInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdCommercialPointInput
  }

  export type Ponto_ComercialCreateOrConnectWithoutAvaliationCommercialPointInput = {
    where: Ponto_ComercialWhereUniqueInput
    create: XOR<Ponto_ComercialCreateWithoutAvaliationCommercialPointInput, Ponto_ComercialUncheckedCreateWithoutAvaliationCommercialPointInput>
  }

  export type User_ClientUpsertWithoutAvaliationCommercialPointByUserClientEmailInput = {
    update: XOR<User_ClientUpdateWithoutAvaliationCommercialPointByUserClientEmailInput, User_ClientUncheckedUpdateWithoutAvaliationCommercialPointByUserClientEmailInput>
    create: XOR<User_ClientCreateWithoutAvaliationCommercialPointByUserClientEmailInput, User_ClientUncheckedCreateWithoutAvaliationCommercialPointByUserClientEmailInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutAvaliationCommercialPointByUserClientEmailInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutAvaliationCommercialPointByUserClientEmailInput, User_ClientUncheckedUpdateWithoutAvaliationCommercialPointByUserClientEmailInput>
  }

  export type User_ClientUpdateWithoutAvaliationCommercialPointByUserClientEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutAvaliationCommercialPointByUserClientEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUpsertWithoutAvaliationCommercialPointByIdCreatorInput = {
    update: XOR<User_ClientUpdateWithoutAvaliationCommercialPointByIdCreatorInput, User_ClientUncheckedUpdateWithoutAvaliationCommercialPointByIdCreatorInput>
    create: XOR<User_ClientCreateWithoutAvaliationCommercialPointByIdCreatorInput, User_ClientUncheckedCreateWithoutAvaliationCommercialPointByIdCreatorInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutAvaliationCommercialPointByIdCreatorInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutAvaliationCommercialPointByIdCreatorInput, User_ClientUncheckedUpdateWithoutAvaliationCommercialPointByIdCreatorInput>
  }

  export type User_ClientUpdateWithoutAvaliationCommercialPointByIdCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutAvaliationCommercialPointByIdCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type Ponto_ComercialUpsertWithoutAvaliationCommercialPointInput = {
    update: XOR<Ponto_ComercialUpdateWithoutAvaliationCommercialPointInput, Ponto_ComercialUncheckedUpdateWithoutAvaliationCommercialPointInput>
    create: XOR<Ponto_ComercialCreateWithoutAvaliationCommercialPointInput, Ponto_ComercialUncheckedCreateWithoutAvaliationCommercialPointInput>
    where?: Ponto_ComercialWhereInput
  }

  export type Ponto_ComercialUpdateToOneWithWhereWithoutAvaliationCommercialPointInput = {
    where?: Ponto_ComercialWhereInput
    data: XOR<Ponto_ComercialUpdateWithoutAvaliationCommercialPointInput, Ponto_ComercialUncheckedUpdateWithoutAvaliationCommercialPointInput>
  }

  export type Ponto_ComercialUpdateWithoutAvaliationCommercialPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    User_Business?: User_BusinessUpdateOneRequiredWithoutPontosComerciaisNestedInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutPontosComerciaisRelationNestedInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdCommercialPointNestedInput
  }

  export type Ponto_ComercialUncheckedUpdateWithoutAvaliationCommercialPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    businessId?: StringFieldUpdateOperationsInput | string
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutPontosComerciaisRelationNestedInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdCommercialPointNestedInput
  }

  export type User_ClientCreateWithoutFavoriteCommercialPointByClientIdInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutFavoriteCommercialPointByClientIdInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutFavoriteCommercialPointByClientIdInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutFavoriteCommercialPointByClientIdInput, User_ClientUncheckedCreateWithoutFavoriteCommercialPointByClientIdInput>
  }

  export type Ponto_ComercialCreateWithoutFavoriteCommercialPointByCommercialPointIdInput = {
    id?: string
    name: string
    description: string
    local: string
    creationDate: Date | string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    User_Business: User_BusinessCreateNestedOneWithoutPontosComerciaisInput
    avaliationCommercialPoint?: AvaliationCommercialPointCreateNestedManyWithoutUserCommercialPointByIdCommercialPointInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutPontosComerciaisRelationInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdCommercialPointInput
  }

  export type Ponto_ComercialUncheckedCreateWithoutFavoriteCommercialPointByCommercialPointIdInput = {
    id?: string
    name: string
    description: string
    local: string
    creationDate: Date | string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    businessId: string
    avaliationCommercialPoint?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByIdCommercialPointInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutPontosComerciaisRelationInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdCommercialPointInput
  }

  export type Ponto_ComercialCreateOrConnectWithoutFavoriteCommercialPointByCommercialPointIdInput = {
    where: Ponto_ComercialWhereUniqueInput
    create: XOR<Ponto_ComercialCreateWithoutFavoriteCommercialPointByCommercialPointIdInput, Ponto_ComercialUncheckedCreateWithoutFavoriteCommercialPointByCommercialPointIdInput>
  }

  export type User_ClientUpsertWithoutFavoriteCommercialPointByClientIdInput = {
    update: XOR<User_ClientUpdateWithoutFavoriteCommercialPointByClientIdInput, User_ClientUncheckedUpdateWithoutFavoriteCommercialPointByClientIdInput>
    create: XOR<User_ClientCreateWithoutFavoriteCommercialPointByClientIdInput, User_ClientUncheckedCreateWithoutFavoriteCommercialPointByClientIdInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutFavoriteCommercialPointByClientIdInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutFavoriteCommercialPointByClientIdInput, User_ClientUncheckedUpdateWithoutFavoriteCommercialPointByClientIdInput>
  }

  export type User_ClientUpdateWithoutFavoriteCommercialPointByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutFavoriteCommercialPointByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type Ponto_ComercialUpsertWithoutFavoriteCommercialPointByCommercialPointIdInput = {
    update: XOR<Ponto_ComercialUpdateWithoutFavoriteCommercialPointByCommercialPointIdInput, Ponto_ComercialUncheckedUpdateWithoutFavoriteCommercialPointByCommercialPointIdInput>
    create: XOR<Ponto_ComercialCreateWithoutFavoriteCommercialPointByCommercialPointIdInput, Ponto_ComercialUncheckedCreateWithoutFavoriteCommercialPointByCommercialPointIdInput>
    where?: Ponto_ComercialWhereInput
  }

  export type Ponto_ComercialUpdateToOneWithWhereWithoutFavoriteCommercialPointByCommercialPointIdInput = {
    where?: Ponto_ComercialWhereInput
    data: XOR<Ponto_ComercialUpdateWithoutFavoriteCommercialPointByCommercialPointIdInput, Ponto_ComercialUncheckedUpdateWithoutFavoriteCommercialPointByCommercialPointIdInput>
  }

  export type Ponto_ComercialUpdateWithoutFavoriteCommercialPointByCommercialPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    User_Business?: User_BusinessUpdateOneRequiredWithoutPontosComerciaisNestedInput
    avaliationCommercialPoint?: AvaliationCommercialPointUpdateManyWithoutUserCommercialPointByIdCommercialPointNestedInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutPontosComerciaisRelationNestedInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdCommercialPointNestedInput
  }

  export type Ponto_ComercialUncheckedUpdateWithoutFavoriteCommercialPointByCommercialPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    businessId?: StringFieldUpdateOperationsInput | string
    avaliationCommercialPoint?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByIdCommercialPointNestedInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutPontosComerciaisRelationNestedInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdCommercialPointNestedInput
  }

  export type User_ClientCreateWithoutFavoriteTouristPointPointByClientIdInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutFavoriteTouristPointPointByClientIdInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutFavoriteTouristPointPointByClientIdInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutFavoriteTouristPointPointByClientIdInput, User_ClientUncheckedCreateWithoutFavoriteTouristPointPointByClientIdInput>
  }

  export type Ponto_TuristicoCreateWithoutFavoriteTouristPointByTouristPointIdInput = {
    id?: string
    name: string
    description: string
    creationDate: Date | string
    local: string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    avaliationTouristPoint?: AvaliationTouristPointCreateNestedManyWithoutUserTouristPointByIdTouristPointInput
    commentTouristPointByTouristPointId?: CommentTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    ImageTouristPointByTouristPointId?: ImageTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutPontosTuristicosRelationInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdTouristPointInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdTouristPointInput
  }

  export type Ponto_TuristicoUncheckedCreateWithoutFavoriteTouristPointByTouristPointIdInput = {
    id?: string
    name: string
    description: string
    creationDate: Date | string
    local: string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    avaliationTouristPoint?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByIdTouristPointInput
    commentTouristPointByTouristPointId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutPontosTuristicosRelationInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdTouristPointInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdTouristPointInput
  }

  export type Ponto_TuristicoCreateOrConnectWithoutFavoriteTouristPointByTouristPointIdInput = {
    where: Ponto_TuristicoWhereUniqueInput
    create: XOR<Ponto_TuristicoCreateWithoutFavoriteTouristPointByTouristPointIdInput, Ponto_TuristicoUncheckedCreateWithoutFavoriteTouristPointByTouristPointIdInput>
  }

  export type User_ClientUpsertWithoutFavoriteTouristPointPointByClientIdInput = {
    update: XOR<User_ClientUpdateWithoutFavoriteTouristPointPointByClientIdInput, User_ClientUncheckedUpdateWithoutFavoriteTouristPointPointByClientIdInput>
    create: XOR<User_ClientCreateWithoutFavoriteTouristPointPointByClientIdInput, User_ClientUncheckedCreateWithoutFavoriteTouristPointPointByClientIdInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutFavoriteTouristPointPointByClientIdInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutFavoriteTouristPointPointByClientIdInput, User_ClientUncheckedUpdateWithoutFavoriteTouristPointPointByClientIdInput>
  }

  export type User_ClientUpdateWithoutFavoriteTouristPointPointByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutFavoriteTouristPointPointByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type Ponto_TuristicoUpsertWithoutFavoriteTouristPointByTouristPointIdInput = {
    update: XOR<Ponto_TuristicoUpdateWithoutFavoriteTouristPointByTouristPointIdInput, Ponto_TuristicoUncheckedUpdateWithoutFavoriteTouristPointByTouristPointIdInput>
    create: XOR<Ponto_TuristicoCreateWithoutFavoriteTouristPointByTouristPointIdInput, Ponto_TuristicoUncheckedCreateWithoutFavoriteTouristPointByTouristPointIdInput>
    where?: Ponto_TuristicoWhereInput
  }

  export type Ponto_TuristicoUpdateToOneWithWhereWithoutFavoriteTouristPointByTouristPointIdInput = {
    where?: Ponto_TuristicoWhereInput
    data: XOR<Ponto_TuristicoUpdateWithoutFavoriteTouristPointByTouristPointIdInput, Ponto_TuristicoUncheckedUpdateWithoutFavoriteTouristPointByTouristPointIdInput>
  }

  export type Ponto_TuristicoUpdateWithoutFavoriteTouristPointByTouristPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    local?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    avaliationTouristPoint?: AvaliationTouristPointUpdateManyWithoutUserTouristPointByIdTouristPointNestedInput
    commentTouristPointByTouristPointId?: CommentTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutPontosTuristicosRelationNestedInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdTouristPointNestedInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdTouristPointNestedInput
  }

  export type Ponto_TuristicoUncheckedUpdateWithoutFavoriteTouristPointByTouristPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    local?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    avaliationTouristPoint?: AvaliationTouristPointUncheckedUpdateManyWithoutUserTouristPointByIdTouristPointNestedInput
    commentTouristPointByTouristPointId?: CommentTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutPontosTuristicosRelationNestedInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdTouristPointNestedInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdTouristPointNestedInput
  }

  export type User_ClientCreateWithoutFavoriteRoadMapPointByClientIdInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutFavoriteRoadMapPointByClientIdInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutFavoriteRoadMapPointByClientIdInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutFavoriteRoadMapPointByClientIdInput, User_ClientUncheckedCreateWithoutFavoriteRoadMapPointByClientIdInput>
  }

  export type Travel_Road_MapCreateWithoutFavoriteRoadMapByRoadMapIdInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    userClient: User_ClientCreateNestedOneWithoutTravelRoadMapsInput
    AvaliationRoadMap?: AvaliationRoadMapCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapUncheckedCreateWithoutFavoriteRoadMapByRoadMapIdInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    idCreator: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryUncheckedCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityUncheckedCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapCreateOrConnectWithoutFavoriteRoadMapByRoadMapIdInput = {
    where: Travel_Road_MapWhereUniqueInput
    create: XOR<Travel_Road_MapCreateWithoutFavoriteRoadMapByRoadMapIdInput, Travel_Road_MapUncheckedCreateWithoutFavoriteRoadMapByRoadMapIdInput>
  }

  export type User_ClientUpsertWithoutFavoriteRoadMapPointByClientIdInput = {
    update: XOR<User_ClientUpdateWithoutFavoriteRoadMapPointByClientIdInput, User_ClientUncheckedUpdateWithoutFavoriteRoadMapPointByClientIdInput>
    create: XOR<User_ClientCreateWithoutFavoriteRoadMapPointByClientIdInput, User_ClientUncheckedCreateWithoutFavoriteRoadMapPointByClientIdInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutFavoriteRoadMapPointByClientIdInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutFavoriteRoadMapPointByClientIdInput, User_ClientUncheckedUpdateWithoutFavoriteRoadMapPointByClientIdInput>
  }

  export type User_ClientUpdateWithoutFavoriteRoadMapPointByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutFavoriteRoadMapPointByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type Travel_Road_MapUpsertWithoutFavoriteRoadMapByRoadMapIdInput = {
    update: XOR<Travel_Road_MapUpdateWithoutFavoriteRoadMapByRoadMapIdInput, Travel_Road_MapUncheckedUpdateWithoutFavoriteRoadMapByRoadMapIdInput>
    create: XOR<Travel_Road_MapCreateWithoutFavoriteRoadMapByRoadMapIdInput, Travel_Road_MapUncheckedCreateWithoutFavoriteRoadMapByRoadMapIdInput>
    where?: Travel_Road_MapWhereInput
  }

  export type Travel_Road_MapUpdateToOneWithWhereWithoutFavoriteRoadMapByRoadMapIdInput = {
    where?: Travel_Road_MapWhereInput
    data: XOR<Travel_Road_MapUpdateWithoutFavoriteRoadMapByRoadMapIdInput, Travel_Road_MapUncheckedUpdateWithoutFavoriteRoadMapByRoadMapIdInput>
  }

  export type Travel_Road_MapUpdateWithoutFavoriteRoadMapByRoadMapIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    userClient?: User_ClientUpdateOneRequiredWithoutTravelRoadMapsNestedInput
    AvaliationRoadMap?: AvaliationRoadMapUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapUncheckedUpdateWithoutFavoriteRoadMapByRoadMapIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    idCreator?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Ponto_TuristicoCreateWithoutUserReportTouristPointByIdTouristPointInput = {
    id?: string
    name: string
    description: string
    creationDate: Date | string
    local: string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    avaliationTouristPoint?: AvaliationTouristPointCreateNestedManyWithoutUserTouristPointByIdTouristPointInput
    commentTouristPointByTouristPointId?: CommentTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    ImageTouristPointByTouristPointId?: ImageTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutPontosTuristicosRelationInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdTouristPointInput
  }

  export type Ponto_TuristicoUncheckedCreateWithoutUserReportTouristPointByIdTouristPointInput = {
    id?: string
    name: string
    description: string
    creationDate: Date | string
    local: string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    avaliationTouristPoint?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByIdTouristPointInput
    commentTouristPointByTouristPointId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutPontosTuristicosRelationInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdTouristPointInput
  }

  export type Ponto_TuristicoCreateOrConnectWithoutUserReportTouristPointByIdTouristPointInput = {
    where: Ponto_TuristicoWhereUniqueInput
    create: XOR<Ponto_TuristicoCreateWithoutUserReportTouristPointByIdTouristPointInput, Ponto_TuristicoUncheckedCreateWithoutUserReportTouristPointByIdTouristPointInput>
  }

  export type User_ClientCreateWithoutUserReportTouristPointByIdUserReportInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutUserReportTouristPointByIdUserReportInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutUserReportTouristPointByIdUserReportInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutUserReportTouristPointByIdUserReportInput, User_ClientUncheckedCreateWithoutUserReportTouristPointByIdUserReportInput>
  }

  export type Ponto_TuristicoUpsertWithoutUserReportTouristPointByIdTouristPointInput = {
    update: XOR<Ponto_TuristicoUpdateWithoutUserReportTouristPointByIdTouristPointInput, Ponto_TuristicoUncheckedUpdateWithoutUserReportTouristPointByIdTouristPointInput>
    create: XOR<Ponto_TuristicoCreateWithoutUserReportTouristPointByIdTouristPointInput, Ponto_TuristicoUncheckedCreateWithoutUserReportTouristPointByIdTouristPointInput>
    where?: Ponto_TuristicoWhereInput
  }

  export type Ponto_TuristicoUpdateToOneWithWhereWithoutUserReportTouristPointByIdTouristPointInput = {
    where?: Ponto_TuristicoWhereInput
    data: XOR<Ponto_TuristicoUpdateWithoutUserReportTouristPointByIdTouristPointInput, Ponto_TuristicoUncheckedUpdateWithoutUserReportTouristPointByIdTouristPointInput>
  }

  export type Ponto_TuristicoUpdateWithoutUserReportTouristPointByIdTouristPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    local?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    avaliationTouristPoint?: AvaliationTouristPointUpdateManyWithoutUserTouristPointByIdTouristPointNestedInput
    commentTouristPointByTouristPointId?: CommentTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutPontosTuristicosRelationNestedInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdTouristPointNestedInput
  }

  export type Ponto_TuristicoUncheckedUpdateWithoutUserReportTouristPointByIdTouristPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    local?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    avaliationTouristPoint?: AvaliationTouristPointUncheckedUpdateManyWithoutUserTouristPointByIdTouristPointNestedInput
    commentTouristPointByTouristPointId?: CommentTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutPontosTuristicosRelationNestedInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdTouristPointNestedInput
  }

  export type User_ClientUpsertWithoutUserReportTouristPointByIdUserReportInput = {
    update: XOR<User_ClientUpdateWithoutUserReportTouristPointByIdUserReportInput, User_ClientUncheckedUpdateWithoutUserReportTouristPointByIdUserReportInput>
    create: XOR<User_ClientCreateWithoutUserReportTouristPointByIdUserReportInput, User_ClientUncheckedCreateWithoutUserReportTouristPointByIdUserReportInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutUserReportTouristPointByIdUserReportInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutUserReportTouristPointByIdUserReportInput, User_ClientUncheckedUpdateWithoutUserReportTouristPointByIdUserReportInput>
  }

  export type User_ClientUpdateWithoutUserReportTouristPointByIdUserReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutUserReportTouristPointByIdUserReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
  }

  export type Ponto_ComercialCreateWithoutReportCommercialPointByIdCommercialPointInput = {
    id?: string
    name: string
    description: string
    local: string
    creationDate: Date | string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    User_Business: User_BusinessCreateNestedOneWithoutPontosComerciaisInput
    avaliationCommercialPoint?: AvaliationCommercialPointCreateNestedManyWithoutUserCommercialPointByIdCommercialPointInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutPontosComerciaisRelationInput
  }

  export type Ponto_ComercialUncheckedCreateWithoutReportCommercialPointByIdCommercialPointInput = {
    id?: string
    name: string
    description: string
    local: string
    creationDate: Date | string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    businessId: string
    avaliationCommercialPoint?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByIdCommercialPointInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUncheckedCreateNestedManyWithoutUserCommercialPointByCommercialPointIdInput
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutPontosComerciaisRelationInput
  }

  export type Ponto_ComercialCreateOrConnectWithoutReportCommercialPointByIdCommercialPointInput = {
    where: Ponto_ComercialWhereUniqueInput
    create: XOR<Ponto_ComercialCreateWithoutReportCommercialPointByIdCommercialPointInput, Ponto_ComercialUncheckedCreateWithoutReportCommercialPointByIdCommercialPointInput>
  }

  export type User_ClientCreateWithoutUserReportCommercialPointByIdUserReportInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutUserReportCommercialPointByIdUserReportInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutUserReportCommercialPointByIdUserReportInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutUserReportCommercialPointByIdUserReportInput, User_ClientUncheckedCreateWithoutUserReportCommercialPointByIdUserReportInput>
  }

  export type Ponto_ComercialUpsertWithoutReportCommercialPointByIdCommercialPointInput = {
    update: XOR<Ponto_ComercialUpdateWithoutReportCommercialPointByIdCommercialPointInput, Ponto_ComercialUncheckedUpdateWithoutReportCommercialPointByIdCommercialPointInput>
    create: XOR<Ponto_ComercialCreateWithoutReportCommercialPointByIdCommercialPointInput, Ponto_ComercialUncheckedCreateWithoutReportCommercialPointByIdCommercialPointInput>
    where?: Ponto_ComercialWhereInput
  }

  export type Ponto_ComercialUpdateToOneWithWhereWithoutReportCommercialPointByIdCommercialPointInput = {
    where?: Ponto_ComercialWhereInput
    data: XOR<Ponto_ComercialUpdateWithoutReportCommercialPointByIdCommercialPointInput, Ponto_ComercialUncheckedUpdateWithoutReportCommercialPointByIdCommercialPointInput>
  }

  export type Ponto_ComercialUpdateWithoutReportCommercialPointByIdCommercialPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    User_Business?: User_BusinessUpdateOneRequiredWithoutPontosComerciaisNestedInput
    avaliationCommercialPoint?: AvaliationCommercialPointUpdateManyWithoutUserCommercialPointByIdCommercialPointNestedInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutPontosComerciaisRelationNestedInput
  }

  export type Ponto_ComercialUncheckedUpdateWithoutReportCommercialPointByIdCommercialPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    businessId?: StringFieldUpdateOperationsInput | string
    avaliationCommercialPoint?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByIdCommercialPointNestedInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutPontosComerciaisRelationNestedInput
  }

  export type User_ClientUpsertWithoutUserReportCommercialPointByIdUserReportInput = {
    update: XOR<User_ClientUpdateWithoutUserReportCommercialPointByIdUserReportInput, User_ClientUncheckedUpdateWithoutUserReportCommercialPointByIdUserReportInput>
    create: XOR<User_ClientCreateWithoutUserReportCommercialPointByIdUserReportInput, User_ClientUncheckedCreateWithoutUserReportCommercialPointByIdUserReportInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutUserReportCommercialPointByIdUserReportInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutUserReportCommercialPointByIdUserReportInput, User_ClientUncheckedUpdateWithoutUserReportCommercialPointByIdUserReportInput>
  }

  export type User_ClientUpdateWithoutUserReportCommercialPointByIdUserReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutUserReportCommercialPointByIdUserReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type Travel_Road_MapCreateWithoutUserReportRoadMapByIdRoadMapInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    userClient: User_ClientCreateNestedOneWithoutTravelRoadMapsInput
    AvaliationRoadMap?: AvaliationRoadMapCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityCreateNestedManyWithoutRoadMapRelationInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapUncheckedCreateWithoutUserReportRoadMapByIdRoadMapInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    idCreator: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryUncheckedCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityUncheckedCreateNestedManyWithoutRoadMapRelationInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapCreateOrConnectWithoutUserReportRoadMapByIdRoadMapInput = {
    where: Travel_Road_MapWhereUniqueInput
    create: XOR<Travel_Road_MapCreateWithoutUserReportRoadMapByIdRoadMapInput, Travel_Road_MapUncheckedCreateWithoutUserReportRoadMapByIdRoadMapInput>
  }

  export type User_ClientCreateWithoutUserReportRoadMapByIdUserReportInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutUserReportRoadMapByIdUserReportInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutUserReportRoadMapByIdUserReportInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutUserReportRoadMapByIdUserReportInput, User_ClientUncheckedCreateWithoutUserReportRoadMapByIdUserReportInput>
  }

  export type Travel_Road_MapUpsertWithoutUserReportRoadMapByIdRoadMapInput = {
    update: XOR<Travel_Road_MapUpdateWithoutUserReportRoadMapByIdRoadMapInput, Travel_Road_MapUncheckedUpdateWithoutUserReportRoadMapByIdRoadMapInput>
    create: XOR<Travel_Road_MapCreateWithoutUserReportRoadMapByIdRoadMapInput, Travel_Road_MapUncheckedCreateWithoutUserReportRoadMapByIdRoadMapInput>
    where?: Travel_Road_MapWhereInput
  }

  export type Travel_Road_MapUpdateToOneWithWhereWithoutUserReportRoadMapByIdRoadMapInput = {
    where?: Travel_Road_MapWhereInput
    data: XOR<Travel_Road_MapUpdateWithoutUserReportRoadMapByIdRoadMapInput, Travel_Road_MapUncheckedUpdateWithoutUserReportRoadMapByIdRoadMapInput>
  }

  export type Travel_Road_MapUpdateWithoutUserReportRoadMapByIdRoadMapInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    userClient?: User_ClientUpdateOneRequiredWithoutTravelRoadMapsNestedInput
    AvaliationRoadMap?: AvaliationRoadMapUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUpdateManyWithoutRoadMapRelationNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapUncheckedUpdateWithoutUserReportRoadMapByIdRoadMapInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    idCreator?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type User_ClientUpsertWithoutUserReportRoadMapByIdUserReportInput = {
    update: XOR<User_ClientUpdateWithoutUserReportRoadMapByIdUserReportInput, User_ClientUncheckedUpdateWithoutUserReportRoadMapByIdUserReportInput>
    create: XOR<User_ClientCreateWithoutUserReportRoadMapByIdUserReportInput, User_ClientUncheckedCreateWithoutUserReportRoadMapByIdUserReportInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutUserReportRoadMapByIdUserReportInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutUserReportRoadMapByIdUserReportInput, User_ClientUncheckedUpdateWithoutUserReportRoadMapByIdUserReportInput>
  }

  export type User_ClientUpdateWithoutUserReportRoadMapByIdUserReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutUserReportRoadMapByIdUserReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientCreateWithoutUserNotificationRoadMapByIdClientInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutUserNotificationRoadMapByIdClientInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedCreateNestedManyWithoutUserNotificationTouristPointByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutUserNotificationRoadMapByIdClientInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutUserNotificationRoadMapByIdClientInput, User_ClientUncheckedCreateWithoutUserNotificationRoadMapByIdClientInput>
  }

  export type Travel_Road_MapCreateWithoutUserNotificationRoadMapByIdRoadMapInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    userClient: User_ClientCreateNestedOneWithoutTravelRoadMapsInput
    AvaliationRoadMap?: AvaliationRoadMapCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapUncheckedCreateWithoutUserNotificationRoadMapByIdRoadMapInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    idCreator: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByIdRoadMapInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserRoadMapPointByRoadMapIdInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedCreateNestedManyWithoutUserRoadMapByRoadMapIdInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedCreateNestedManyWithoutRoadMapRelationInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CountryRelation?: CountryUncheckedCreateNestedManyWithoutRoadMapRelationInput
    StateRelation?: StateUncheckedCreateNestedManyWithoutRoadMapRelationInput
    CityRelation?: CityUncheckedCreateNestedManyWithoutRoadMapRelationInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdRoadMapInput
  }

  export type Travel_Road_MapCreateOrConnectWithoutUserNotificationRoadMapByIdRoadMapInput = {
    where: Travel_Road_MapWhereUniqueInput
    create: XOR<Travel_Road_MapCreateWithoutUserNotificationRoadMapByIdRoadMapInput, Travel_Road_MapUncheckedCreateWithoutUserNotificationRoadMapByIdRoadMapInput>
  }

  export type User_ClientUpsertWithoutUserNotificationRoadMapByIdClientInput = {
    update: XOR<User_ClientUpdateWithoutUserNotificationRoadMapByIdClientInput, User_ClientUncheckedUpdateWithoutUserNotificationRoadMapByIdClientInput>
    create: XOR<User_ClientCreateWithoutUserNotificationRoadMapByIdClientInput, User_ClientUncheckedCreateWithoutUserNotificationRoadMapByIdClientInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutUserNotificationRoadMapByIdClientInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutUserNotificationRoadMapByIdClientInput, User_ClientUncheckedUpdateWithoutUserNotificationRoadMapByIdClientInput>
  }

  export type User_ClientUpdateWithoutUserNotificationRoadMapByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutUserNotificationRoadMapByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationTouristPointByIdClient?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type Travel_Road_MapUpsertWithoutUserNotificationRoadMapByIdRoadMapInput = {
    update: XOR<Travel_Road_MapUpdateWithoutUserNotificationRoadMapByIdRoadMapInput, Travel_Road_MapUncheckedUpdateWithoutUserNotificationRoadMapByIdRoadMapInput>
    create: XOR<Travel_Road_MapCreateWithoutUserNotificationRoadMapByIdRoadMapInput, Travel_Road_MapUncheckedCreateWithoutUserNotificationRoadMapByIdRoadMapInput>
    where?: Travel_Road_MapWhereInput
  }

  export type Travel_Road_MapUpdateToOneWithWhereWithoutUserNotificationRoadMapByIdRoadMapInput = {
    where?: Travel_Road_MapWhereInput
    data: XOR<Travel_Road_MapUpdateWithoutUserNotificationRoadMapByIdRoadMapInput, Travel_Road_MapUncheckedUpdateWithoutUserNotificationRoadMapByIdRoadMapInput>
  }

  export type Travel_Road_MapUpdateWithoutUserNotificationRoadMapByIdRoadMapInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    userClient?: User_ClientUpdateOneRequiredWithoutTravelRoadMapsNestedInput
    AvaliationRoadMap?: AvaliationRoadMapUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapUncheckedUpdateWithoutUserNotificationRoadMapByIdRoadMapInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    idCreator?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
  }

  export type User_ClientCreateWithoutUserNotificationTouristPointByIdClientInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationRoadMapByIdClient?: notificationRoadMapCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientUncheckedCreateWithoutUserNotificationTouristPointByIdClientInput = {
    id?: string
    name: string
    email: string
    password: string
    userImageUrl?: string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    travelRoadMaps?: Travel_Road_MapUncheckedCreateNestedManyWithoutUserClientInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByEmailInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByEmailClientInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedCreateNestedManyWithoutUserClientByIdClientInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientEmailInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedCreateNestedManyWithoutUserClientByClientIdInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedCreateNestedManyWithoutUserNotificationRoadMapByIdClientInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedCreateNestedManyWithoutUserReportRoadMapByIdUserReportInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedCreateNestedManyWithoutUserReportCommercialPointByIdUserReportInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdUserReportInput
  }

  export type User_ClientCreateOrConnectWithoutUserNotificationTouristPointByIdClientInput = {
    where: User_ClientWhereUniqueInput
    create: XOR<User_ClientCreateWithoutUserNotificationTouristPointByIdClientInput, User_ClientUncheckedCreateWithoutUserNotificationTouristPointByIdClientInput>
  }

  export type Ponto_TuristicoCreateWithoutUserNotificationTouristPointByIdTouristPointInput = {
    id?: string
    name: string
    description: string
    creationDate: Date | string
    local: string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    avaliationTouristPoint?: AvaliationTouristPointCreateNestedManyWithoutUserTouristPointByIdTouristPointInput
    commentTouristPointByTouristPointId?: CommentTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    ImageTouristPointByTouristPointId?: ImageTouristPointCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    RoadMapRelation?: Travel_Road_MapCreateNestedManyWithoutPontosTuristicosRelationInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointCreateNestedManyWithoutUserReportTouristPointByIdTouristPointInput
  }

  export type Ponto_TuristicoUncheckedCreateWithoutUserNotificationTouristPointByIdTouristPointInput = {
    id?: string
    name: string
    description: string
    creationDate: Date | string
    local: string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
    avaliationTouristPoint?: AvaliationTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByIdTouristPointInput
    commentTouristPointByTouristPointId?: CommentTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUncheckedCreateNestedManyWithoutUserTouristPointByTouristPointIdInput
    RoadMapRelation?: Travel_Road_MapUncheckedCreateNestedManyWithoutPontosTuristicosRelationInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUncheckedCreateNestedManyWithoutUserReportTouristPointByIdTouristPointInput
  }

  export type Ponto_TuristicoCreateOrConnectWithoutUserNotificationTouristPointByIdTouristPointInput = {
    where: Ponto_TuristicoWhereUniqueInput
    create: XOR<Ponto_TuristicoCreateWithoutUserNotificationTouristPointByIdTouristPointInput, Ponto_TuristicoUncheckedCreateWithoutUserNotificationTouristPointByIdTouristPointInput>
  }

  export type User_ClientUpsertWithoutUserNotificationTouristPointByIdClientInput = {
    update: XOR<User_ClientUpdateWithoutUserNotificationTouristPointByIdClientInput, User_ClientUncheckedUpdateWithoutUserNotificationTouristPointByIdClientInput>
    create: XOR<User_ClientCreateWithoutUserNotificationTouristPointByIdClientInput, User_ClientUncheckedCreateWithoutUserNotificationTouristPointByIdClientInput>
    where?: User_ClientWhereInput
  }

  export type User_ClientUpdateToOneWithWhereWithoutUserNotificationTouristPointByIdClientInput = {
    where?: User_ClientWhereInput
    data: XOR<User_ClientUpdateWithoutUserNotificationTouristPointByIdClientInput, User_ClientUncheckedUpdateWithoutUserNotificationTouristPointByIdClientInput>
  }

  export type User_ClientUpdateWithoutUserNotificationTouristPointByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type User_ClientUncheckedUpdateWithoutUserNotificationTouristPointByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    avaliationsByEmailClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationsRoadMapByIdClient?: AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    travelRoadMaps?: Travel_Road_MapUncheckedUpdateManyWithoutUserClientNestedInput
    avaliationTouristPointByUserClientEmail?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailNestedInput
    avaliationTouristPointByIdCreator?: AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    avaliationCommercialPointByUserClientEmail?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientNestedInput
    avaliationCommercialPointByIdCreator?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientNestedInput
    commentRoadMapByClientEmail?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentRoadMapByClientId?: CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentTouristPointByClientEmail?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentTouristPointByClientId?: CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    commentCommercialPointByClientEmail?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailNestedInput
    commentCommercialPointByClientId?: CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteCommercialPointByClientId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteTouristPointPointByClientId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    FavoriteRoadMapPointByClientId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdNestedInput
    userNotificationRoadMapByIdClient?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientNestedInput
    userReportRoadMapByIdUserReport?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportNestedInput
    userReportCommercialPointByIdUserReport?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportNestedInput
    userReportTouristPointByIdUserReport?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type Ponto_TuristicoUpsertWithoutUserNotificationTouristPointByIdTouristPointInput = {
    update: XOR<Ponto_TuristicoUpdateWithoutUserNotificationTouristPointByIdTouristPointInput, Ponto_TuristicoUncheckedUpdateWithoutUserNotificationTouristPointByIdTouristPointInput>
    create: XOR<Ponto_TuristicoCreateWithoutUserNotificationTouristPointByIdTouristPointInput, Ponto_TuristicoUncheckedCreateWithoutUserNotificationTouristPointByIdTouristPointInput>
    where?: Ponto_TuristicoWhereInput
  }

  export type Ponto_TuristicoUpdateToOneWithWhereWithoutUserNotificationTouristPointByIdTouristPointInput = {
    where?: Ponto_TuristicoWhereInput
    data: XOR<Ponto_TuristicoUpdateWithoutUserNotificationTouristPointByIdTouristPointInput, Ponto_TuristicoUncheckedUpdateWithoutUserNotificationTouristPointByIdTouristPointInput>
  }

  export type Ponto_TuristicoUpdateWithoutUserNotificationTouristPointByIdTouristPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    local?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    avaliationTouristPoint?: AvaliationTouristPointUpdateManyWithoutUserTouristPointByIdTouristPointNestedInput
    commentTouristPointByTouristPointId?: CommentTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutPontosTuristicosRelationNestedInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdTouristPointNestedInput
  }

  export type Ponto_TuristicoUncheckedUpdateWithoutUserNotificationTouristPointByIdTouristPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    local?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    avaliationTouristPoint?: AvaliationTouristPointUncheckedUpdateManyWithoutUserTouristPointByIdTouristPointNestedInput
    commentTouristPointByTouristPointId?: CommentTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutPontosTuristicosRelationNestedInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdTouristPointNestedInput
  }

  export type AvaliationRoadMapCreateManyUserClientByEmailInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    idUserClient: string
    idTravelRoadMap: string
  }

  export type AvaliationRoadMapCreateManyUserClientByIdClientInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientEmail: string
    idTravelRoadMap: string
  }

  export type Travel_Road_MapCreateManyUserClientInput = {
    id?: string
    title: string
    dataPublication?: Date | string | null
    description: string
    avaliationValue?: number
    isPublished?: boolean
    userImageUrl?: string | null
    reportNumber?: number
  }

  export type AvaliationTouristPointCreateManyUserClientByEmailInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    idUserClient: string
    idTouristPoint: string
  }

  export type AvaliationTouristPointCreateManyUserClientByIdClientInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientEmail: string
    idTouristPoint: string
  }

  export type AvaliationCommercialPointCreateManyUserClientByEmailClientInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    idUserClient: string
    idCommercialPoint: string
  }

  export type AvaliationCommercialPointCreateManyUserClientByIdClientInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientEmail: string
    idCommercialPoint: string
  }

  export type CommentRoadMapCreateManyUserClientByClientEmailInput = {
    id?: string
    dataPublication: Date | string
    content: string
    idUserClient: string
    idTravelRoadMap: string
  }

  export type CommentRoadMapCreateManyUserClientByClientIdInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientEmail: string
    idTravelRoadMap: string
  }

  export type CommentTouristPointCreateManyUserClientByClientEmailInput = {
    id?: string
    dataPublication: Date | string
    content: string
    idUserClient: string
    idTouristPoint: string
  }

  export type CommentTouristPointCreateManyUserClientByClientIdInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientEmail: string
    idTouristPoint: string
  }

  export type CommentCommercialPointCreateManyUserClientByClientEmailInput = {
    id?: string
    dataPublication: Date | string
    content: string
    idUserClient: string
    idCommercialPoint: string
  }

  export type CommentCommercialPointCreateManyUserClientByClientIdInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientEmail: string
    idCommercialPoint: string
  }

  export type FavoriteCommercialPointCreateManyUserClientByClientIdInput = {
    id?: string
    Favorite?: boolean
    idCommercialPoint: string
  }

  export type FavoriteTouristPointCreateManyUserClientByClientIdInput = {
    id?: string
    Favorite?: boolean
    idTouristPoint: string
  }

  export type FavoriteRoadMapCreateManyUserClientByClientIdInput = {
    id?: string
    Favorite?: boolean
    idRoadMap: string
  }

  export type notificationTouristPointCreateManyUserNotificationTouristPointByIdClientInput = {
    id?: string
    idTouristPoint: string
  }

  export type notificationRoadMapCreateManyUserNotificationRoadMapByIdClientInput = {
    id?: string
    idRoadMap: string
  }

  export type reportRoadMapCreateManyUserReportRoadMapByIdUserReportInput = {
    id?: string
    content: string
    idRoadMap: string
  }

  export type reportCommercialPointCreateManyUserReportCommercialPointByIdUserReportInput = {
    id?: string
    content: string
    idCommercialPoint: string
  }

  export type reportTouristPointCreateManyUserReportTouristPointByIdUserReportInput = {
    id?: string
    content: string
    idTouristPoint: string
  }

  export type AvaliationRoadMapUpdateWithoutUserClientByEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientByIdClient?: User_ClientUpdateOneRequiredWithoutAvaliationsRoadMapByIdClientNestedInput
    userRoadMapByIdRoadMap?: Travel_Road_MapUpdateOneRequiredWithoutAvaliationRoadMapNestedInput
  }

  export type AvaliationRoadMapUncheckedUpdateWithoutUserClientByEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    idUserClient?: StringFieldUpdateOperationsInput | string
    idTravelRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    idUserClient?: StringFieldUpdateOperationsInput | string
    idTravelRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationRoadMapUpdateWithoutUserClientByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientByEmail?: User_ClientUpdateOneRequiredWithoutAvaliationsByEmailClientNestedInput
    userRoadMapByIdRoadMap?: Travel_Road_MapUpdateOneRequiredWithoutAvaliationRoadMapNestedInput
  }

  export type AvaliationRoadMapUncheckedUpdateWithoutUserClientByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idTravelRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationRoadMapUncheckedUpdateManyWithoutUserClientByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idTravelRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type Travel_Road_MapUpdateWithoutUserClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    AvaliationRoadMap?: AvaliationRoadMapUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapUncheckedUpdateWithoutUserClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapUncheckedUpdateManyWithoutUserClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
  }

  export type AvaliationTouristPointUpdateWithoutUserClientByEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientByIdClient?: User_ClientUpdateOneRequiredWithoutAvaliationTouristPointByIdCreatorNestedInput
    userTouristPointByIdTouristPoint?: Ponto_TuristicoUpdateOneRequiredWithoutAvaliationTouristPointNestedInput
  }

  export type AvaliationTouristPointUncheckedUpdateWithoutUserClientByEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    idUserClient?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    idUserClient?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationTouristPointUpdateWithoutUserClientByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientByEmail?: User_ClientUpdateOneRequiredWithoutAvaliationTouristPointByUserClientEmailNestedInput
    userTouristPointByIdTouristPoint?: Ponto_TuristicoUpdateOneRequiredWithoutAvaliationTouristPointNestedInput
  }

  export type AvaliationTouristPointUncheckedUpdateWithoutUserClientByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationTouristPointUncheckedUpdateManyWithoutUserClientByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationCommercialPointUpdateWithoutUserClientByEmailClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientByIdClient?: User_ClientUpdateOneRequiredWithoutAvaliationCommercialPointByIdCreatorNestedInput
    userCommercialPointByIdCommercialPoint?: Ponto_ComercialUpdateOneRequiredWithoutAvaliationCommercialPointNestedInput
  }

  export type AvaliationCommercialPointUncheckedUpdateWithoutUserClientByEmailClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    idUserClient?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByEmailClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    idUserClient?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationCommercialPointUpdateWithoutUserClientByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientByEmailClient?: User_ClientUpdateOneRequiredWithoutAvaliationCommercialPointByUserClientEmailNestedInput
    userCommercialPointByIdCommercialPoint?: Ponto_ComercialUpdateOneRequiredWithoutAvaliationCommercialPointNestedInput
  }

  export type AvaliationCommercialPointUncheckedUpdateWithoutUserClientByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationCommercialPointUncheckedUpdateManyWithoutUserClientByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type CommentRoadMapUpdateWithoutUserClientByClientEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientByClientId?: User_ClientUpdateOneRequiredWithoutCommentRoadMapByClientIdNestedInput
    userRoadMapByRoadMapId?: Travel_Road_MapUpdateOneRequiredWithoutCommentRoadMapByRoadMapIdNestedInput
  }

  export type CommentRoadMapUncheckedUpdateWithoutUserClientByClientEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
    idTravelRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
    idTravelRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type CommentRoadMapUpdateWithoutUserClientByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientByClientEmail?: User_ClientUpdateOneRequiredWithoutCommentRoadMapByClientEmailNestedInput
    userRoadMapByRoadMapId?: Travel_Road_MapUpdateOneRequiredWithoutCommentRoadMapByRoadMapIdNestedInput
  }

  export type CommentRoadMapUncheckedUpdateWithoutUserClientByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idTravelRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type CommentRoadMapUncheckedUpdateManyWithoutUserClientByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idTravelRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type CommentTouristPointUpdateWithoutUserClientByClientEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientByClientId?: User_ClientUpdateOneRequiredWithoutCommentTouristPointByClientIdNestedInput
    userTouristPointByTouristPointId?: Ponto_TuristicoUpdateOneRequiredWithoutCommentTouristPointByTouristPointIdNestedInput
  }

  export type CommentTouristPointUncheckedUpdateWithoutUserClientByClientEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type CommentTouristPointUpdateWithoutUserClientByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientByClientEmail?: User_ClientUpdateOneRequiredWithoutCommentTouristPointByClientEmailNestedInput
    userTouristPointByTouristPointId?: Ponto_TuristicoUpdateOneRequiredWithoutCommentTouristPointByTouristPointIdNestedInput
  }

  export type CommentTouristPointUncheckedUpdateWithoutUserClientByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type CommentTouristPointUncheckedUpdateManyWithoutUserClientByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type CommentCommercialPointUpdateWithoutUserClientByClientEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientByClientId?: User_ClientUpdateOneRequiredWithoutCommentCommercialPointByClientIdNestedInput
    userCommercialPointByCommercialPointId?: Ponto_ComercialUpdateOneRequiredWithoutCommentCommercialPointByCommercialPointIdNestedInput
  }

  export type CommentCommercialPointUncheckedUpdateWithoutUserClientByClientEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientEmailInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type CommentCommercialPointUpdateWithoutUserClientByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientByClientEmail?: User_ClientUpdateOneRequiredWithoutCommentCommercialPointByClientEmailNestedInput
    userCommercialPointByCommercialPointId?: Ponto_ComercialUpdateOneRequiredWithoutCommentCommercialPointByCommercialPointIdNestedInput
  }

  export type CommentCommercialPointUncheckedUpdateWithoutUserClientByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type CommentCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteCommercialPointUpdateWithoutUserClientByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    userCommercialPointByCommercialPointId?: Ponto_ComercialUpdateOneRequiredWithoutFavoriteCommercialPointByCommercialPointIdNestedInput
  }

  export type FavoriteCommercialPointUncheckedUpdateWithoutUserClientByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteCommercialPointUncheckedUpdateManyWithoutUserClientByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteTouristPointUpdateWithoutUserClientByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    userTouristPointByTouristPointId?: Ponto_TuristicoUpdateOneRequiredWithoutFavoriteTouristPointByTouristPointIdNestedInput
  }

  export type FavoriteTouristPointUncheckedUpdateWithoutUserClientByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteTouristPointUncheckedUpdateManyWithoutUserClientByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteRoadMapUpdateWithoutUserClientByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    userRoadMapPointByRoadMapId?: Travel_Road_MapUpdateOneRequiredWithoutFavoriteRoadMapByRoadMapIdNestedInput
  }

  export type FavoriteRoadMapUncheckedUpdateWithoutUserClientByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    idRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteRoadMapUncheckedUpdateManyWithoutUserClientByClientIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    idRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type notificationTouristPointUpdateWithoutUserNotificationTouristPointByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    userNotificationTouristPointByIdTouristPoint?: Ponto_TuristicoUpdateOneRequiredWithoutUserNotificationTouristPointByIdTouristPointNestedInput
  }

  export type notificationTouristPointUncheckedUpdateWithoutUserNotificationTouristPointByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type notificationRoadMapUpdateWithoutUserNotificationRoadMapByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    userNotificationRoadMapByIdRoadMap?: Travel_Road_MapUpdateOneRequiredWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type notificationRoadMapUncheckedUpdateWithoutUserNotificationRoadMapByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    idRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    idRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type reportRoadMapUpdateWithoutUserReportRoadMapByIdUserReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    userReportRoadMapByIdRoadMap?: Travel_Road_MapUpdateOneRequiredWithoutUserReportRoadMapByIdRoadMapNestedInput
  }

  export type reportRoadMapUncheckedUpdateWithoutUserReportRoadMapByIdUserReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    idRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdUserReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    idRoadMap?: StringFieldUpdateOperationsInput | string
  }

  export type reportCommercialPointUpdateWithoutUserReportCommercialPointByIdUserReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    userReportCommercialPointByIdCommercialPoint?: Ponto_ComercialUpdateOneRequiredWithoutReportCommercialPointByIdCommercialPointNestedInput
  }

  export type reportCommercialPointUncheckedUpdateWithoutUserReportCommercialPointByIdUserReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdUserReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    idCommercialPoint?: StringFieldUpdateOperationsInput | string
  }

  export type reportTouristPointUpdateWithoutUserReportTouristPointByIdUserReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    userReportTouristPointByIdTouristPoint?: Ponto_TuristicoUpdateOneRequiredWithoutUserReportTouristPointByIdTouristPointNestedInput
  }

  export type reportTouristPointUncheckedUpdateWithoutUserReportTouristPointByIdUserReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdUserReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    idTouristPoint?: StringFieldUpdateOperationsInput | string
  }

  export type Ponto_ComercialCreateManyUser_BusinessInput = {
    id?: string
    name: string
    description: string
    local: string
    creationDate: Date | string
    userImageUrl?: string | null
    reportNumber?: number
    isPublished?: boolean
  }

  export type Ponto_ComercialUpdateWithoutUser_BusinessInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    avaliationCommercialPoint?: AvaliationCommercialPointUpdateManyWithoutUserCommercialPointByIdCommercialPointNestedInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutPontosComerciaisRelationNestedInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdCommercialPointNestedInput
  }

  export type Ponto_ComercialUncheckedUpdateWithoutUser_BusinessInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    avaliationCommercialPoint?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByIdCommercialPointNestedInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutPontosComerciaisRelationNestedInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdCommercialPointNestedInput
  }

  export type Ponto_ComercialUncheckedUpdateManyWithoutUser_BusinessInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AvaliationCommercialPointCreateManyUserCommercialPointByIdCommercialPointInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientEmail: string
    idUserClient: string
  }

  export type CommentCommercialPointCreateManyUserCommercialPointByCommercialPointIdInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientEmail: string
    idUserClient: string
  }

  export type FavoriteCommercialPointCreateManyUserCommercialPointByCommercialPointIdInput = {
    id?: string
    Favorite?: boolean
    idUserClient: string
  }

  export type ImageCommercialPointCreateManyUserCommercialPointByCommercialPointIdInput = {
    id?: string
    image: string
  }

  export type reportCommercialPointCreateManyUserReportCommercialPointByIdCommercialPointInput = {
    id?: string
    content: string
    idUserReport: string
  }

  export type AvaliationCommercialPointUpdateWithoutUserCommercialPointByIdCommercialPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientByEmailClient?: User_ClientUpdateOneRequiredWithoutAvaliationCommercialPointByUserClientEmailNestedInput
    userClientByIdClient?: User_ClientUpdateOneRequiredWithoutAvaliationCommercialPointByIdCreatorNestedInput
  }

  export type AvaliationCommercialPointUncheckedUpdateWithoutUserCommercialPointByIdCommercialPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByIdCommercialPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
  }

  export type CommentCommercialPointUpdateWithoutUserCommercialPointByCommercialPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientByClientEmail?: User_ClientUpdateOneRequiredWithoutCommentCommercialPointByClientEmailNestedInput
    userClientByClientId?: User_ClientUpdateOneRequiredWithoutCommentCommercialPointByClientIdNestedInput
  }

  export type CommentCommercialPointUncheckedUpdateWithoutUserCommercialPointByCommercialPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
  }

  export type CommentCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteCommercialPointUpdateWithoutUserCommercialPointByCommercialPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    userClientByClientId?: User_ClientUpdateOneRequiredWithoutFavoriteCommercialPointByClientIdNestedInput
  }

  export type FavoriteCommercialPointUncheckedUpdateWithoutUserCommercialPointByCommercialPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    idUserClient?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    idUserClient?: StringFieldUpdateOperationsInput | string
  }

  export type ImageCommercialPointUpdateWithoutUserCommercialPointByCommercialPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
  }

  export type ImageCommercialPointUncheckedUpdateWithoutUserCommercialPointByCommercialPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
  }

  export type ImageCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
  }

  export type Travel_Road_MapUpdateWithoutPontosComerciaisRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    userClient?: User_ClientUpdateOneRequiredWithoutTravelRoadMapsNestedInput
    AvaliationRoadMap?: AvaliationRoadMapUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapUncheckedUpdateWithoutPontosComerciaisRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    idCreator?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapUncheckedUpdateManyWithoutPontosComerciaisRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    idCreator?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
  }

  export type reportCommercialPointUpdateWithoutUserReportCommercialPointByIdCommercialPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    userReportCommercialPointByIdUserReport?: User_ClientUpdateOneRequiredWithoutUserReportCommercialPointByIdUserReportNestedInput
  }

  export type reportCommercialPointUncheckedUpdateWithoutUserReportCommercialPointByIdCommercialPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    idUserReport?: StringFieldUpdateOperationsInput | string
  }

  export type reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdCommercialPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    idUserReport?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationTouristPointCreateManyUserTouristPointByIdTouristPointInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientEmail: string
    idUserClient: string
  }

  export type CommentTouristPointCreateManyUserTouristPointByTouristPointIdInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientEmail: string
    idUserClient: string
  }

  export type FavoriteTouristPointCreateManyUserTouristPointByTouristPointIdInput = {
    id?: string
    Favorite?: boolean
    idUserClient: string
  }

  export type ImageTouristPointCreateManyUserTouristPointByTouristPointIdInput = {
    id?: string
    image: string
  }

  export type reportTouristPointCreateManyUserReportTouristPointByIdTouristPointInput = {
    id?: string
    content: string
    idUserReport: string
  }

  export type notificationTouristPointCreateManyUserNotificationTouristPointByIdTouristPointInput = {
    id?: string
    idClient: string
  }

  export type AvaliationTouristPointUpdateWithoutUserTouristPointByIdTouristPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientByEmail?: User_ClientUpdateOneRequiredWithoutAvaliationTouristPointByUserClientEmailNestedInput
    userClientByIdClient?: User_ClientUpdateOneRequiredWithoutAvaliationTouristPointByIdCreatorNestedInput
  }

  export type AvaliationTouristPointUncheckedUpdateWithoutUserTouristPointByIdTouristPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationTouristPointUncheckedUpdateManyWithoutUserTouristPointByIdTouristPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
  }

  export type CommentTouristPointUpdateWithoutUserTouristPointByTouristPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientByClientEmail?: User_ClientUpdateOneRequiredWithoutCommentTouristPointByClientEmailNestedInput
    userClientByClientId?: User_ClientUpdateOneRequiredWithoutCommentTouristPointByClientIdNestedInput
  }

  export type CommentTouristPointUncheckedUpdateWithoutUserTouristPointByTouristPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
  }

  export type CommentTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteTouristPointUpdateWithoutUserTouristPointByTouristPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    userClientByClientId?: User_ClientUpdateOneRequiredWithoutFavoriteTouristPointPointByClientIdNestedInput
  }

  export type FavoriteTouristPointUncheckedUpdateWithoutUserTouristPointByTouristPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    idUserClient?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    idUserClient?: StringFieldUpdateOperationsInput | string
  }

  export type ImageTouristPointUpdateWithoutUserTouristPointByTouristPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
  }

  export type ImageTouristPointUncheckedUpdateWithoutUserTouristPointByTouristPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
  }

  export type ImageTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
  }

  export type Travel_Road_MapUpdateWithoutPontosTuristicosRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    userClient?: User_ClientUpdateOneRequiredWithoutTravelRoadMapsNestedInput
    AvaliationRoadMap?: AvaliationRoadMapUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapUncheckedUpdateWithoutPontosTuristicosRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    idCreator?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapUncheckedUpdateManyWithoutPontosTuristicosRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    idCreator?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
  }

  export type reportTouristPointUpdateWithoutUserReportTouristPointByIdTouristPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    userReportTouristPointByIdUserReport?: User_ClientUpdateOneRequiredWithoutUserReportTouristPointByIdUserReportNestedInput
  }

  export type reportTouristPointUncheckedUpdateWithoutUserReportTouristPointByIdTouristPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    idUserReport?: StringFieldUpdateOperationsInput | string
  }

  export type reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdTouristPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    idUserReport?: StringFieldUpdateOperationsInput | string
  }

  export type notificationTouristPointUpdateWithoutUserNotificationTouristPointByIdTouristPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    userNotificationTouristPointByIdClient?: User_ClientUpdateOneRequiredWithoutUserNotificationTouristPointByIdClientNestedInput
  }

  export type notificationTouristPointUncheckedUpdateWithoutUserNotificationTouristPointByIdTouristPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    idClient?: StringFieldUpdateOperationsInput | string
  }

  export type notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdTouristPointInput = {
    id?: StringFieldUpdateOperationsInput | string
    idClient?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationRoadMapCreateManyUserRoadMapByIdRoadMapInput = {
    id?: string
    dataPublication: Date | string
    avaliation: number
    userClientEmail: string
    idUserClient: string
  }

  export type CommentRoadMapCreateManyUserRoadMapByRoadMapIdInput = {
    id?: string
    dataPublication: Date | string
    content: string
    userClientEmail: string
    idUserClient: string
  }

  export type FavoriteRoadMapCreateManyUserRoadMapPointByRoadMapIdInput = {
    id?: string
    Favorite?: boolean
    idUserClient: string
  }

  export type ImageRoadMapCreateManyUserRoadMapByRoadMapIdInput = {
    id?: string
    image: string
  }

  export type reportRoadMapCreateManyUserReportRoadMapByIdRoadMapInput = {
    id?: string
    content: string
    idUserReport: string
  }

  export type notificationRoadMapCreateManyUserNotificationRoadMapByIdRoadMapInput = {
    id?: string
    idClient: string
  }

  export type AvaliationRoadMapUpdateWithoutUserRoadMapByIdRoadMapInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientByEmail?: User_ClientUpdateOneRequiredWithoutAvaliationsByEmailClientNestedInput
    userClientByIdClient?: User_ClientUpdateOneRequiredWithoutAvaliationsRoadMapByIdClientNestedInput
  }

  export type AvaliationRoadMapUncheckedUpdateWithoutUserRoadMapByIdRoadMapInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
  }

  export type AvaliationRoadMapUncheckedUpdateManyWithoutUserRoadMapByIdRoadMapInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    avaliation?: IntFieldUpdateOperationsInput | number
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
  }

  export type CommentRoadMapUpdateWithoutUserRoadMapByRoadMapIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientByClientEmail?: User_ClientUpdateOneRequiredWithoutCommentRoadMapByClientEmailNestedInput
    userClientByClientId?: User_ClientUpdateOneRequiredWithoutCommentRoadMapByClientIdNestedInput
  }

  export type CommentRoadMapUncheckedUpdateWithoutUserRoadMapByRoadMapIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
  }

  export type CommentRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataPublication?: DateTimeFieldUpdateOperationsInput | Date | string
    content?: StringFieldUpdateOperationsInput | string
    userClientEmail?: StringFieldUpdateOperationsInput | string
    idUserClient?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteRoadMapUpdateWithoutUserRoadMapPointByRoadMapIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    userClientByClientId?: User_ClientUpdateOneRequiredWithoutFavoriteRoadMapPointByClientIdNestedInput
  }

  export type FavoriteRoadMapUncheckedUpdateWithoutUserRoadMapPointByRoadMapIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    idUserClient?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteRoadMapUncheckedUpdateManyWithoutUserRoadMapPointByRoadMapIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    Favorite?: BoolFieldUpdateOperationsInput | boolean
    idUserClient?: StringFieldUpdateOperationsInput | string
  }

  export type ImageRoadMapUpdateWithoutUserRoadMapByRoadMapIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
  }

  export type ImageRoadMapUncheckedUpdateWithoutUserRoadMapByRoadMapIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
  }

  export type ImageRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
  }

  export type Ponto_TuristicoUpdateWithoutRoadMapRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    local?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    avaliationTouristPoint?: AvaliationTouristPointUpdateManyWithoutUserTouristPointByIdTouristPointNestedInput
    commentTouristPointByTouristPointId?: CommentTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUpdateManyWithoutUserReportTouristPointByIdTouristPointNestedInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUpdateManyWithoutUserNotificationTouristPointByIdTouristPointNestedInput
  }

  export type Ponto_TuristicoUncheckedUpdateWithoutRoadMapRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    local?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    avaliationTouristPoint?: AvaliationTouristPointUncheckedUpdateManyWithoutUserTouristPointByIdTouristPointNestedInput
    commentTouristPointByTouristPointId?: CommentTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    FavoriteTouristPointByTouristPointId?: FavoriteTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    ImageTouristPointByTouristPointId?: ImageTouristPointUncheckedUpdateManyWithoutUserTouristPointByTouristPointIdNestedInput
    userReportTouristPointByIdTouristPoint?: reportTouristPointUncheckedUpdateManyWithoutUserReportTouristPointByIdTouristPointNestedInput
    userNotificationTouristPointByIdTouristPoint?: notificationTouristPointUncheckedUpdateManyWithoutUserNotificationTouristPointByIdTouristPointNestedInput
  }

  export type Ponto_TuristicoUncheckedUpdateManyWithoutRoadMapRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    local?: StringFieldUpdateOperationsInput | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
  }

  export type Ponto_ComercialUpdateWithoutRoadMapRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    User_Business?: User_BusinessUpdateOneRequiredWithoutPontosComerciaisNestedInput
    avaliationCommercialPoint?: AvaliationCommercialPointUpdateManyWithoutUserCommercialPointByIdCommercialPointNestedInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUpdateManyWithoutUserReportCommercialPointByIdCommercialPointNestedInput
  }

  export type Ponto_ComercialUncheckedUpdateWithoutRoadMapRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    businessId?: StringFieldUpdateOperationsInput | string
    avaliationCommercialPoint?: AvaliationCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByIdCommercialPointNestedInput
    commentCommercialPointByCommercialPointId?: CommentCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    FavoriteCommercialPointByCommercialPointId?: FavoriteCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    ImageCommercialPointByCommercialPointId?: ImageCommercialPointUncheckedUpdateManyWithoutUserCommercialPointByCommercialPointIdNestedInput
    reportCommercialPointByIdCommercialPoint?: reportCommercialPointUncheckedUpdateManyWithoutUserReportCommercialPointByIdCommercialPointNestedInput
  }

  export type Ponto_ComercialUncheckedUpdateManyWithoutRoadMapRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    local?: StringFieldUpdateOperationsInput | string
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    businessId?: StringFieldUpdateOperationsInput | string
  }

  export type CountryUpdateWithoutRoadMapRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    StateByCountryName?: StateUpdateManyWithoutCountryByCountryNameNestedInput
    CityByCountryName?: CityUpdateManyWithoutCityByCountryNameNestedInput
  }

  export type CountryUncheckedUpdateWithoutRoadMapRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    StateByCountryName?: StateUncheckedUpdateManyWithoutCountryByCountryNameNestedInput
    CityByCountryName?: CityUncheckedUpdateManyWithoutCityByCountryNameNestedInput
  }

  export type CountryUncheckedUpdateManyWithoutRoadMapRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type StateUpdateWithoutRoadMapRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CountryByCountryName?: CountryUpdateOneRequiredWithoutStateByCountryNameNestedInput
    StateByStateName?: CityUpdateManyWithoutStateByStateNameNestedInput
  }

  export type StateUncheckedUpdateWithoutRoadMapRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    countryName?: StringFieldUpdateOperationsInput | string
    StateByStateName?: CityUncheckedUpdateManyWithoutStateByStateNameNestedInput
  }

  export type StateUncheckedUpdateManyWithoutRoadMapRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    countryName?: StringFieldUpdateOperationsInput | string
  }

  export type CityUpdateWithoutRoadMapRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    StateByStateName?: StateUpdateOneRequiredWithoutStateByStateNameNestedInput
    CityByCountryName?: CountryUpdateOneRequiredWithoutCityByCountryNameNestedInput
  }

  export type CityUncheckedUpdateWithoutRoadMapRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    countryName?: StringFieldUpdateOperationsInput | string
    stateName?: StringFieldUpdateOperationsInput | string
  }

  export type CityUncheckedUpdateManyWithoutRoadMapRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    countryName?: StringFieldUpdateOperationsInput | string
    stateName?: StringFieldUpdateOperationsInput | string
  }

  export type reportRoadMapUpdateWithoutUserReportRoadMapByIdRoadMapInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    userReportRoadMapByIdUserReport?: User_ClientUpdateOneRequiredWithoutUserReportRoadMapByIdUserReportNestedInput
  }

  export type reportRoadMapUncheckedUpdateWithoutUserReportRoadMapByIdRoadMapInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    idUserReport?: StringFieldUpdateOperationsInput | string
  }

  export type reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdRoadMapInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    idUserReport?: StringFieldUpdateOperationsInput | string
  }

  export type notificationRoadMapUpdateWithoutUserNotificationRoadMapByIdRoadMapInput = {
    id?: StringFieldUpdateOperationsInput | string
    userNotificationRoadMapByIdClient?: User_ClientUpdateOneRequiredWithoutUserNotificationRoadMapByIdClientNestedInput
  }

  export type notificationRoadMapUncheckedUpdateWithoutUserNotificationRoadMapByIdRoadMapInput = {
    id?: StringFieldUpdateOperationsInput | string
    idClient?: StringFieldUpdateOperationsInput | string
  }

  export type notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdRoadMapInput = {
    id?: StringFieldUpdateOperationsInput | string
    idClient?: StringFieldUpdateOperationsInput | string
  }

  export type StateCreateManyCountryByCountryNameInput = {
    id?: string
    name: string
  }

  export type CityCreateManyCityByCountryNameInput = {
    id?: string
    name: string
    stateName: string
  }

  export type StateUpdateWithoutCountryByCountryNameInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    StateByStateName?: CityUpdateManyWithoutStateByStateNameNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutStateRelationNestedInput
  }

  export type StateUncheckedUpdateWithoutCountryByCountryNameInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    StateByStateName?: CityUncheckedUpdateManyWithoutStateByStateNameNestedInput
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutStateRelationNestedInput
  }

  export type StateUncheckedUpdateManyWithoutCountryByCountryNameInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type CityUpdateWithoutCityByCountryNameInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    StateByStateName?: StateUpdateOneRequiredWithoutStateByStateNameNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutCityRelationNestedInput
  }

  export type CityUncheckedUpdateWithoutCityByCountryNameInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    stateName?: StringFieldUpdateOperationsInput | string
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutCityRelationNestedInput
  }

  export type CityUncheckedUpdateManyWithoutCityByCountryNameInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    stateName?: StringFieldUpdateOperationsInput | string
  }

  export type Travel_Road_MapUpdateWithoutCountryRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    userClient?: User_ClientUpdateOneRequiredWithoutTravelRoadMapsNestedInput
    AvaliationRoadMap?: AvaliationRoadMapUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapUncheckedUpdateWithoutCountryRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    idCreator?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapUncheckedUpdateManyWithoutCountryRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    idCreator?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
  }

  export type CityCreateManyStateByStateNameInput = {
    id?: string
    name: string
    countryName: string
  }

  export type CityUpdateWithoutStateByStateNameInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    CityByCountryName?: CountryUpdateOneRequiredWithoutCityByCountryNameNestedInput
    RoadMapRelation?: Travel_Road_MapUpdateManyWithoutCityRelationNestedInput
  }

  export type CityUncheckedUpdateWithoutStateByStateNameInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    countryName?: StringFieldUpdateOperationsInput | string
    RoadMapRelation?: Travel_Road_MapUncheckedUpdateManyWithoutCityRelationNestedInput
  }

  export type CityUncheckedUpdateManyWithoutStateByStateNameInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    countryName?: StringFieldUpdateOperationsInput | string
  }

  export type Travel_Road_MapUpdateWithoutStateRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    userClient?: User_ClientUpdateOneRequiredWithoutTravelRoadMapsNestedInput
    AvaliationRoadMap?: AvaliationRoadMapUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapUncheckedUpdateWithoutStateRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    idCreator?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CityRelation?: CityUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapUncheckedUpdateManyWithoutStateRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    idCreator?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
  }

  export type Travel_Road_MapUpdateWithoutCityRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    userClient?: User_ClientUpdateOneRequiredWithoutTravelRoadMapsNestedInput
    AvaliationRoadMap?: AvaliationRoadMapUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapUncheckedUpdateWithoutCityRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    idCreator?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
    AvaliationRoadMap?: AvaliationRoadMapUncheckedUpdateManyWithoutUserRoadMapByIdRoadMapNestedInput
    commentRoadMapByRoadMapId?: CommentRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    FavoriteRoadMapByRoadMapId?: FavoriteRoadMapUncheckedUpdateManyWithoutUserRoadMapPointByRoadMapIdNestedInput
    ImageRoadMapByRoadMapId?: ImageRoadMapUncheckedUpdateManyWithoutUserRoadMapByRoadMapIdNestedInput
    PontosTuristicosRelation?: Ponto_TuristicoUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    PontosComerciaisRelation?: Ponto_ComercialUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    CountryRelation?: CountryUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    StateRelation?: StateUncheckedUpdateManyWithoutRoadMapRelationNestedInput
    userReportRoadMapByIdRoadMap?: reportRoadMapUncheckedUpdateManyWithoutUserReportRoadMapByIdRoadMapNestedInput
    userNotificationRoadMapByIdRoadMap?: notificationRoadMapUncheckedUpdateManyWithoutUserNotificationRoadMapByIdRoadMapNestedInput
  }

  export type Travel_Road_MapUncheckedUpdateManyWithoutCityRelationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    dataPublication?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    idCreator?: StringFieldUpdateOperationsInput | string
    avaliationValue?: IntFieldUpdateOperationsInput | number
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    userImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    reportNumber?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}